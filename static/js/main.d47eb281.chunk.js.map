{"version":3,"sources":["context/LoadingContext.js","components/HomePage.js","api/apiService.js","utils/utils.js","components/DataView.js","components/Popup.js","components/PreviewModal.js","components/DataInputPage.js","components/AllHydroDataPage.js","components/StationDetailsPage.js","components/Loading/Loading.js","App.js","index.js"],"names":["LoadingContext","createContext","useLoading","useContext","LoadingProvider","_ref","children","loading","setLoading","useState","value","React","createElement","Provider","HomePage","useEffect","timer","setTimeout","clearTimeout","className","href","target","rel","API_BASE_URL","mapPeriodLabel","period","soma_ult_leituras","ultimos 7d","ultimos 30d","ultimos 12 meses","rainSummaryLabels","hydroDataLabels","data","chuva","nivel","vazao","detailLabels","nome","bacia","subbacia","rio","estado","municipio","latitude","longitude","escala","operadora","operando","responsavel","telemetrica","sedimentos","areadrenagem","climatologica","pluviometro","tipoestacao","descargaliquida","qualidadedaagua","registradornivel","registradorchuva","tanqueevapo","headerDictionary","stationCode","sum_chuva","formatDate","dateString","date","Date","localTimeZone","Intl","DateTimeFormat","resolvedOptions","timeZone","toLocaleString","formatNumber","number","undefined","minimumFractionDigits","safeToString","toString","replaceColumnNames","labelMap","length","Object","keys","map","header","row","reduce","acc","key","values","DataView","memo","selectedDetails","selectedRainSummary","selectedHydro24h","navigate","useNavigate","style","marginBottom","renderDetails","stationData","some","v","width","textAlign","detalhes","items","renderHydroData","hydroData","stationName","dataToShow","slice","item","index","onClick","state","hidro_24h","renderRainSummary","rainSummary","filter","chuva_ult","Popup","message","onClose","PreviewModal","onConfirm","onCancel","console","log","renderTable","title","tableData","columns","isScrollable","arguments","col","colIndex","detalhesData","d","category","hidro24hData","chuvaUltData","selectedDetailColumns","selectedHydrodataColumns","selectedRainSummaryColumns","DataInputPage","codes","setCodes","localStorage","getItem","setData","JSON","parse","selectedData","setSelectedData","setSelectedDetails","showPopup","setShowPopup","popupMessage","setPopupMessage","showPreview","setShowPreview","previewData","setPreviewData","setSelectedRainSummary","setSelectedHydro24h","memoizedData","setItem","stringify","initialSelectedDetails","initialSelectedRainSummary","initialSelectedHydro24h","fetchData","async","noDetailsSelected","noRainSummarySelected","noHydro24hSelected","codesArray","split","code","trim","fetchedData","requests","details","axios","get","concat","catch","error","fetchStationDetails","hidro24h","fetchHydro24h","chuvaUlt","fetchRainSummary","Promise","all","flattenData","flattened","forEach","filteredItem","push","periodKey","periodLabel","setColumnWidths","worksheet","objectMaxLength","i","j","Math","max","wch","handleDetailsCheckboxChange","e","[object Object]","name","checked","handleRainSummaryCheckboxChange","handleHydro24hCheckboxChange","confirmDownload","flattenedData","workbook","XLSX","book_new","detailsData","detailsDataWithHeaders","detailsWorksheet","aoa_to_sheet","book_append_sheet","hydro24hData","hydro24hDataWithHeaders","hydro24hWorksheet","rainSummaryData","rainSummaryDataWithHeaders","rainSummaryWorksheet","SheetNames","warn","xlsxData","bookType","type","blob","Blob","saveAs","handleDownloadData","selectAll","isSelected","newSelectedDetails","newSelectedRainSummary","newSelectedHydro24h","showDetails","setShowDetails","showRainSummary","setShowRainSummary","showHydro24h","setShowHydro24h","toggleVisibility","prev","rows","cols","placeholder","onChange","resize","Fragment","filteredData","fromEntries","entries","_ref2","fetchDataAndFilter","allData","closePopup","closePreview","AllHydroDataPage","location","useLocation","margin","StationDetailsPage","_location$state","codigo","Loading","LoadingOverlay","App","Router","basename","Link","to","Routes","Route","path","exact","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d47eb281.chunk.js","sourcesContent":["// src/context/LoadingContext.js\nimport React, { createContext, useState, useContext } from 'react';\n\nconst LoadingContext = createContext();\n\nexport const useLoading = () => {\n  return useContext(LoadingContext);\n};\n\nexport const LoadingProvider = ({ children }) => {\n  const [loading, setLoading] = useState(false);\n\n  const value = {\n    loading,\n    setLoading\n  };\n\n  return (\n    <LoadingContext.Provider value={value}>\n      {children}\n    </LoadingContext.Provider>\n  );\n};\n","import React, { useEffect } from 'react';\nimport './css/HomePage.css';\nimport { useLoading } from '../context/LoadingContext';\n\nconst HomePage = () => {\n  const { setLoading } = useLoading();\n\n  useEffect(() => {\n    setLoading(true);\n    const timer = setTimeout(() => setLoading(false), 800);\n    return () => clearTimeout(timer);\n  }, [setLoading]);\n\n  return (\n    <div className=\"home-container\">\n      <header className=\"home-header\">\n        <h1>Portal HidroInfo</h1>\n        <p>Informações hidrológicas e meteorológicas ao seu alcance.</p>\n      </header>\n\n      <div className=\"home-content\">\n        <section className=\"home-section\">\n          <h3>Sobre o Aplicativo</h3>\n          <p>\n            O aplicativo HidroWeb mobile é uma ferramenta integrante do Sistema Nacional de Informações sobre Recursos Hídricos (SNIRH), gerenciado pela Agência Nacional de Águas (ANA), e permite o acesso aos dados telemétricos coletados pela Rede Hidrometeorológica Nacional (RHN), reunindo dados de chuvas, níveis e vazões de rios, além de informações sobre vazões afluentes, defluentes, níveis e volumes de vários reservatórios em todo o território nacional.\n          </p>\n          <p>\n            Trata-se de uma importante ferramenta para a sociedade e instituições públicas e privadas, pois os dados de reservatórios e aqueles coletados pelas estações hidrometeorológicas são imprescindíveis para a gestão dos recursos hídricos e em diversas atividades econômicas, como geração de energia, irrigação, navegação e indústria, além do projeto, manutenção e operação de infraestrutura hidráulica de pequeno e grande porte, como barragens, drenagem pluvial urbana e mesmo bueiros e telhados.\n          </p>\n          <p>\n            Por meio dessas informações, pode-se, ainda, acompanhar a ocorrência de eventos hidrológicos considerados críticos, inundações e secas, e se planejar medidas de mitigação dos impactos decorrente desses eventos. Mais que acompanhar esses fenômenos, o conjunto de dados até hoje coletados no âmbito da RHN também permite, em diversos casos, a simulação e previsão de eventos hidrológicos e de seus impactos em áreas urbanas ou rurais em diversas bacias hidrográficas.\n          </p>\n        </section>\n        <section className=\"home-section\">\n          <h3>Funcionalidades</h3>\n          <ul>\n            <li>Acesso a dados de estações meteorológicas em tempo real.</li>\n            <li>Visualização de históricos de níveis de água e vazões.</li>\n            <li>Alertas para eventos hidrológicos críticos.</li>\n            <li>Mapas interativos para localização das estações.</li>\n          </ul>\n        </section>\n        <section className=\"home-section\">\n          <h3>Como Utilizar</h3>\n          <p>\n            Navegue pelo aplicativo para explorar as diferentes funcionalidades oferecidas. Utilize o menu principal para acessar seções específicas como \"Estatísticas\", \"Alertas\", \"Mapas\" e muito mais.\n          </p>\n          <a href=\"https://www.snirh.gov.br\" target=\"_blank\" rel=\"noopener noreferrer\">Saiba mais</a>\n        </section>\n      </div>\n      <footer className=\"home-footer\">\n        <div className=\"footer-socials\">\n          <a href=\"#facebook\">Facebook</a>\n          <a href=\"#twitter\">Twitter</a>\n          <a href=\"#instagram\">Instagram</a>\n        </div>\n        <p>&copy; 2024 HidroInfo. Todos os direitos reservados.</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default HomePage;\n","// hydro-station-data/src/api/apiService.js\n\nimport axios from 'axios';\n\nconst API_BASE_URL = 'https://ows.snirh.gov.br/ords/servicos/hidro/';\n\n// Função para buscar detalhes da estação\nexport const fetchStationDetails = (code) => {\n  return axios.get(`${API_BASE_URL}estacao/${code}`)\n    .catch(error => {\n      console.error(`Erro ao buscar detalhes da estação ${code}:`, error);\n      throw error; // Re-throw para que o chamador lide com o erro\n    });\n};\n\n// Função para buscar dados hidrométricos das últimas 24 horas\nexport const fetchHydro24h = (code) => {\n  return axios.get(`${API_BASE_URL}estacao/24h/${code}`)\n    .catch(error => {\n      console.error(`Erro ao buscar dados hidrométricos para a estação ${code}:`, error);\n      throw error; // Re-throw para que o chamador lide com o erro\n    });\n};\n\n// Função para buscar o resumo de chuva\nexport const fetchRainSummary = (code) => {\n  return axios.get(`${API_BASE_URL}chuva_ult/${code}`)\n    .catch(error => {\n      console.error(`Erro ao buscar resumo de chuva para a estação ${code}:`, error);\n      throw error; // Re-throw para que o chamador lide com o erro\n    });\n};\n","// hydro-station-data/src/utils/utils.js\n\nexport const mapPeriodLabel = (period) => {\n    const periodMap = {\n        \"soma_ult_leituras\": \"24 HORAS\",\n        \"ultimos 7d\": \"7 DIAS\",\n        \"ultimos 30d\": \"30 DIAS\",\n        \"ultimos 12 meses\": \"12 MESES\"\n    };\n    return periodMap[period] || period;\n};\n\nexport const rainSummaryLabels = {\n    'soma_ult_leituras': '24 Horas',\n    \"ultimos 7d\": '7 Dias',\n    \"ultimos 30d\": '30 Dias',\n    \"ultimos 12 meses\": '12 Meses'\n};\n\nexport const hydroDataLabels = {\n    \"data\": \"Data\",\n    \"chuva\": \"Chuva (mm)\",\n    \"nivel\": \"Nível (cm)\",\n    \"vazao\": \"Vazão (m³/s)\"\n};\n\n// Mapeamento dos rótulos dos detalhes\nexport const detailLabels = {\n    nome: \"Nome\",\n    bacia: \"Bacia\",\n    subbacia: \"Sub-bacia\",\n    rio: \"Rio\",\n    estado: \"Estado\",\n    municipio: \"Município\", \n    latitude: \"Latitude\",\n    longitude: \"Longitude\",\n    escala: \"Escala\",\n    operadora: \"Operadora\",\n    operando: \"Operando\",\n    responsavel: \"Responsável\",\n    telemetrica: \"Telemétrica\",\n    sedimentos: \"Sedimentos\",\n    areadrenagem: \"Área de Drenagem\",\n    climatologica: \"Climatológica\",\n    pluviometro: \"Pluviômetro\",\n    tipoestacao: \"Tipo de Estação\",\n    descargaliquida: \"Descarga Líquida\",\n    qualidadedaagua: \"Qualidade da Água\",\n    registradornivel: \"Registrador de Nível\",\n    registradorchuva: \"Registrador de Chuva\",\n    tanqueevapo: \"Tanque Evaporimétrico\"\n};\n\n// Mapeamento dos rótulos para os cabeçalhos das tabelas\nexport const headerDictionary = {\n    stationCode: \"CÓDIGO DA ESTAÇÃO\",\n    nome: \"NOME\",\n    bacia: \"BACIA\",\n    subbacia: \"SUB-BACIA\",\n    rio: \"RIO\",\n    estado: \"ESTADO\",\n    municipio: \"MUNICÍPIO\",\n    responsavel: \"RESPONSÁVEL\",\n    operadora: \"OPERADORA\",\n    latitude: \"LATITUDE\",\n    longitude: \"LONGITUDE\",\n    areadrenagem: \"ÁREA DE DRENAGEM\",\n    tipoestacao: \"TIPO DE ESTAÇÃO\",\n    operando: \"OPERANDO\",\n    telemetrica: \"TELEMETRIA\",\n    climatologica: \"CLIMATOLÓGICA\",\n    pluviometro: \"PLUVIÔMETRO\",\n    registradorchuva: \"REGISTRADOR DE CHUVA\",\n    escala: \"ESCALA\",\n    registradornivel: \"REGISTRADOR DE NÍVEL\",\n    descargaliquida: \"DESCARGA LÍQUIDA\",\n    sedimentos: \"SEDIMENTOS\",\n    qualidadedaagua: \"QUALIDADE DA ÁGUA\",\n    tanqueevapo: \"TANQUE EVAPORIMÉTRICO\",\n    data: \"DATA\",\n    chuva: \"CHUVA (MM)\",\n    nivel: \"NÍVEL (CM)\",\n    vazao: \"VAZÃO (M³/S)\",\n    'soma_ult_leituras': \"PERÍODO\",\n    sum_chuva: \"SOMA DA CHUVA (MM)\"\n};\n\n// Função para formatar as datas no horário local do usuário\nexport const formatDate = (dateString) => {\n    if (!dateString) return 'Data inválida';  // Verifica se a data é nula ou indefinida\n    const date = new Date(dateString);\n    const localTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    return date.toLocaleString('pt-BR', { timeZone: localTimeZone });\n};\n\n// Função para formatar os números\nexport const formatNumber = (number) => {\n    if (number === null || number === undefined) return 'N/A';  // Trata valores nulos ou indefinidos\n    if (number % 1 === 0) {\n        return number.toLocaleString('pt-BR'); // Formata números inteiros\n    }\n    return number.toLocaleString('pt-BR', { minimumFractionDigits: 1 }); // Formata números decimais\n};\n\n// Função para tratar valores nulos ou indefinidos\nexport const safeToString = (value) => {\n    return value !== null && value !== undefined ? value.toString() : '';\n};\n\n\nexport const flattenData = (data, selectedData, selectedDetails, selectedHydro24h, selectedRainSummary) => {\n    const flattened = [];\n    Object.keys(data).forEach(stationCode => {\n      const stationData = data[stationCode];\n      if (selectedData.detalhes && stationData.detalhes) {\n        stationData.detalhes.items.forEach(item => {\n          const filteredItem = Object.keys(item).reduce((acc, key) => {\n            if (selectedDetails[key]) {\n              acc[key] = item[key];\n            }\n            return acc;\n          }, {});\n          flattened.push({ category: 'Detalhes', stationCode, ...filteredItem });\n        });\n      }\n      if (selectedData.hidro_24h && stationData.hidro_24h) {\n        stationData.hidro_24h.items.forEach(item => {\n          const filteredItem = Object.keys(item).reduce((acc, key) => {\n            if (selectedHydro24h[key]) {\n              acc[key] = item[key];\n            }\n            return acc;\n          }, {});\n          flattened.push({ category: 'Hidro 24h', stationCode, ...filteredItem });\n        });\n      }\n      if (selectedData.chuva_ult && stationData.chuva_ult) {\n        stationData.chuva_ult.items.forEach(item => {\n          const periodKey = item[\"'soma_ult_leituras'\"];\n          if (selectedRainSummary[periodKey]) {\n            const periodLabel = mapPeriodLabel(periodKey);\n            flattened.push({\n              category: 'Resumo chuvas',\n              stationCode,\n              period: periodLabel,\n              sum_chuva: item.sum_chuva\n            });\n          }\n        });\n      }\n    });\n    return flattened;\n  };\n  \n  export const replaceColumnNames = (data, labelMap) => {\n    if (data.length === 0) return data;\n  \n    const newHeaders = Object.keys(data[0]).map(header => labelMap[header] || header);\n    const newData = data.map(row => {\n      return Object.keys(row).reduce((acc, key) => {\n        acc[labelMap[key] || key] = row[key];\n        return acc;\n      }, {});\n    });\n  \n    return [newHeaders, ...newData.map(row => Object.values(row))];\n  };\n  \n  export const setColumnWidths = (worksheet, data) => {\n    const objectMaxLength = [];\n    for (let i = 0; i < data.length; i++) {\n      const value = Object.values(data[i]);\n      for (let j = 0; j < value.length; j++) {\n        objectMaxLength[j] = Math.max(objectMaxLength[j] || 0, safeToString(value[j]).length);\n      }\n    }\n    worksheet['!cols'] = objectMaxLength.map(width => ({ wch: width + 2 }));\n  };\n  ","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/DataView.css';\nimport { detailLabels, formatNumber, formatDate , rainSummaryLabels } from '../utils/utils';\n\nconst DataView = React.memo(({ data, selectedDetails, selectedRainSummary, selectedHydro24h }) => {\n\n    const navigate = useNavigate();\n\n    const renderHydroData = (hydroData, stationCode, stationName) => {\n        if (!selectedHydro24h || !Object.values(selectedHydro24h).some(v => v)) return null;\n\n        const dataToShow = hydroData.slice(0, 5);\n        if (!hydroData || hydroData.length === 0) return null;\n\n        return (\n            <div>\n                <h5>Dados Hidrométricos 24h</h5>\n                <table>\n                    <thead>\n                        <tr>\n                            {selectedHydro24h.data && <th>Data</th>}\n                            {selectedHydro24h.chuva && <th style={{ textAlign: 'center' }}>Chuva (mm)</th>}\n                            {selectedHydro24h.nivel && <th style={{ textAlign: 'center' }}>Nível (cm)</th>}\n                            {selectedHydro24h.vazao && <th style={{ textAlign: 'center' }}>Vazão (m³/s)</th>}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {dataToShow.map((item, index) => (\n                            <tr key={index}>\n                                {selectedHydro24h.data && <td>{formatDate(item.data)}</td>}\n                                {selectedHydro24h.chuva && <td style={{ textAlign: 'center' }}>{formatNumber(item.chuva)}</td>}\n                                {selectedHydro24h.nivel && <td style={{ textAlign: 'center' }}>{formatNumber(item.nivel)}</td>}\n                                {selectedHydro24h.vazao && <td style={{ textAlign: 'center' }}>{formatNumber(item.vazao)}</td>}\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n                <button\n                    className=\"view-more-button\"\n                    onClick={() => navigate('/all-hydro-data', { state: { data: hydroData, stationCode, stationName } })}\n                >\n                    Ver Mais\n                </button>\n            </div>\n        );\n    };\n\n    const renderRainSummary = (rainSummary, stationCode) => {\n        if (!selectedRainSummary || !Object.values(selectedRainSummary).some(v => v)) return null;\n        if (!rainSummary || rainSummary.length === 0) return null;\n\n        return (\n            <div>\n                <h5>Resumo de Chuva</h5>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Período</th>\n                            <th style={{ textAlign: 'center' }}>Soma da Chuva (mm)</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rainSummary\n                            .filter(item => selectedRainSummary[item[\"'soma_ult_leituras'\"]])\n                            .map((item, index) => (\n                                <tr key={index}>\n                                    <td>{rainSummaryLabels[item[\"'soma_ult_leituras'\"]] || item[\"'soma_ult_leituras'\"]}</td>\n                                    <td style={{ textAlign: 'center' }}>{formatNumber(item.sum_chuva)}</td>\n                                </tr>\n                            ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    };\n\n\n    const renderDetails = (stationCode, stationData) => {\n        if (!selectedDetails || !Object.values(selectedDetails).some(v => v)) return null;\n\n        return (\n            <div>\n                <h5>Detalhes</h5>\n                <table>\n                    <colgroup>\n                        <col style={{ width: '155px' }} />\n                        <col style={{ width: 'auto' }} />\n                    </colgroup>\n                    <thead>\n                        <tr>\n                            <th>Chave</th>\n                            <th style={{ textAlign: 'center' }}>Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Object.keys(stationData.detalhes.items[0]).map((key) => (\n                            selectedDetails[key] && (\n                                <tr key={key}>\n                                    <td>{detailLabels[key]}</td>\n                                    <td style={{ textAlign: 'center' }}>{stationData.detalhes.items[0][key]}</td>\n                                </tr>\n                            )\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    };\n\n    if (!data) return null;\n\n    return (\n        <div className=\"stations-container\">\n            {Object.keys(data).map((stationCode) => (\n                <div className=\"station-card\" key={stationCode}>\n                    <h4>Estação {stationCode}</h4>\n                    <p style={{ marginBottom: '-5px ' }}>{data[stationCode].nome || 'Nome não disponível'}</p>\n                    {renderDetails(stationCode, data[stationCode])}\n                    {renderHydroData(data[stationCode].hidro_24h.items, stationCode, data[stationCode].nome)}\n                    {renderRainSummary(data[stationCode].chuva_ult.items, stationCode)}\n                </div>\n            ))}\n        </div>\n    );\n});\n\nexport default DataView;\n","import React from 'react';\nimport './css/Popup.css'; // Importa o CSS\n\nconst Popup = ({ message, onClose }) => {\n  return (\n    <div className=\"popup-overlay\">\n      <div className=\"popup-content\">\n        <p>{message}</p>\n        <button onClick={onClose}>Fechar</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Popup;\n","import React from 'react';\r\nimport './css/PreviewModal.css';\r\nimport { mapPeriodLabel, headerDictionary, formatDate, formatNumber, detailLabels } from '../utils/utils';\r\n\r\nconst PreviewModal = ({ data, onConfirm, onCancel, selectedDetails = {}, selectedHydro24h = {}, selectedRainSummary = {} }) => {\r\n  console.log('Dados para pré-visualização:', data);\r\n\r\n  if (!data) {\r\n    return null;\r\n  }\r\n\r\n  const renderTable = (title, tableData, columns, isScrollable = false) => (\r\n    <div className={isScrollable ? \"table-overflow\" : \"\"}>\r\n      <h4>{title}</h4>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {columns.map((col, index) => (\r\n              <th key={index}>{headerDictionary[col] || detailLabels[col] || col}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableData.map((row, index) => (\r\n            <tr key={index}>\r\n              {columns.map((col, colIndex) => (\r\n                <td key={colIndex}>\r\n                {col === 'soma_ult_leituras'\r\n                  ? mapPeriodLabel(row[col])\r\n                  : col === 'data'\r\n                  ? formatDate(row[col])\r\n                  : col === 'PERÍODO'\r\n                  ? row['period'] // Usando 'period' para acessar os dados corretos\r\n                  : row[col] !== null && row[col] !== undefined\r\n                  ? formatNumber(row[col])\r\n                  : 'N/A'}\r\n              </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n\r\n  const detalhesData = data.filter(d => d.category === 'Detalhes');\r\n  const hidro24hData = data.filter(d => d.category === 'Hidro 24h');\r\n  const chuvaUltData = data.filter(d => d.category === 'Resumo chuvas');\r\n\r\n  const selectedDetailColumns = Object.keys(selectedDetails).filter(key => selectedDetails[key]);\r\n  const selectedHydrodataColumns = Object.keys(selectedHydro24h).filter(key => selectedHydro24h[key]);\r\n  const selectedRainSummaryColumns = ['stationCode', 'PERÍODO', 'sum_chuva'];\r\n\r\n  return (\r\n    <div className=\"preview-modal-overlay\">\r\n      <div className=\"preview-modal\">\r\n        <h3>Pré-visualização dos Dados</h3>\r\n        <div className=\"preview-table\">\r\n          {selectedDetailColumns.length > 0 && detalhesData.length > 0 && renderTable('Ficha das estações', detalhesData, ['stationCode', ...selectedDetailColumns], true)}\r\n          {selectedRainSummaryColumns.length > 0 && chuvaUltData.length > 0 && renderTable('Resumo de chuvas', chuvaUltData, selectedRainSummaryColumns)}\r\n          {selectedHydrodataColumns.length > 0 && hidro24hData.length > 0 && renderTable('Histórico 24h', hidro24hData, ['stationCode', ...selectedHydrodataColumns])}\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <button className=\"confirm-button\" onClick={onConfirm}>Confirmar Download</button>\r\n          <button className=\"cancel-button\" onClick={onCancel}>Cancelar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewModal;\r\n","// hydro-station-data/src/components/DataInputPage.js\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchStationDetails, fetchHydro24h, fetchRainSummary } from '../api/apiService';\nimport DataView from './DataView';\nimport './css/DataInputPage.css';\nimport Popup from './Popup';\nimport { saveAs } from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { detailLabels, hydroDataLabels, safeToString, rainSummaryLabels, mapPeriodLabel, replaceColumnNames, setColumnWidths } from '../utils/utils';\nimport { useLoading } from '../context/LoadingContext';\nimport PreviewModal from './PreviewModal';\n\nconst DataInputPage = () => {\n  const { setLoading } = useLoading();\n  const [codes, setCodes] = useState(localStorage.getItem('codes') || '');\n  const [data, setData] = useState(JSON.parse(localStorage.getItem('data')) || null);\n  const [selectedData, setSelectedData] = useState(JSON.parse(localStorage.getItem('selectedData')) || {\n    detalhes: true,\n    hidro_24h: true,\n    chuva_ult: true,\n  });\n  const [selectedDetails, setSelectedDetails] = useState(JSON.parse(localStorage.getItem('selectedDetails')) || {});\n  const [showPopup, setShowPopup] = useState(false);\n  const [popupMessage, setPopupMessage] = useState('');\n  const [showPreview, setShowPreview] = useState(false);\n  const [previewData, setPreviewData] = useState([]);\n  const [selectedRainSummary, setSelectedRainSummary] = useState(JSON.parse(localStorage.getItem('selectedRainSummary')) || {});\n  const [selectedHydro24h, setSelectedHydro24h] = useState(JSON.parse(localStorage.getItem('selectedHydro24h')) || {});\n\n  const memoizedData = {};\n\n  useEffect(() => {\n    localStorage.setItem('codes', codes);\n  }, [codes]);\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(data));\n  }, [data]);\n\n  useEffect(() => {\n    localStorage.setItem('selectedData', JSON.stringify(selectedData));\n  }, [selectedData]);\n\n  useEffect(() => {\n    localStorage.setItem('selectedDetails', JSON.stringify(selectedDetails));\n  }, [selectedDetails]);\n\n  useEffect(() => {\n    localStorage.setItem('selectedRainSummary', JSON.stringify(selectedRainSummary));\n  }, [selectedRainSummary]);\n\n  useEffect(() => {\n    localStorage.setItem('selectedHydro24h', JSON.stringify(selectedHydro24h));\n  }, [selectedHydro24h]);\n\n  useEffect(() => {\n    const allDetailKeys = Object.keys(detailLabels);\n    const initialSelectedDetails = allDetailKeys.reduce((acc, key) => {\n      acc[key] = selectedDetails[key] || false;\n      return acc;\n    }, {});\n    setSelectedDetails(initialSelectedDetails);\n  }, []);\n\n  useEffect(() => {\n    const allRainKeys = [\n      'soma_ult_leituras',\n      \"ultimos 7d\",\n      \"ultimos 30d\",\n      \"ultimos 12 meses\"\n    ];\n    const initialSelectedRainSummary = allRainKeys.reduce((acc, key) => {\n      acc[key] = selectedRainSummary[key] || false;\n      return acc;\n    }, {});\n    setSelectedRainSummary(initialSelectedRainSummary);\n  }, []);\n\n\n  useEffect(() => {\n    const allHydro24hKeys = [\n      \"data\",\n      \"chuva\",\n      \"nivel\",\n      \"vazao\"\n    ];\n    const initialSelectedHydro24h = allHydro24hKeys.reduce((acc, key) => {\n      acc[key] = selectedHydro24h[key] || false;\n      return acc;\n    }, {});\n    setSelectedHydro24h(initialSelectedHydro24h);\n  }, []);\n\n\n  const fetchData = async () => {\n    if (!codes) {\n      setPopupMessage('Por favor, digite os códigos das estações.');\n      setShowPopup(true);\n      return null;\n    }\n\n    const noDetailsSelected = selectedData.detalhes && !Object.values(selectedDetails).some(v => v);\n    const noRainSummarySelected = selectedData.chuva_ult && !Object.values(selectedRainSummary).some(v => v);\n    const noHydro24hSelected = selectedData.hidro_24h && !Object.values(selectedHydro24h).some(v => v);\n\n    if (noDetailsSelected && noRainSummarySelected && noHydro24hSelected) {\n      setPopupMessage('Por favor, selecione pelo menos um filtro em uma das categorias.');\n      setShowPopup(true);\n      return null;\n    }\n\n    setLoading(true);\n    const codesArray = codes.split(',').map(code => code.trim());\n    const fetchedData = {};\n\n    const requests = codesArray.map(async (code) => {\n      if (memoizedData[code]) {\n        fetchedData[code] = memoizedData[code];\n        return;\n      }\n\n      fetchedData[code] = {};\n\n      try {\n        const details = await fetchStationDetails(code);\n        // console.log(`Detalhes da estação ${code}:`, details.data);\n        if (details.data && details.data.items && details.data.items[0]) {\n          fetchedData[code].nome = details.data.items[0].nome;\n          if (selectedData.detalhes) {\n            fetchedData[code].detalhes = details.data;\n          }\n        }\n      } catch (error) {\n        console.error(`Erro ao buscar detalhes da estação ${code}:`, error);\n      }\n\n      if (selectedData.hidro_24h) {\n        try {\n          const hidro24h = await fetchHydro24h(code);\n          // console.log(`Dados hidrométricos 24h da estação ${code}:`, hidro24h.data);\n          fetchedData[code].hidro_24h = hidro24h.data;\n        } catch (error) {\n          console.error(`Erro ao buscar dados hidrométricos para a estação ${code}:`, error);\n        }\n      }\n\n      if (selectedData.chuva_ult) {\n        try {\n          const chuvaUlt = await fetchRainSummary(code);\n          // console.log(`Resumo de chuva da estação ${code}:`, chuvaUlt.data);\n          fetchedData[code].chuva_ult = chuvaUlt.data;\n        } catch (error) {\n          console.error(`Erro ao buscar resumo de chuva para a estação ${code}:`, error);\n        }\n      }\n\n      memoizedData[code] = fetchedData[code];\n    });\n\n    await Promise.all(requests);\n\n    // console.log('Dados completos:', fetchedData);\n    setData(fetchedData);\n    setLoading(false);\n    return fetchedData;\n  };\n\n  const handleFetchData = async () => {\n    const fetchedData = await fetchData();\n    if (fetchedData) {\n      setData(fetchedData);\n    }\n  };\n\n  const fetchDataAndFilter = async () => {\n    const fetchedData = await fetchData();\n    if (!fetchedData) return;\n\n    const filteredData = {};\n    for (let code in fetchedData) {\n      filteredData[code] = { ...fetchedData[code] };\n\n      if (selectedData.detalhes) {\n        filteredData[code].detalhes = {\n          items: fetchedData[code].detalhes.items.map((item) =>\n            Object.fromEntries(\n              Object.entries(item).filter(([key]) => selectedDetails[key])\n            )\n          )\n        };\n      } else {\n        delete filteredData[code].detalhes;\n      }\n\n      if (selectedData.hidro_24h) {\n        filteredData[code].hidro_24h = {\n          items: fetchedData[code].hidro_24h.items.map((item) =>\n            Object.fromEntries(\n              Object.entries(item).filter(([key]) => selectedHydro24h[key])\n            )\n          )\n        };\n      } else {\n        delete filteredData[code].hidro_24h;\n      }\n\n      if (selectedData.chuva_ult) {\n        filteredData[code].chuva_ult = {\n          items: fetchedData[code].chuva_ult.items.filter((item) => {\n            const periodKey = item[\"'soma_ult_leituras'\"];\n            return selectedRainSummary[periodKey];\n          })\n        };\n      } else {\n        delete filteredData[code].chuva_ult;\n      }\n\n    }\n\n    console.log('Dados filtrados:', filteredData);\n    return filteredData;\n  };\n\n\n  const handlePreview = async () => {\n    const filteredData = await fetchDataAndFilter();\n    if (filteredData) {\n      const allData = flattenData(filteredData);\n      console.log('Dados para pré-visualização:', allData);\n      setPreviewData(allData);\n      setShowPreview(true);\n    }\n  };\n\n\n  const flattenData = (data) => {\n    const flattened = [];\n    Object.keys(data).forEach(stationCode => {\n      const stationData = data[stationCode];\n      if (selectedData.detalhes && stationData.detalhes) {\n        stationData.detalhes.items.forEach(item => {\n          const filteredItem = Object.keys(item).reduce((acc, key) => {\n            if (selectedDetails[key]) {\n              acc[key] = item[key];\n            }\n            return acc;\n          }, {});\n          flattened.push({ category: 'Detalhes', stationCode, ...filteredItem });\n        });\n      }\n      if (selectedData.hidro_24h && stationData.hidro_24h) {\n        stationData.hidro_24h.items.forEach(item => {\n          const filteredItem = Object.keys(item).reduce((acc, key) => {\n            if (selectedHydro24h[key]) {\n              acc[key] = item[key];\n            }\n            return acc;\n          }, {});\n          flattened.push({ category: 'Hidro 24h', stationCode, ...filteredItem });\n        });\n      }\n      if (selectedData.chuva_ult && stationData.chuva_ult) {\n        stationData.chuva_ult.items.forEach(item => {\n          const periodKey = item[\"'soma_ult_leituras'\"];\n          if (selectedRainSummary[periodKey]) {\n            const periodLabel = mapPeriodLabel(periodKey);\n            flattened.push({\n              category: 'Resumo chuvas',\n              stationCode,\n              period: periodLabel,\n              sum_chuva: item.sum_chuva\n            });\n          }\n        });\n      }\n    });\n    return flattened;\n  };\n\n  // Função para substituir os nomes das colunas\n  // const replaceColumnNames = (data, labelMap) => {\n  //   if (data.length === 0) return data;\n\n  //   const newHeaders = Object.keys(data[0]).map(header => labelMap[header] || header);\n  //   const newData = data.map(row => {\n  //     return Object.keys(row).reduce((acc, key) => {\n  //       acc[labelMap[key] || key] = row[key];\n  //       return acc;\n  //     }, {});\n  //   });\n\n  //   return [newHeaders, ...newData.map(row => Object.values(row))];\n  // };\n\n  const handleDownloadData = async () => {\n    const fetchedData = await fetchData();\n    if (!fetchedData) return;\n  \n    const flattenedData = flattenData(fetchedData, selectedData, selectedDetails, selectedHydro24h, selectedRainSummary);\n  \n    const labelMap = {\n      stationCode: 'Código',\n      period: 'Período',\n      data: 'Data',\n      chuva: 'Chuva',\n      nivel: 'Nível (cm)',\n      vazao: 'Vazão (m³/s)',\n      sum_chuva: 'Soma da Chuva (mm)',\n      nome: 'Nome',\n      // Adicione outros mapeamentos conforme necessário\n    };\n  \n    const workbook = XLSX.utils.book_new();\n  \n    // Filtrando apenas os dados que foram selecionados e aparecem em DataView e PreviewModal\n    const detailsData = flattenedData.filter(d => d.category === 'Detalhes');\n    if (detailsData.length > 0 && Object.values(selectedDetails).some(v => v)) {\n      const detailsDataWithHeaders = replaceColumnNames(detailsData, labelMap);\n      const detailsWorksheet = XLSX.utils.aoa_to_sheet(detailsDataWithHeaders);\n      setColumnWidths(detailsWorksheet, detailsData);\n      XLSX.utils.book_append_sheet(workbook, detailsWorksheet, 'Detalhes');\n    }\n  \n    const hydro24hData = flattenedData.filter(d => d.category === 'Hidro 24h');\n    if (hydro24hData.length > 0 && Object.values(selectedHydro24h).some(v => v)) {\n      const hydro24hDataWithHeaders = replaceColumnNames(hydro24hData, labelMap);\n      const hydro24hWorksheet = XLSX.utils.aoa_to_sheet(hydro24hDataWithHeaders);\n      setColumnWidths(hydro24hWorksheet, hydro24hData);\n      XLSX.utils.book_append_sheet(workbook, hydro24hWorksheet, 'Hidro 24h');\n    }\n  \n    const rainSummaryData = flattenedData.filter(d => d.category === 'Resumo chuvas');\n    if (rainSummaryData.length > 0 && Object.values(selectedRainSummary).some(v => v)) {\n      const rainSummaryDataWithHeaders = replaceColumnNames(rainSummaryData, labelMap);\n      const rainSummaryWorksheet = XLSX.utils.aoa_to_sheet(rainSummaryDataWithHeaders);\n      setColumnWidths(rainSummaryWorksheet, rainSummaryData);\n      XLSX.utils.book_append_sheet(workbook, rainSummaryWorksheet, 'Resumo chuvas');\n    }\n  \n    if (workbook.SheetNames.length === 0) {\n      console.warn(\"Nenhuma categoria de dados selecionada para download.\");\n      setLoading(false);\n      return;\n    }\n  \n    const xlsxData = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n    const blob = new Blob([xlsxData], { type: 'application/octet-stream' });\n    saveAs(blob, 'hydro_station_data.xlsx');\n  \n    setLoading(false);\n  };\n  \n\n\n\n  const setColumnWidths = (worksheet, data) => {\n    const objectMaxLength = [];\n    for (let i = 0; i < data.length; i++) {\n      const value = Object.values(data[i]);\n      for (let j = 0; j < value.length; j++) {\n        objectMaxLength[j] = Math.max(objectMaxLength[j] || 0, safeToString(value[j]).length);\n      }\n    }\n    worksheet['!cols'] = objectMaxLength.map(width => ({ wch: width + 2 }));\n  };\n\n\n  const handleCheckboxChange = (e) => {\n    setSelectedData({\n      ...selectedData,\n      [e.target.name]: e.target.checked,\n    });\n  };\n\n  const handleDetailsCheckboxChange = (e) => {\n    setSelectedDetails({\n      ...selectedDetails,\n      [e.target.name]: e.target.checked,\n    });\n  };\n\n  const handleRainSummaryCheckboxChange = (e) => {\n    setSelectedRainSummary({\n      ...selectedRainSummary,\n      [e.target.name]: e.target.checked,\n    });\n  };\n\n  const handleHydro24hCheckboxChange = (e) => {\n    setSelectedHydro24h({\n      ...selectedHydro24h,\n      [e.target.name]: e.target.checked,\n    });\n  };\n\n  const closePopup = () => {\n    setShowPopup(false);\n  };\n\n  const closePreview = () => {\n    setShowPreview(false);\n  };\n\n  const confirmDownload = () => {\n    setShowPreview(false);\n    handleDownloadData();\n  };\n\n  const selectAll = (category, isSelected) => {\n    if (category === 'detalhes') {\n      const newSelectedDetails = Object.keys(selectedDetails).reduce((acc, key) => {\n        acc[key] = isSelected;\n        return acc;\n      }, {});\n      setSelectedDetails(newSelectedDetails);\n    } else if (category === 'chuva_ult') {\n      const newSelectedRainSummary = Object.keys(selectedRainSummary).reduce((acc, key) => {\n        acc[key] = isSelected;\n        return acc;\n      }, {});\n      setSelectedRainSummary(newSelectedRainSummary);\n    } else if (category === 'hidro_24h') {\n      const newSelectedHydro24h = Object.keys(selectedHydro24h).reduce((acc, key) => {\n        acc[key] = isSelected;\n        return acc;\n      }, {});\n      setSelectedHydro24h(newSelectedHydro24h);\n    }\n  };\n\n  // Estados de visibilidade\n  const [showDetails, setShowDetails] = useState(true);\n  const [showRainSummary, setShowRainSummary] = useState(true);\n  const [showHydro24h, setShowHydro24h] = useState(true);\n\n  const toggleVisibility = (category) => {\n    if (category === 'detalhes') {\n      setShowDetails(prev => !prev);\n    } else if (category === 'chuva_ult') {\n      setShowRainSummary(prev => !prev);\n    } else if (category === 'hidro_24h') {\n      setShowHydro24h(prev => !prev);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Página de Entrada de Dados</h2>\n      <label className='list-stations'>\n        Lista de códigos de estações:\n      </label>\n      <textarea\n        rows=\"5\"\n        cols=\"50\"\n        placeholder=\"Digite os códigos das estações separados por vírgulas\"\n        value={codes}\n        onChange={(e) => setCodes(e.target.value)}\n        style={{ resize: 'vertical' }}\n      ></textarea>\n      <div className=\"filters-container\">\n        <div className=\"category\">\n          <h3 onClick={() => toggleVisibility('detalhes')}>Ficha da estação</h3>\n          {showDetails && (\n            <>\n              <div className=\"select-buttons\">\n                <button onClick={() => selectAll('detalhes', true)}>Selecionar todos</button>\n                <button onClick={() => selectAll('detalhes', false)}>Desmarcar todos</button>\n              </div>\n              <div className=\"filters\">\n                {Object.keys(selectedDetails).filter(key => key !== 'codigo').map((key) => (\n                  <label key={key} className='label-checkbox'>\n                    <input\n                      type=\"checkbox\"\n                      name={key}\n                      className=\"details-checkbox\"\n                      checked={selectedDetails[key]}\n                      onChange={handleDetailsCheckboxChange}\n                    />\n                    {detailLabels[key]}\n                  </label>\n                ))}\n              </div>\n            </>\n          )}\n        </div>\n\n        <div className=\"category\">\n          <h3 onClick={() => toggleVisibility('chuva_ult')}>Resumo de Chuva</h3>\n          {showRainSummary && (\n            <>\n              <div className=\"select-buttons\">\n                <button onClick={() => selectAll('chuva_ult', true)}>Selecionar todos</button>\n                <button onClick={() => selectAll('chuva_ult', false)}>Desmarcar todos</button>\n              </div>\n              <div className=\"filters\">\n                {Object.keys(selectedRainSummary).map((key) => (\n                  <label key={key} className='label-checkbox'>\n                    <input\n                      type=\"checkbox\"\n                      name={key}\n                      className=\"rain-checkbox\"\n                      checked={selectedRainSummary[key]}\n                      onChange={handleRainSummaryCheckboxChange}\n                    />\n                    {rainSummaryLabels[key] || key}\n                  </label>\n                ))}\n              </div>\n            </>\n          )}\n        </div>\n\n        <div className=\"category\">\n          <h3 onClick={() => toggleVisibility('hidro_24h')}>Dados Hidrométricos 24h</h3>\n          {showHydro24h && (\n            <>\n              <div className=\"select-buttons\">\n                <button onClick={() => selectAll('hidro_24h', true)}>Selecionar todos</button>\n                <button onClick={() => selectAll('hidro_24h', false)}>Desmarcar todos</button>\n              </div>\n              <div className=\"filters\">\n                {Object.keys(selectedHydro24h).map((key) => (\n                  <label key={key} className='label-checkbox'>\n                    <input\n                      type=\"checkbox\"\n                      name={key}\n                      className=\"hydro-checkbox\"\n                      checked={selectedHydro24h[key]}\n                      onChange={handleHydro24hCheckboxChange}\n                    />\n                    {hydroDataLabels[key]}\n                  </label>\n                ))}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n\n      <button onClick={handleFetchData}>Buscar e Exibir Dados</button>\n      <button onClick={handlePreview}>Revisar Dados Antes do Download</button>\n      <button onClick={confirmDownload}>Confirmar e Baixar Dados XLSX</button>\n      {data && <DataView\n        className=\"data-view\"\n        data={data}\n        selectedDetails={selectedDetails}\n        selectedRainSummary={selectedRainSummary}\n        selectedHydro24h={selectedHydro24h}\n      />}\n\n      {showPopup && (\n        <Popup message={popupMessage} onClose={closePopup} />\n      )}\n\n      {showPreview && (\n        <PreviewModal\n          data={previewData}\n          onConfirm={confirmDownload}\n          onCancel={closePreview}\n          selectedDetails={selectedDetails}\n          selectedRainSummary={selectedRainSummary}\n          selectedHydro24h={selectedHydro24h}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default DataInputPage;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { formatNumber, formatDate } from '../utils/utils'; // Importa os utilitários\nimport './css/DataView.css';  // Importa o novo CSS para os cartões de estação\n\n// Componente para exibir todos os dados hidrométricos\nconst AllHydroDataPage = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const { data, stationCode, stationName } = location.state || {};\n\n    if (!data) {\n        return <div>Nenhum dado disponível.</div>;\n    }\n\n    return (\n        <div className=\"all-hydro-data-container\">\n            <div className=\"station-header\">\n                <div className=\"station-header-inner\">\n                    <h3 className=\"station-code\">Estação {stationCode}</h3>\n                    <h4 className=\"station-name\">{stationName || 'Nome não disponível'}</h4>\n                </div>\n                <h3 style={{ margin: '0' }}>Dados Hidrométricos 24h</h3>\n            </div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Data</th>\n                        <th>Chuva (mm)</th>\n                        <th>Nível (cm)</th>\n                        <th>Vazão (m³/s)</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.map((item, index) => (\n                        <tr key={index}>\n                            <td>{formatDate(item.data)}</td>\n                            <td>{formatNumber(item.chuva)}</td>\n                            <td>{formatNumber(item.nivel)}</td>\n                            <td>{formatNumber(item.vazao)}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <button onClick={() => navigate(-1)}>Voltar</button>\n        </div>\n    );\n};\n\nexport default AllHydroDataPage;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { formatNumber } from '../utils/utils'; // Importa os utilitários\n\n\n// Componente para exibir os detalhes da estação\nconst StationDetailsPage = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const stationData = location.state?.data;\n\n    if (!stationData) {\n        return <div>Nenhum dado disponível.</div>;\n    }\n\n    return (\n        <div>\n            <h3>Detalhes da Estação {stationData.detalhes.items[0].codigo}</h3>\n            <table>\n                <tbody>\n                    <tr>\n                        <td>Código</td>\n                        <td>{stationData.detalhes.items[0].codigo}</td>\n                    </tr>\n                    <tr>\n                        <td>Nome</td>\n                        <td>{stationData.detalhes.items[0].nome}</td>\n                    </tr>\n                    <tr>\n                        <td>Bacia</td>\n                        <td>{stationData.detalhes.items[0].bacia}</td>\n                    </tr>\n                    <tr>\n                        <td>Rio</td>\n                        <td>{stationData.detalhes.items[0].rio}</td>\n                    </tr>\n                    <tr>\n                        <td>Estado</td>\n                        <td>{stationData.detalhes.items[0].estado}</td>\n                    </tr>\n                    <tr>\n                        <td>Município</td>\n                        <td>{stationData.detalhes.items[0].municipio}</td>\n                    </tr>\n                    <tr>\n                        <td>Responsável</td>\n                        <td>{stationData.detalhes.items[0].responsavel}</td>\n                    </tr>\n                    <tr>\n                        <td>Operadora</td>\n                        <td>{stationData.detalhes.items[0].operadora}</td>\n                    </tr>\n                    <tr>\n                        <td>Latitude</td>\n                        <td>{formatNumber(stationData.detalhes.items[0].latitude)}</td>\n                    </tr>\n                    <tr>\n                        <td>Longitude</td>\n                        <td>{formatNumber(stationData.detalhes.items[0].longitude)}</td>\n                    </tr>\n                    <tr>\n                        <td>Área de Drenagem</td>\n                        <td>{formatNumber(stationData.detalhes.items[0].areadrenagem)}</td>\n                    </tr>\n                    <tr>\n                        <td>Tipo de Estação</td>\n                        <td>{stationData.detalhes.items[0].tipoestacao}</td>\n                    </tr>\n                    <tr>\n                        <td>Operando</td>\n                        <td>{stationData.detalhes.items[0].operando}</td>\n                    </tr>\n                    <tr>\n                        <td>Telemétrica</td>\n                        <td>{stationData.detalhes.items[0].telemetrica}</td>\n                    </tr>\n                    <tr>\n                        <td>Climatológica</td>\n                        <td>{stationData.detalhes.items[0].climatologica}</td>\n                    </tr>\n                    <tr>\n                        <td>Pluviômetro</td>\n                        <td>{stationData.detalhes.items[0].pluviometro}</td>\n                    </tr>\n                    <tr>\n                        <td>Registrador de Chuva</td>\n                        <td>{stationData.detalhes.items[0].registradorchuva}</td>\n                    </tr>\n                    <tr>\n                        <td>Escala</td>\n                        <td>{stationData.detalhes.items[0].escala}</td>\n                    </tr>\n                    <tr>\n                        <td>Registrador de Nível</td>\n                        <td>{stationData.detalhes.items[0].registradornivel}</td>\n                    </tr>\n                    <tr>\n                        <td>Descarga Líquida</td>\n                        <td>{stationData.detalhes.items[0].descargaliquida}</td>\n                    </tr>\n                    <tr>\n                        <td>Sedimentos</td>\n                        <td>{stationData.detalhes.items[0].sedimentos}</td>\n                    </tr>\n                    <tr>\n                        <td>Qualidade da Água</td>\n                        <td>{stationData.detalhes.items[0].qualidadedaagua}</td>\n                    </tr>\n                    <tr>\n                        <td>Tanque Evapo</td>\n                        <td>{stationData.detalhes.items[0].tanqueevapo}</td>\n                    </tr>\n                </tbody>\n            </table>\n            <button onClick={() => navigate(-1)}>Voltar</button>\n        </div>\n    );\n};\n\nexport default StationDetailsPage;\n    ","// src/components/Loading/Loading.js\nimport React from 'react';\nimport './Loading.css';\n\nconst Loading = () => {\n  return (\n    <div className=\"loading-overlay\">\n      <div className=\"loading-spinner\"></div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\r\nimport HomePage from './components/HomePage';\r\nimport DataInputPage from './components/DataInputPage';\r\nimport AllHydroDataPage from './components/AllHydroDataPage';\r\nimport StationDetailsPage from './components/StationDetailsPage';\r\nimport { LoadingProvider, useLoading } from './context/LoadingContext';\r\nimport Loading from './components/Loading/Loading';\r\nimport './App.css'; \r\n\r\nconst App = () => {\r\n  return (\r\n    <LoadingProvider>\r\n      <Router basename=\"/hydro-station-data\">\r\n        <nav>\r\n          <ul>\r\n            <li><Link to=\"/\">INÍCIO</Link></li>\r\n            <li><Link to=\"/data-input\">PESQUISAR ESTAÇÕES</Link></li>\r\n          </ul>\r\n        </nav>\r\n        <Routes>\r\n          <Route path=\"/\" exact element={<HomePage />} />\r\n          <Route path=\"/data-input\" element={<DataInputPage />} />\r\n          <Route path=\"/all-hydro-data\" element={<AllHydroDataPage />} />\r\n          <Route path=\"/station-details\" element={<StationDetailsPage />} />\r\n        </Routes>\r\n        <LoadingOverlay />\r\n      </Router>\r\n    </LoadingProvider>\r\n  );\r\n};\r\n\r\nconst LoadingOverlay = () => {\r\n  const { loading } = useLoading();\r\n  return loading ? <Loading /> : null;\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport './index.css';\r\nimport './styles.css'; // Importe o arquivo CSS\r\n\r\n// Renderiza o aplicativo no elemento root do HTML\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}