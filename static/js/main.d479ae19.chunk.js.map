{"version":3,"sources":["context/LoadingContext.js","components/HomePage.js","api/apiService.js","utils/utils.js","components/DataView.js","components/Popup.js","components/PreviewModal.js","components/DataInputPage.js","components/AllHydroDataPage.js","components/StationDetailsPage.js","components/Loading/Loading.js","App.js","index.js"],"names":["LoadingContext","createContext","useLoading","useContext","LoadingProvider","_ref","children","loading","setLoading","useState","value","React","createElement","Provider","HomePage","useEffect","timer","setTimeout","clearTimeout","className","href","target","rel","src","alt","API_BASE_URL","mapPeriodLabel","period","rainSummaryLabels","hydroDataLabels","detailLabels","nome","bacia","subbacia","rio","estado","municipio","latitude","longitude","escala","operadora","operando","responsavel","telemetrica","sedimentos","areadrenagem","climatologica","pluviometro","tipoestacao","descargaliquida","qualidadedaagua","registradornivel","registradorchuva","tanqueevapo","headerDictionary","stationCode","data","chuva","nivel","vazao","sum_chuva","formatDate","dateString","date","Date","localTimeZone","Intl","DateTimeFormat","resolvedOptions","timeZone","toLocaleString","formatNumber","number","undefined","minimumFractionDigits","safeToString","toString","replaceColumnNames","labelMap","length","Object","keys","map","header","row","reduce","acc","key","values","setColumnWidths","worksheet","objectMaxLength","i","j","Math","max","width","wch","getDomain","chartData","filteredData","d","filter","isNaN","Number","MAX_SAFE_INTEGER","min","margin","DataView","memo","selectedDetails","selectedRainSummary","selectedHydro24h","navigate","useNavigate","initialListView","localStorage","getItem","initialGlobalControl","initialLocalActiveTabs","JSON","parse","isGlobalControlActive","setIsGlobalControlActive","globalActiveTab","setGlobalActiveTab","localActiveTabs","setLocalActiveTabs","isListView","setIsListView","setItem","stringify","handleViewToggle","view","renderHydroData","hydroData","stationName","some","v","activeTab","item","parseFloat","label","tab","concat","onClick","handleTabClick","tabKey","prevState","ResponsiveContainer","height","LineChart","slice","reverse","left","right","CartesianGrid","strokeDasharray","XAxis","dataKey","tickFormatter","tick","replace","toLocaleTimeString","hour","minute","YAxis","domain","toFixed","Tooltip","formatter","name","Line","type","stroke","dot","state","FontAwesomeIcon","icon","faThLarge","faBars","toggleGlobalControl","faSlidersH","_data$stationCode$chu","_data$stationCode$hid","rainSummary","stationData","detalhes","items","chuva_ult","index","faCloudRain","hidro_24h","Popup","message","onClose","PreviewModal","onConfirm","onCancel","console","log","renderTable","title","tableData","columns","isScrollable","arguments","col","colIndex","detalhesData","category","hidro24hData","chuvaUltData","selectedDetailColumns","selectedHydrodataColumns","selectedRainSummaryColumns","DataInputPage","codes","setCodes","setData","selectedData","showPopup","setShowPopup","popupMessage","setPopupMessage","showPreview","setShowPreview","previewData","setPreviewData","initialDetails","initialRainSummary","initialHydro24h","setSelectedDetails","setSelectedRainSummary","setSelectedHydro24h","memoizedData","fetchData","async","noDetailsSelected","noRainSummarySelected","noHydro24hSelected","codesArray","split","code","trim","fetchedData","invalidCodes","Set","requests","details","axios","get","catch","error","fetchStationDetails","add","hidro24h","fetchHydro24h","chuvaUlt","fetchRainSummary","Promise","all","validData","forEach","size","join","flattenData","flattened","filteredItem","push","periodKey","periodLabel","handleDetailsCheckboxChange","e","checked","handleRainSummaryCheckboxChange","handleHydro24hCheckboxChange","confirmDownload","flattenedData","workbook","XLSX","book_new","detailsData","detailsDataWithHeaders","detailsWorksheet","aoa_to_sheet","book_append_sheet","hydro24hData","hydro24hDataWithHeaders","hydro24hWorksheet","rainSummaryData","rainSummaryDataWithHeaders","rainSummaryWorksheet","SheetNames","warn","xlsxData","bookType","blob","Blob","saveAs","handleDownloadData","selectAll","isSelected","newSelectedDetails","newSelectedRainSummary","newSelectedHydro24h","showDetails","setShowDetails","showRainSummary","setShowRainSummary","showHydro24h","setShowHydro24h","toggleVisibility","prev","Fragment","onChange","rows","cols","placeholder","style","resize","faSearch","fromEntries","entries","_ref2","fetchDataAndFilter","allData","faEye","faFileDownload","closePopup","closePreview","AllHydroDataPage","location","useLocation","defaultValue","strokeWidth","r","activeDot","StationDetailsPage","_location$state","codigo","Loading","LoadingOverlay","App","Router","NavLink","to","end","isActive","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d479ae19.chunk.js","sourcesContent":["// src/context/LoadingContext.js\nimport React, { createContext, useState, useContext } from 'react';\n\nconst LoadingContext = createContext();\n\nexport const useLoading = () => {\n  return useContext(LoadingContext);\n};\n\nexport const LoadingProvider = ({ children }) => {\n  const [loading, setLoading] = useState(false);\n\n  const value = {\n    loading,\n    setLoading\n  };\n\n  return (\n    <LoadingContext.Provider value={value}>\n      {children}\n    </LoadingContext.Provider>\n  );\n};\n","import React, { useEffect } from 'react';\r\nimport './css/HomePage.css';\r\nimport { useLoading } from '../context/LoadingContext';\r\n\r\nconst HomePage = () => {\r\n  const { setLoading } = useLoading();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const timer = setTimeout(() => setLoading(false), 500);\r\n    return () => clearTimeout(timer);\r\n  }, [setLoading]);\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <header className=\"home-header\">\r\n        <h1>Portal HidroInfo</h1>\r\n        <p>Informações hidrológicas e meteorológicas ao seu alcance.</p>\r\n      </header>\r\n\r\n      <main className=\"home-content\">\r\n        <section className=\"home-section\">\r\n          <h3>Sobre o Aplicativo</h3>\r\n          <p>\r\n            Bem-vindo ao HidroInfo, uma plataforma avançada para acesso a dados hidrológicos e meteorológicos em tempo real. Desenvolvido pela Agência Nacional de Águas (ANA), nosso aplicativo é parte integrante do Sistema Nacional de Informações sobre Recursos Hídricos (SNIRH), permitindo a visualização dos dados coletados pela Rede Hidrometeorológica Nacional (RHN). Através do HidroInfo, você pode monitorar e analisar informações essenciais sobre o clima e os recursos hídricos do Brasil.\r\n          </p>\r\n        </section>\r\n        <section className=\"home-section\">\r\n          <h3>Funcionalidades</h3>\r\n          <ul>\r\n            <li>Consulta a dados detalhados de estações hidrometeorológicas em todo o país.</li>\r\n            <li>Visualização de históricos de chuvas, níveis de água e vazões com gráficos interativos.</li>\r\n            <li>Filtragem personalizada para criar relatórios e visualizações específicas de acordo com suas necessidades.</li>\r\n            <li>Acesso a informações geográficas e dados estatísticos das estações monitoradas.</li>\r\n          </ul>\r\n        </section>\r\n        <section className=\"home-section flex-section\">\r\n          <div className=\"text-content\">\r\n            <h3>Como Utilizar</h3>\r\n            <p>\r\n              Navegar pelo HidroInfo é simples e intuitivo. Utilize o menu superior para acessar as principais funcionalidades:\r\n            </p>\r\n            <ul>\r\n              <li><strong>Pesquisar Estações:</strong> Encontre e selecione estações específicas para visualizar seus dados detalhados.</li>\r\n              <li><strong>Dados Hidrométricos 24h:</strong> Acesse gráficos com dados de chuvas, níveis de água e vazões nas últimas 24 horas.</li>\r\n              <li><strong>Resumo de Chuva:</strong> Veja resumos de precipitação acumulada em diferentes períodos, como 24 horas, 7 dias, 30 dias e 12 meses.</li>\r\n            </ul>\r\n            <p>\r\n              Explore esta e outras funcionalidades (em breve) para obter insights valiosos sobre as condições hidrológicas e meteorológicas. Para mais informações, visite o site oficial do SNIRH.\r\n            </p>\r\n            <a href=\"https://www.snirh.gov.br\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"cta-button\">Saiba mais</a>\r\n          </div>\r\n          <div className=\"home-gif-container\">\r\n            <img src=\"https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExMHNpcDM4cWNwZ28zeGZjcTIxMDZtNjI5ODhneGRpcGN6aXdqbW5lZSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/3oKIPEqDGUULpEU0aQ/giphy.webp\" alt=\"Descrição do GIF\" className=\"home-gif\" />\r\n            <p className=\"home-gif-credit\"><a href=\"https://giphy.com/gifs/cartoon-character-2d-3oKIPEqDGUULpEU0aQ\" target=\"_blank\" rel=\"noopener noreferrer\">via GIPHY</a></p>\r\n          </div>\r\n        </section>\r\n      </main>\r\n      <footer className=\"home-footer\">\r\n        <p>&copy; 2024 HidroInfo. Todos os direitos reservados.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","// hydro-station-data/src/api/apiService.js\n\nimport axios from 'axios';\n\nconst API_BASE_URL = 'https://ows.snirh.gov.br/ords/servicos/hidro/';\n\n// Função para buscar detalhes da estação\nexport const fetchStationDetails = (code) => {\n  return axios.get(`${API_BASE_URL}estacao/${code}`)\n    .catch(error => {\n      console.error(`Erro ao buscar detalhes da estação ${code}:`, error);\n      throw error; // Re-throw para que o chamador lide com o erro\n    });\n};\n\n// Função para buscar dados hidrométricos das últimas 24 horas\nexport const fetchHydro24h = (code) => {\n  return axios.get(`${API_BASE_URL}estacao/24h/${code}`)\n    .catch(error => {\n      console.error(`Erro ao buscar dados hidrométricos para a estação ${code}:`, error);\n      throw error; // Re-throw para que o chamador lide com o erro\n    });\n};\n\n// Função para buscar o resumo de chuva\nexport const fetchRainSummary = (code) => {\n  return axios.get(`${API_BASE_URL}chuva_ult/${code}`)\n    .catch(error => {\n      console.error(`Erro ao buscar resumo de chuva para a estação ${code}:`, error);\n      throw error; // Re-throw para que o chamador lide com o erro\n    });\n};\n","// hydro-station-data/src/utils/utils.js\n\nexport const mapPeriodLabel = (period) => {\n  const periodMap = {\n    \"soma_ult_leituras\": \"24 HORAS\",\n    \"ultimos 7d\": \"7 DIAS\",\n    \"ultimos 30d\": \"30 DIAS\",\n    \"ultimos 12 meses\": \"12 MESES\"\n  };\n  return periodMap[period] || period;\n};\n\nexport const rainSummaryLabels = {\n  'soma_ult_leituras': '24 Horas',\n  \"ultimos 7d\": '7 Dias',\n  \"ultimos 30d\": '30 Dias',\n  \"ultimos 12 meses\": '12 Meses'\n};\n\nexport const hydroDataLabels = {\n  \"data\": \"Data\",\n  \"chuva\": \"Chuva (mm)\",\n  \"nivel\": \"Nível (cm)\",\n  \"vazao\": \"Vazão (m³/s)\"\n};\n\n// Mapeamento dos rótulos dos detalhes\nexport const detailLabels = {\n  nome: \"Nome\",\n  bacia: \"Bacia\",\n  subbacia: \"Sub-bacia\",\n  rio: \"Rio\",\n  estado: \"Estado\",\n  municipio: \"Município\",\n  latitude: \"Latitude\",\n  longitude: \"Longitude\",\n  escala: \"Escala\",\n  operadora: \"Operadora\",\n  operando: \"Operando\",\n  responsavel: \"Responsável\",\n  telemetrica: \"Telemétrica\",\n  sedimentos: \"Sedimentos\",\n  areadrenagem: \"Área de Drenagem\",\n  climatologica: \"Climatológica\",\n  pluviometro: \"Pluviômetro\",\n  tipoestacao: \"Tipo de Estação\",\n  descargaliquida: \"Descarga Líquida\",\n  qualidadedaagua: \"Qualidade da Água\",\n  registradornivel: \"Registrador de Nível\",\n  registradorchuva: \"Registrador de Chuva\",\n  tanqueevapo: \"Tanque Evaporimétrico\"\n};\n\n// Mapeamento dos rótulos para os cabeçalhos das tabelas\nexport const headerDictionary = {\n  stationCode: \"CÓDIGO DA ESTAÇÃO\",\n  nome: \"NOME\",\n  bacia: \"BACIA\",\n  subbacia: \"SUB-BACIA\",\n  rio: \"RIO\",\n  estado: \"ESTADO\",\n  municipio: \"MUNICÍPIO\",\n  responsavel: \"RESPONSÁVEL\",\n  operadora: \"OPERADORA\",\n  latitude: \"LATITUDE\",\n  longitude: \"LONGITUDE\",\n  areadrenagem: \"ÁREA DE DRENAGEM\",\n  tipoestacao: \"TIPO DE ESTAÇÃO\",\n  operando: \"OPERANDO\",\n  telemetrica: \"TELEMETRIA\",\n  climatologica: \"CLIMATOLÓGICA\",\n  pluviometro: \"PLUVIÔMETRO\",\n  registradorchuva: \"REGISTRADOR DE CHUVA\",\n  escala: \"ESCALA\",\n  registradornivel: \"REGISTRADOR DE NÍVEL\",\n  descargaliquida: \"DESCARGA LÍQUIDA\",\n  sedimentos: \"SEDIMENTOS\",\n  qualidadedaagua: \"QUALIDADE DA ÁGUA\",\n  tanqueevapo: \"TANQUE EVAPORIMÉTRICO\",\n  data: \"DATA\",\n  chuva: \"CHUVA (MM)\",\n  nivel: \"NÍVEL (CM)\",\n  vazao: \"VAZÃO (M³/S)\",\n  'soma_ult_leituras': \"PERÍODO\",\n  sum_chuva: \"SOMA DA CHUVA (MM)\"\n};\n\n// Função para formatar as datas no horário local do usuário\nexport const formatDate = (dateString) => {\n  if (!dateString) return 'Data inválida';  // Verifica se a data é nula ou indefinida\n  const date = new Date(dateString);\n  const localTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  return date.toLocaleString('pt-BR', { timeZone: localTimeZone });\n};\n\n// Função para formatar os números\nexport const formatNumber = (number) => {\n  if (number === null || number === undefined) return 'N/A';  // Trata valores nulos ou indefinidos\n  if (number % 1 === 0) {\n    return number.toLocaleString('pt-BR'); // Formata números inteiros\n  }\n  return number.toLocaleString('pt-BR', { minimumFractionDigits: 1 }); // Formata números decimais\n};\n\n// Função para tratar valores nulos ou indefinidos\nexport const safeToString = (value) => {\n  return value !== null && value !== undefined ? value.toString() : '';\n};\n\n\nexport const flattenData = (data, selectedData, selectedDetails, selectedHydro24h, selectedRainSummary) => {\n  const flattened = [];\n  Object.keys(data).forEach(stationCode => {\n    const stationData = data[stationCode];\n    if (selectedData.detalhes && stationData.detalhes) {\n      stationData.detalhes.items.forEach(item => {\n        const filteredItem = Object.keys(item).reduce((acc, key) => {\n          if (selectedDetails[key]) {\n            acc[key] = item[key];\n          }\n          return acc;\n        }, {});\n        flattened.push({ category: 'Detalhes', stationCode, ...filteredItem });\n      });\n    }\n    if (selectedData.hidro_24h && stationData.hidro_24h) {\n      stationData.hidro_24h.items.forEach(item => {\n        const filteredItem = Object.keys(item).reduce((acc, key) => {\n          if (selectedHydro24h[key]) {\n            acc[key] = item[key];\n          }\n          return acc;\n        }, {});\n        flattened.push({ category: 'Hidro 24h', stationCode, ...filteredItem });\n      });\n    }\n    if (selectedData.chuva_ult && stationData.chuva_ult) {\n      stationData.chuva_ult.items.forEach(item => {\n        const periodKey = item[\"'soma_ult_leituras'\"];\n        if (selectedRainSummary[periodKey]) {\n          const periodLabel = mapPeriodLabel(periodKey);\n          flattened.push({\n            category: 'Resumo chuvas',\n            stationCode,\n            period: periodLabel,\n            sum_chuva: item.sum_chuva\n          });\n        }\n      });\n    }\n  });\n  return flattened;\n};\n\nexport const replaceColumnNames = (data, labelMap) => {\n  if (data.length === 0) return data;\n\n  const newHeaders = Object.keys(data[0]).map(header => labelMap[header] || header);\n  const newData = data.map(row => {\n    return Object.keys(row).reduce((acc, key) => {\n      acc[labelMap[key] || key] = row[key];\n      return acc;\n    }, {});\n  });\n\n  return [newHeaders, ...newData.map(row => Object.values(row))];\n};\n\nexport const setColumnWidths = (worksheet, data) => {\n  const objectMaxLength = [];\n  for (let i = 0; i < data.length; i++) {\n    const value = Object.values(data[i]);\n    for (let j = 0; j < value.length; j++) {\n      objectMaxLength[j] = Math.max(objectMaxLength[j] || 0, safeToString(value[j]).length);\n    }\n  }\n  worksheet['!cols'] = objectMaxLength.map(width => ({ wch: width + 2 }));\n};\n\nexport const getDomain = (chartData, key) => {\n  // Filtra apenas valores numéricos válidos e maiores ou iguais a zero\n  const filteredData = chartData.map(d => d[key]).filter(value => typeof value === 'number' && !isNaN(value) && value >= 0 && value < Number.MAX_SAFE_INTEGER);\n\n  if (filteredData.length === 0) return [0, 1]; // Retorna um domínio padrão se não houver dados válidos\n\n  const min = Math.min(...filteredData);\n  const max = Math.max(...filteredData);\n  const margin = (max - min) * 0.1;\n\n  // Corrige o domínio caso min e max sejam iguais ou se max é muito alto\n  if (min === max || max > Number.MAX_SAFE_INTEGER) return [min - 1, max + 1];\n\n  // Garante que o valor mínimo não seja menor que zero e aplica margem\n  return [Math.max(min - margin, 0), max + margin];\n};","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/DataView.css';\nimport { detailLabels, formatNumber, formatDate, rainSummaryLabels, getDomain } from '../utils/utils';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThLarge, faBars, faCloudRain, faSlidersH } from '@fortawesome/free-solid-svg-icons';\n\nconst DataView = React.memo(({ data, selectedDetails, selectedRainSummary, selectedHydro24h }) => {\n    const navigate = useNavigate();\n\n    const initialListView = localStorage.getItem('isListView') === 'true';\n    const initialGlobalControl = localStorage.getItem('isGlobalControlActive') === 'true';\n    const initialLocalActiveTabs = JSON.parse(localStorage.getItem('localActiveTabs')) || {};\n\n    const [isGlobalControlActive, setIsGlobalControlActive] = useState(initialGlobalControl);\n    const [globalActiveTab, setGlobalActiveTab] = useState(null);\n    const [localActiveTabs, setLocalActiveTabs] = useState(initialLocalActiveTabs);\n    const [isListView, setIsListView] = useState(initialListView);\n\n    useEffect(() => {\n        localStorage.setItem('isListView', isListView);\n    }, [isListView]);\n\n    useEffect(() => {\n        localStorage.setItem('isGlobalControlActive', isGlobalControlActive);\n    }, [isGlobalControlActive]);\n\n    useEffect(() => {\n        localStorage.setItem('localActiveTabs', JSON.stringify(localActiveTabs));\n    }, [localActiveTabs]);\n\n    const handleViewToggle = (view) => {\n        setIsListView(view === 'list');\n    };\n\n    const handleTabClick = (stationCode, tabKey) => {\n        if (isGlobalControlActive) {\n            setGlobalActiveTab(tabKey);\n        } else {\n            setLocalActiveTabs(prevState => ({\n                ...prevState,\n                [stationCode]: tabKey\n            }));\n        }\n    };\n\n    const toggleGlobalControl = () => {\n        setIsGlobalControlActive(!isGlobalControlActive);\n    };\n\n    const renderHydroData = (hydroData, stationCode, stationName) => {\n        if (!selectedHydro24h || !Object.values(selectedHydro24h).some(v => v)) return null;\n        if (!hydroData || hydroData.length === 0) return null;\n\n        const activeTab = isGlobalControlActive ? globalActiveTab : localActiveTabs[stationCode] || 'chuva';\n        const chartData = hydroData.map(item => ({\n            data: formatDate(item.data),\n            chuva: selectedHydro24h.chuva ? parseFloat(item.chuva) : null,\n            nivel: selectedHydro24h.nivel ? parseFloat(item.nivel) : null,\n            vazao: selectedHydro24h.vazao ? parseFloat(item.vazao) : null,\n        }));\n\n        const tabs = [\n            { key: 'chuva', label: 'Chuva (mm)' },\n            { key: 'nivel', label: 'Nível (cm)' },\n            { key: 'vazao', label: 'Vazão (m³/s)' },\n        ];\n\n        return (\n            <div className=\"hydro-data section\">\n                <h5>Dados Hidrométricos 24h</h5>\n                <div className='background-hrydo-24h'>\n                    <div className=\"tabs\">\n                        {tabs.map(tab => selectedHydro24h[tab.key] && (\n                            <button\n                                key={tab.key}\n                                className={`tab-button ${activeTab === tab.key ? 'active' : ''}`}\n                                onClick={() => handleTabClick(stationCode, tab.key)}\n                            >\n                                {tab.label}\n                            </button>\n                        ))}\n                    </div>\n                    <div className=\"chart-container\">\n                        <ResponsiveContainer width=\"100%\" height={300}>\n                            <LineChart data={chartData.slice().reverse()} margin={{ left: 30, right: 20 }}>\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis\n                                    dataKey=\"data\"\n                                    tickFormatter={(tick) =>\n                                        tick ? new Date(tick.replace(/(\\d{2})\\/(\\d{2})\\/(\\d{4}),/, '$2/$1/$3')).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n                                            : ''\n                                    }\n                                />\n                                <YAxis\n                                    domain={getDomain(chartData, activeTab) || [0, 1]}\n                                    tickFormatter={(value) => (value !== null && value !== undefined ? value.toFixed(2) : '0')} />\n                                <Tooltip\n                                    formatter={(value, name) => {\n                                        switch (name) {\n                                            case 'chuva':\n                                                return [`${value} mm`, 'Chuva'];\n                                            case 'nivel':\n                                                return [`${value} cm`, 'Nível'];\n                                            case 'vazao':\n                                                return [`${value} m³/s`, 'Vazão'];\n                                            default:\n                                                return [value, name];\n                                        }\n                                    }}\n                                />\n                                {activeTab === 'chuva' && (\n                                    <Line type=\"monotone\" dataKey=\"chuva\" stroke=\"#8884d8\" dot={true} />\n                                )}\n                                {activeTab === 'nivel' && (\n                                    <Line type=\"monotone\" dataKey=\"nivel\" stroke=\"#82ca9d\" dot={true} />\n                                )}\n                                {activeTab === 'vazao' && (\n                                    <Line type=\"monotone\" dataKey=\"vazao\" stroke=\"#ffc658\" dot={true} />\n                                )}\n                            </LineChart>\n                        </ResponsiveContainer>\n                    </div>\n                    <button\n                        className=\"view-more-button\"\n                        onClick={() => navigate('/all-hydro-data', { state: { data: hydroData, stationCode, stationName } })}\n                    >\n                        Ver Mais\n                    </button>\n                </div>\n            </div>\n        );\n    };\n\n    const renderRainSummary = (rainSummary, stationCode) => {\n        if (!selectedRainSummary || !Object.values(selectedRainSummary).some(v => v)) return null;\n        if (!rainSummary || rainSummary.length === 0) return null;\n\n        return (\n            <div className=\"rain-summary section\">\n                <h5>Resumo de Chuva</h5>\n                <div className=\"rain-summary-grid\">\n                    {rainSummary\n                        .filter(item => selectedRainSummary[item[\"'soma_ult_leituras'\"]])\n                        .map((item, index) => (\n                            <div className=\"rain-summary-item\" key={index}>\n                                <div className=\"rain-top\">\n                                    <FontAwesomeIcon icon={faCloudRain} className=\"rain-icon animated-rain\" />\n                                    <span className=\"rain-period\">{rainSummaryLabels[item[\"'soma_ult_leituras'\"]] || item[\"'soma_ult_leituras'\"]}</span>\n                                </div>\n                                <div className=\"rain-value\">\n                                    <span>{formatNumber(item.sum_chuva)}</span> mm\n                                </div>\n                            </div>\n\n                        ))}\n                </div>\n            </div>\n        );\n    };\n\n    const renderDetails = (stationCode, stationData) => {\n        if (!selectedDetails || !Object.values(selectedDetails).some(v => v)) return null;\n\n        if (!stationData.detalhes || !stationData.detalhes.items || stationData.detalhes.items.length === 0) {\n            return <p>Detalhes não disponíveis para esta estação.</p>;\n        }\n\n        return (\n            <div className=\"details section\">\n                <h5>Ficha da estação</h5>\n                <div className=\"details-grid\">\n                    {Object.keys(stationData.detalhes.items[0]).map((key) => (\n                        selectedDetails[key] && (\n                            <div className=\"detail-item\" key={key}>\n                                <strong>{detailLabels[key] || key}</strong>\n                                <span>{stationData.detalhes.items[0][key] || 'N/A'}</span>\n                            </div>\n                        )\n                    ))}\n                </div>\n            </div>\n        );\n    };\n\n    if (!data) return null;\n\n    return (\n        <div className=\"data-view-container\">\n            <div className=\"toggle-view-icons\">\n                <div className=\"icon-container\">\n                    <div className={`icon ${isListView ? 'icon-visible' : 'icon-hidden'}`} onClick={() => handleViewToggle('grid')}>\n                        <FontAwesomeIcon icon={faThLarge} />\n                        <span className=\"tooltip-text\">Visualização em Grade</span>\n                    </div>\n                    <div className={`icon ${!isListView ? 'icon-visible' : 'icon-hidden'}`} onClick={() => handleViewToggle('list')}>\n                        <FontAwesomeIcon icon={faBars} />\n                        <span className=\"tooltip-text\">Visualização em Lista</span>\n                    </div>\n                </div>\n                <div className=\"icon-container\">\n                    <div className={`icon`} onClick={toggleGlobalControl}>\n                        <FontAwesomeIcon icon={faSlidersH} />\n                        <span className=\"tooltip-text\">{isGlobalControlActive ? 'Ativar Controle Indiviual De Gráficos' : 'Desativar Controle Indiviual De Gráficos'}</span>\n                    </div>\n                </div>\n            </div>\n            <div className={`stations-container ${isListView ? 'list-view' : 'grid-view'}`}>\n                {Object.keys(data).map((stationCode) => (\n                    <div className=\"station-card\" key={stationCode}>\n                        <h4>{data[stationCode].nome || 'Nome não disponível'}</h4>\n                        <p>{stationCode}</p>\n                        {renderDetails(stationCode, data[stationCode])}\n                        {renderRainSummary(data[stationCode].chuva_ult?.items, stationCode)}\n                        {renderHydroData(data[stationCode].hidro_24h?.items, stationCode, data[stationCode].nome)}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n});\n\nexport default DataView;\n","import React from 'react';\nimport './css/Popup.css'; // Importa o CSS\n\nconst Popup = ({ message, onClose }) => {\n  return (\n    <div className=\"popup-overlay\">\n      <div className=\"popup-content\">\n        <p>{message}</p>\n        <button onClick={onClose}>Fechar</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Popup;\n","import React from 'react';\r\nimport './css/PreviewModal.css';\r\nimport { mapPeriodLabel, headerDictionary, formatDate, formatNumber, detailLabels } from '../utils/utils';\r\n\r\nconst PreviewModal = ({ data, onConfirm, onCancel, selectedDetails = {}, selectedHydro24h = {}, selectedRainSummary = {} }) => {\r\n  console.log('Dados para pré-visualização:', data);\r\n\r\n  if (!data) {\r\n    return null;\r\n  }\r\n\r\n  const renderTable = (title, tableData, columns, isScrollable = false) => (\r\n    <div className={isScrollable ? \"table-overflow\" : \"\"}>\r\n      <h4>{title}</h4>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {columns.map((col, index) => (\r\n              <th key={index}>{headerDictionary[col] || detailLabels[col] || col}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableData.map((row, index) => (\r\n            <tr key={index}>\r\n              {columns.map((col, colIndex) => (\r\n                <td key={colIndex}>\r\n                {col === 'soma_ult_leituras'\r\n                  ? mapPeriodLabel(row[col])\r\n                  : col === 'data'\r\n                  ? formatDate(row[col])\r\n                  : col === 'PERÍODO'\r\n                  ? row['period'] // Usando 'period' para acessar os dados corretos\r\n                  : row[col] !== null && row[col] !== undefined\r\n                  ? formatNumber(row[col])\r\n                  : 'N/A'}\r\n              </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n\r\n  const detalhesData = data.filter(d => d.category === 'Detalhes');\r\n  const hidro24hData = data.filter(d => d.category === 'Hidro 24h');\r\n  const chuvaUltData = data.filter(d => d.category === 'Resumo chuvas');\r\n\r\n  const selectedDetailColumns = Object.keys(selectedDetails).filter(key => selectedDetails[key]);\r\n  const selectedHydrodataColumns = Object.keys(selectedHydro24h).filter(key => selectedHydro24h[key]);\r\n  const selectedRainSummaryColumns = ['stationCode', 'PERÍODO', 'sum_chuva'];\r\n\r\n  return (\r\n    <div className=\"preview-modal-overlay\">\r\n      <div className=\"preview-modal\">\r\n        <h3>Pré-visualização dos Dados</h3>\r\n        <div className=\"preview-table\">\r\n          {selectedDetailColumns.length > 0 && detalhesData.length > 0 && renderTable('Ficha das estações', detalhesData, ['stationCode', ...selectedDetailColumns], true)}\r\n          {selectedRainSummaryColumns.length > 0 && chuvaUltData.length > 0 && renderTable('Resumo de chuvas', chuvaUltData, selectedRainSummaryColumns)}\r\n          {selectedHydrodataColumns.length > 0 && hidro24hData.length > 0 && renderTable('Histórico 24h', hidro24hData, ['stationCode', ...selectedHydrodataColumns])}\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <button className=\"confirm-button\" onClick={onConfirm}>Confirmar Download</button>\r\n          <button className=\"cancel-button\" onClick={onCancel}>Cancelar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchStationDetails, fetchHydro24h, fetchRainSummary } from '../api/apiService';\r\nimport DataView from './DataView';\r\nimport './css/DataInputPage.css';\r\nimport Popup from './Popup';\r\nimport { saveAs } from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport { detailLabels, hydroDataLabels, rainSummaryLabels, mapPeriodLabel, replaceColumnNames, setColumnWidths } from '../utils/utils';\r\nimport { useLoading } from '../context/LoadingContext';\r\nimport PreviewModal from './PreviewModal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faEye, faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst DataInputPage = () => {\r\n  const { setLoading } = useLoading();\r\n\r\n  const [codes, setCodes] = useState(localStorage.getItem('codes') || '');\r\n  const [data, setData] = useState(JSON.parse(localStorage.getItem('data')) || null);\r\n\r\n  const [selectedData] = useState(JSON.parse(localStorage.getItem('selectedData')) || {\r\n    detalhes: true,\r\n    hidro_24h: true,\r\n    chuva_ult: true,\r\n  });\r\n\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [popupMessage, setPopupMessage] = useState('');\r\n\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [previewData, setPreviewData] = useState([]);\r\n\r\n  const initialDetails = Object.keys(detailLabels).reduce((acc, key) => {\r\n    acc[key] = true; // Define todos os filtros como true\r\n    return acc;\r\n  }, {});\r\n\r\n  const initialRainSummary = Object.keys(rainSummaryLabels).reduce((acc, key) => {\r\n    acc[key] = true; // Define todos os filtros como true\r\n    return acc;\r\n  }, {});\r\n\r\n  const initialHydro24h = Object.keys(hydroDataLabels).reduce((acc, key) => {\r\n    acc[key] = true; // Define todos os filtros como true\r\n    return acc;\r\n  }, {});\r\n\r\n  const [selectedDetails, setSelectedDetails] = useState(\r\n    JSON.parse(localStorage.getItem('selectedDetails')) || initialDetails\r\n  );\r\n\r\n  const [selectedRainSummary, setSelectedRainSummary] = useState(\r\n    JSON.parse(localStorage.getItem('selectedRainSummary')) || initialRainSummary\r\n  );\r\n\r\n  const [selectedHydro24h, setSelectedHydro24h] = useState(\r\n    JSON.parse(localStorage.getItem('selectedHydro24h')) || initialHydro24h\r\n  );\r\n\r\n\r\n  // Memoized data for caching\r\n  const memoizedData = {};\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const timer = setTimeout(() => setLoading(false), 650);\r\n    return () => clearTimeout(timer);\r\n  }, [setLoading]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('codes', codes);\r\n  }, [codes]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('data', JSON.stringify(data));\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedData', JSON.stringify(selectedData));\r\n  }, [selectedData]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedDetails', JSON.stringify(selectedDetails));\r\n  }, [selectedDetails]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedRainSummary', JSON.stringify(selectedRainSummary));\r\n  }, [selectedRainSummary]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedHydro24h', JSON.stringify(selectedHydro24h));\r\n  }, [selectedHydro24h]);\r\n\r\n  const fetchData = async () => {\r\n    if (!codes) {\r\n      setPopupMessage('Por favor, digite os códigos das estações.');\r\n      setShowPopup(true);\r\n      return null;\r\n    }\r\n\r\n    const noDetailsSelected = selectedData.detalhes && !Object.values(selectedDetails).some(v => v);\r\n    const noRainSummarySelected = selectedData.chuva_ult && !Object.values(selectedRainSummary).some(v => v);\r\n    const noHydro24hSelected = selectedData.hidro_24h && !Object.values(selectedHydro24h).some(v => v);\r\n\r\n    if (noDetailsSelected && noRainSummarySelected && noHydro24hSelected) {\r\n      setPopupMessage('Por favor, selecione pelo menos um filtro em uma das categorias.');\r\n      setShowPopup(true);\r\n      return null;\r\n    }\r\n\r\n    setLoading(true);\r\n    const codesArray = codes.split(',').map(code => code.trim()).filter(code => code);\r\n    const fetchedData = {};\r\n    const invalidCodes = new Set();\r\n\r\n    const requests = codesArray.map(async (code) => {\r\n      if (memoizedData[code]) {\r\n        fetchedData[code] = memoizedData[code];\r\n        return;\r\n      }\r\n\r\n      fetchedData[code] = {};\r\n\r\n      try {\r\n        const details = await fetchStationDetails(code);\r\n        if (details.data && details.data.items && details.data.items[0]) {\r\n          fetchedData[code].nome = details.data.items[0].nome;\r\n          if (selectedData.detalhes) {\r\n            fetchedData[code].detalhes = details.data;\r\n          }\r\n        } else {\r\n          invalidCodes.add(code);\r\n        }\r\n      } catch (error) {\r\n        console.error(`Erro ao buscar detalhes da estação ${code}:`, error);\r\n        invalidCodes.add(code);\r\n      }\r\n\r\n      if (selectedData.hidro_24h) {\r\n        try {\r\n          const hidro24h = await fetchHydro24h(code);\r\n          if (hidro24h.data) {\r\n            fetchedData[code].hidro_24h = hidro24h.data;\r\n          } else {\r\n            invalidCodes.add(code);\r\n          }\r\n        } catch (error) {\r\n          console.error(`Erro ao buscar dados hidrométricos para a estação ${code}:`, error);\r\n          invalidCodes.add(code);\r\n        }\r\n      }\r\n\r\n      if (selectedData.chuva_ult) {\r\n        try {\r\n          const chuvaUlt = await fetchRainSummary(code);\r\n          if (chuvaUlt.data) {\r\n            fetchedData[code].chuva_ult = chuvaUlt.data;\r\n          } else {\r\n            invalidCodes.add(code);\r\n          }\r\n        } catch (error) {\r\n          console.error(`Erro ao buscar resumo de chuva para a estação ${code}:`, error);\r\n          invalidCodes.add(code);\r\n        }\r\n      }\r\n\r\n      memoizedData[code] = fetchedData[code];\r\n    });\r\n\r\n    await Promise.all(requests);\r\n\r\n    // Remover estações sem dados válidos\r\n    const validData = {};\r\n    Object.keys(fetchedData).forEach(code => {\r\n      if (\r\n        fetchedData[code].detalhes ||\r\n        (fetchedData[code].hidro_24h && fetchedData[code].hidro_24h.items && fetchedData[code].hidro_24h.items.length > 0) ||\r\n        (fetchedData[code].chuva_ult && fetchedData[code].chuva_ult.items && fetchedData[code].chuva_ult.items.length > 0)\r\n      ) {\r\n        validData[code] = fetchedData[code];\r\n      } else {\r\n        invalidCodes.add(code);\r\n      }\r\n    });\r\n\r\n    if (invalidCodes.size > 0) {\r\n      setPopupMessage(`Os seguintes códigos de estação são inválidos ou não possuem dados: ${[...invalidCodes].join(', ')}`);\r\n      setShowPopup(true);\r\n    }\r\n\r\n    setData(validData);\r\n    setLoading(false);\r\n    return validData;\r\n  };\r\n\r\n  const handleFetchData = async () => {\r\n    const fetchedData = await fetchData();\r\n    if (fetchedData) {\r\n      setData(fetchedData);\r\n    }\r\n  };\r\n\r\n  const fetchDataAndFilter = async () => {\r\n    const fetchedData = await fetchData();\r\n    if (!fetchedData) return;\r\n\r\n    const filteredData = {};\r\n    for (let code in fetchedData) {\r\n      filteredData[code] = { ...fetchedData[code] };\r\n\r\n      if (selectedData.detalhes) {\r\n        filteredData[code].detalhes = {\r\n          items: fetchedData[code].detalhes.items.map((item) =>\r\n            Object.fromEntries(\r\n              Object.entries(item).filter(([key]) => selectedDetails[key])\r\n            )\r\n          )\r\n        };\r\n      } else {\r\n        delete filteredData[code].detalhes;\r\n      }\r\n\r\n      if (selectedData.hidro_24h) {\r\n        filteredData[code].hidro_24h = {\r\n          items: fetchedData[code].hidro_24h.items.map((item) =>\r\n            Object.fromEntries(\r\n              Object.entries(item).filter(([key]) => selectedHydro24h[key])\r\n            )\r\n          )\r\n        };\r\n      } else {\r\n        delete filteredData[code].hidro_24h;\r\n      }\r\n\r\n      if (selectedData.chuva_ult) {\r\n        filteredData[code].chuva_ult = {\r\n          items: fetchedData[code].chuva_ult.items.filter((item) => {\r\n            const periodKey = item[\"'soma_ult_leituras'\"];\r\n            return selectedRainSummary[periodKey];\r\n          })\r\n        };\r\n      } else {\r\n        delete filteredData[code].chuva_ult;\r\n      }\r\n\r\n    }\r\n\r\n    console.log('Dados filtrados:', filteredData);\r\n    return filteredData;\r\n  };\r\n\r\n  const handlePreview = async () => {\r\n    const filteredData = await fetchDataAndFilter();\r\n    if (filteredData) {\r\n      const allData = flattenData(filteredData);\r\n      console.log('Dados para pré-visualização:', allData);\r\n      setPreviewData(allData);\r\n      setShowPreview(true);\r\n    }\r\n  };\r\n\r\n  const flattenData = (data) => {\r\n    const flattened = [];\r\n    Object.keys(data).forEach(stationCode => {\r\n      const stationData = data[stationCode];\r\n      if (selectedData.detalhes && stationData.detalhes) {\r\n        stationData.detalhes.items.forEach(item => {\r\n          const filteredItem = Object.keys(item).reduce((acc, key) => {\r\n            if (selectedDetails[key]) {\r\n              acc[key] = item[key];\r\n            }\r\n            return acc;\r\n          }, {});\r\n          flattened.push({ category: 'Detalhes', stationCode, ...filteredItem });\r\n        });\r\n      }\r\n      if (selectedData.hidro_24h && stationData.hidro_24h) {\r\n        stationData.hidro_24h.items.forEach(item => {\r\n          const filteredItem = Object.keys(item).reduce((acc, key) => {\r\n            if (selectedHydro24h[key]) {\r\n              acc[key] = item[key];\r\n            }\r\n            return acc;\r\n          }, {});\r\n          flattened.push({ category: 'Hidro 24h', stationCode, ...filteredItem });\r\n        });\r\n      }\r\n      if (selectedData.chuva_ult && stationData.chuva_ult) {\r\n        stationData.chuva_ult.items.forEach(item => {\r\n          const periodKey = item[\"'soma_ult_leituras'\"];\r\n          if (selectedRainSummary[periodKey]) {\r\n            const periodLabel = mapPeriodLabel(periodKey);\r\n            flattened.push({\r\n              category: 'Resumo chuvas',\r\n              stationCode,\r\n              period: periodLabel,\r\n              sum_chuva: item.sum_chuva\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return flattened;\r\n  };\r\n\r\n  const handleDownloadData = async () => {\r\n    const fetchedData = await fetchData();\r\n    if (!fetchedData) return;\r\n\r\n    const flattenedData = flattenData(fetchedData, selectedData, selectedDetails, selectedHydro24h, selectedRainSummary);\r\n\r\n    const labelMap = {\r\n      stationCode: 'Código',\r\n      period: 'Período',\r\n      data: 'Data',\r\n      chuva: 'Chuva',\r\n      nivel: 'Nível (cm)',\r\n      vazao: 'Vazão (m³/s)',\r\n      sum_chuva: 'Soma da Chuva (mm)',\r\n      nome: 'Nome',\r\n      // Adicione outros mapeamentos conforme necessário\r\n    };\r\n\r\n    const workbook = XLSX.utils.book_new();\r\n\r\n    // Filtrando apenas os dados que foram selecionados e aparecem em DataView e PreviewModal\r\n    const detailsData = flattenedData.filter(d => d.category === 'Detalhes');\r\n    if (detailsData.length > 0 && Object.values(selectedDetails).some(v => v)) {\r\n      const detailsDataWithHeaders = replaceColumnNames(detailsData, labelMap);\r\n      const detailsWorksheet = XLSX.utils.aoa_to_sheet(detailsDataWithHeaders);\r\n      setColumnWidths(detailsWorksheet, detailsData);\r\n      XLSX.utils.book_append_sheet(workbook, detailsWorksheet, 'Detalhes');\r\n    }\r\n\r\n    const hydro24hData = flattenedData.filter(d => d.category === 'Hidro 24h');\r\n    if (hydro24hData.length > 0 && Object.values(selectedHydro24h).some(v => v)) {\r\n      const hydro24hDataWithHeaders = replaceColumnNames(hydro24hData, labelMap);\r\n      const hydro24hWorksheet = XLSX.utils.aoa_to_sheet(hydro24hDataWithHeaders);\r\n      setColumnWidths(hydro24hWorksheet, hydro24hData);\r\n      XLSX.utils.book_append_sheet(workbook, hydro24hWorksheet, 'Hidro 24h');\r\n    }\r\n\r\n    const rainSummaryData = flattenedData.filter(d => d.category === 'Resumo chuvas');\r\n    if (rainSummaryData.length > 0 && Object.values(selectedRainSummary).some(v => v)) {\r\n      const rainSummaryDataWithHeaders = replaceColumnNames(rainSummaryData, labelMap);\r\n      const rainSummaryWorksheet = XLSX.utils.aoa_to_sheet(rainSummaryDataWithHeaders);\r\n      setColumnWidths(rainSummaryWorksheet, rainSummaryData);\r\n      XLSX.utils.book_append_sheet(workbook, rainSummaryWorksheet, 'Resumo chuvas');\r\n    }\r\n\r\n    if (workbook.SheetNames.length === 0) {\r\n      console.warn(\"Nenhuma categoria de dados selecionada para download.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const xlsxData = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n    const blob = new Blob([xlsxData], { type: 'application/octet-stream' });\r\n    saveAs(blob, 'hydro_station_data.xlsx');\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleDetailsCheckboxChange = (e) => {\r\n    setSelectedDetails({\r\n      ...selectedDetails,\r\n      [e.target.name]: e.target.checked,\r\n    });\r\n  };\r\n\r\n  const handleRainSummaryCheckboxChange = (e) => {\r\n    setSelectedRainSummary({\r\n      ...selectedRainSummary,\r\n      [e.target.name]: e.target.checked,\r\n    });\r\n  };\r\n\r\n  const handleHydro24hCheckboxChange = (e) => {\r\n    setSelectedHydro24h({\r\n      ...selectedHydro24h,\r\n      [e.target.name]: e.target.checked,\r\n    });\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setShowPopup(false);\r\n  };\r\n\r\n  const closePreview = () => {\r\n    setShowPreview(false);\r\n  };\r\n\r\n  const confirmDownload = () => {\r\n    setShowPreview(false);\r\n    handleDownloadData();\r\n  };\r\n\r\n  const selectAll = (category, isSelected) => {\r\n    if (category === 'detalhes') {\r\n      const newSelectedDetails = Object.keys(selectedDetails).reduce((acc, key) => {\r\n        acc[key] = isSelected;\r\n        return acc;\r\n      }, {});\r\n      setSelectedDetails(newSelectedDetails);\r\n    } else if (category === 'chuva_ult') {\r\n      const newSelectedRainSummary = Object.keys(selectedRainSummary).reduce((acc, key) => {\r\n        acc[key] = isSelected;\r\n        return acc;\r\n      }, {});\r\n      setSelectedRainSummary(newSelectedRainSummary);\r\n    } else if (category === 'hidro_24h') {\r\n      const newSelectedHydro24h = Object.keys(selectedHydro24h).reduce((acc, key) => {\r\n        acc[key] = isSelected;\r\n        return acc;\r\n      }, {});\r\n      setSelectedHydro24h(newSelectedHydro24h);\r\n    }\r\n  };\r\n\r\n  // Estados de visibilidade\r\n  const [showDetails, setShowDetails] = useState(true);\r\n  const [showRainSummary, setShowRainSummary] = useState(true);\r\n  const [showHydro24h, setShowHydro24h] = useState(true);\r\n\r\n  const toggleVisibility = (category) => {\r\n    if (category === 'detalhes') {\r\n      setShowDetails(prev => !prev);\r\n    } else if (category === 'chuva_ult') {\r\n      setShowRainSummary(prev => !prev);\r\n    } else if (category === 'hidro_24h') {\r\n      setShowHydro24h(prev => !prev);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Painel de Controle de Dados</h2>\r\n      \r\n      <div className=\"filters-container\">\r\n        <div className=\"category\">\r\n          <h3 onClick={() => toggleVisibility('detalhes')}>Ficha da estação</h3>\r\n          {showDetails && (\r\n            <>\r\n              <div className=\"select-buttons\">\r\n                <button onClick={() => selectAll('detalhes', true)}>Selecionar todos</button>\r\n                <button onClick={() => selectAll('detalhes', false)}>Desmarcar todos</button>\r\n              </div>\r\n              <div className=\"filters\">\r\n                {Object.keys(selectedDetails).filter(key => key !== 'codigo').map((key) => (\r\n                  <label key={key} className='label-checkbox'>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={key}\r\n                      className=\"details-checkbox\"\r\n                      checked={selectedDetails[key]}\r\n                      onChange={handleDetailsCheckboxChange}\r\n                    />\r\n                    {detailLabels[key]}\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"category\">\r\n          <h3 onClick={() => toggleVisibility('chuva_ult')}>Resumo de Chuva</h3>\r\n          {showRainSummary && (\r\n            <>\r\n              <div className=\"select-buttons\">\r\n                <button onClick={() => selectAll('chuva_ult', true)}>Selecionar todos</button>\r\n                <button onClick={() => selectAll('chuva_ult', false)}>Desmarcar todos</button>\r\n              </div>\r\n              <div className=\"filters\">\r\n                {Object.keys(selectedRainSummary).map((key) => (\r\n                  <label key={key} className='label-checkbox'>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={key}\r\n                      className=\"rain-checkbox\"\r\n                      checked={selectedRainSummary[key]}\r\n                      onChange={handleRainSummaryCheckboxChange}\r\n                    />\r\n                    {rainSummaryLabels[key] || key}\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"category\">\r\n          <h3 onClick={() => toggleVisibility('hidro_24h')}>Dados Hidrométricos 24h</h3>\r\n          {showHydro24h && (\r\n            <>\r\n              <div className=\"select-buttons\">\r\n                <button onClick={() => selectAll('hidro_24h', true)}>Selecionar todos</button>\r\n                <button onClick={() => selectAll('hidro_24h', false)}>Desmarcar todos</button>\r\n              </div>\r\n              <div className=\"filters\">\r\n                {Object.keys(selectedHydro24h).map((key) => (\r\n                  <label key={key} className='label-checkbox'>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={key}\r\n                      className=\"hydro-checkbox\"\r\n                      checked={selectedHydro24h[key]}\r\n                      onChange={handleHydro24hCheckboxChange}\r\n                    />\r\n                    {hydroDataLabels[key]}\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <label className='list-stations'>\r\n        Lista de códigos de estações:\r\n      </label>\r\n      <textarea\r\n        rows=\"3\"\r\n        cols=\"50\"\r\n        placeholder=\"Digite os códigos das estações separados por vírgulas\"\r\n        value={codes}\r\n        onChange={(e) => setCodes(e.target.value)}\r\n        style={{ resize: 'vertical' }}\r\n      ></textarea>\r\n\r\n      <div className=\"action-icons\">\r\n        <div className=\"icon-container\">\r\n          <div className=\"icon\" onClick={handleFetchData}>\r\n            <FontAwesomeIcon icon={faSearch} />\r\n            <span className=\"tooltip-text\">Buscar e Exibir Dados</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"icon-container\">\r\n          <div className=\"icon\" onClick={handlePreview}>\r\n            <FontAwesomeIcon icon={faEye} />\r\n            <span className=\"tooltip-text\">Revisar Dados Antes do Download</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"icon-container\">\r\n          <div className=\"icon\" onClick={confirmDownload}>\r\n            <FontAwesomeIcon icon={faFileDownload} />\r\n            <span className=\"tooltip-text\">Confirmar e Baixar Dados XLSX</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {data && <DataView\r\n        className=\"data-view\"\r\n        data={data}\r\n        selectedDetails={selectedDetails}\r\n        selectedRainSummary={selectedRainSummary}\r\n        selectedHydro24h={selectedHydro24h}\r\n      />}\r\n\r\n      {showPopup && (\r\n        <Popup message={popupMessage} onClose={closePopup} />\r\n      )}\r\n\r\n      {showPreview && (\r\n        <PreviewModal\r\n          data={previewData}\r\n          onConfirm={confirmDownload}\r\n          onCancel={closePreview}\r\n          selectedDetails={selectedDetails}\r\n          selectedRainSummary={selectedRainSummary}\r\n          selectedHydro24h={selectedHydro24h}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataInputPage;\r\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport { formatDate, getDomain } from '../utils/utils';\nimport './css/AllHydroDataPage.css';\n\nconst AllHydroDataPage = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const { data, stationName } = location.state || {};\n\n    if (!data) {\n        return <div>Nenhum dado disponível.</div>;\n    }\n\n    const chartData = data.map(item => ({\n        data: formatDate(item.data),\n        chuva: parseFloat(item.chuva),\n        nivel: parseFloat(item.nivel),\n        vazao: parseFloat(item.vazao),\n    }));\n\n    return (\n        <div className=\"all-hydro-data-container\">\n            <div className=\"station-header\">\n                <div className=\"station-header-inner\">\n                    <h3 className=\"station-name\">{stationName || 'Nome não disponível'}</h3>\n                </div>\n                <h4 className=\"station-title\">Dados Hidrométricos 24h</h4>\n            </div>\n\n            {/* Gráfico de Chuva */}\n            <div className=\"chart-container\">\n                <h4 className='text-center'>Chuva (mm)</h4>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                    <LineChart data={chartData.slice().reverse()} margin={{ left: 10, right: 20 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis\n                            dataKey=\"data\"\n                            tickFormatter={(tick) => new Date(tick.replace(/(\\d{2})\\/(\\d{2})\\/(\\d{4}),/, '$2/$1/$3')).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                            defaultValue=\"\"\n                        />\n                        <YAxis\n                            domain={getDomain(chartData, 'chuva')}\n                            tickFormatter={(value) => value.toFixed(2)}\n                            defaultValue={[0, 1]}\n                        />\n                        <Tooltip formatter={(value) => `${value} mm`} />\n                        <Line\n                            type=\"linear\"\n                            dataKey=\"chuva\"\n                            stroke=\"#3498db\"  // Cor azul para chuva\n                            strokeWidth={4}   // Espessura da linha\n                            dot={{ r: 4 }}    // Tamanho dos pontos\n                            activeDot={{ r: 8 }} // Tamanho do ponto quando ativo\n                        />\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n\n            {/* Gráfico de Nível */}\n            <div className=\"chart-container\">\n                <h4 className='text-center'>Nível (cm)</h4>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                    <LineChart data={chartData.slice().reverse()} margin={{ left: 25, right: 20 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis\n                            dataKey=\"data\"\n                            tickFormatter={(tick) => new Date(tick.replace(/(\\d{2})\\/(\\d{2})\\/(\\d{4}),/, '$2/$1/$3')).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                            defaultValue=\"\"\n                        />\n                        <YAxis\n                            domain={getDomain(chartData, 'nivel')}\n                            tickFormatter={(value) => value.toFixed(2)}\n                            defaultValue={[0, 1]}\n                        />\n                        <Tooltip formatter={(value) => `${value} cm`} />\n                        <Line\n                            type=\"step\"\n                            dataKey=\"nivel\"\n                            stroke=\"#82ca9d\"  // Cor azul para nível\n                            strokeWidth={2}   // Espessura da linha\n                            dot={{ r: 4 }}    // Tamanho dos pontos\n                            activeDot={{ r: 8 }} // Tamanho do ponto quando ativo\n                        />\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n\n            {/* Gráfico de Vazão */}\n            <div className=\"chart-container\">\n                <h4 className='text-center'>Vazão (m³/s)</h4>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                    <LineChart data={chartData.slice().reverse()} margin={{ left: 30, right: 20 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis\n                            dataKey=\"data\"\n                            tickFormatter={(tick) => new Date(tick.replace(/(\\d{2})\\/(\\d{2})\\/(\\d{4}),/, '$2/$1/$3')).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                            defaultValue=\"\"\n                        />\n                        <YAxis\n                            domain={getDomain(chartData, 'vazao')}\n                            tickFormatter={(value) => value.toFixed(2)}\n                            defaultValue={[0, 1]}\n                        />\n                        <Tooltip formatter={(value) => `${value} m³/s`} />\n                        <Line\n                            type=\"monotone\"\n                            dataKey=\"vazao\"\n                            stroke=\"#ffc658\"\n                            strokeWidth={3}   // Espessura da linha\n                            dot={{ r: 4 }}    // Tamanho dos pontos\n                            activeDot={{ r: 8 }} // Tamanho do ponto quando ativo\n                        />\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n\n            <button className='btn-voltar' onClick={() => navigate(-1)}>Voltar</button>\n        </div>\n    );\n};\n\nexport default AllHydroDataPage;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { formatNumber } from '../utils/utils'; // Importa os utilitários\n\n\n// Componente para exibir os detalhes da estação\nconst StationDetailsPage = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const stationData = location.state?.data;\n\n    if (!stationData) {\n        return <div>Nenhum dado disponível.</div>;\n    }\n\n    return (\n        <div>\n            <h3>Detalhes da Estação {stationData.detalhes.items[0].codigo}</h3>\n            <table>\n                <tbody>\n                    <tr>\n                        <td>Código</td>\n                        <td>{stationData.detalhes.items[0].codigo}</td>\n                    </tr>\n                    <tr>\n                        <td>Nome</td>\n                        <td>{stationData.detalhes.items[0].nome}</td>\n                    </tr>\n                    <tr>\n                        <td>Bacia</td>\n                        <td>{stationData.detalhes.items[0].bacia}</td>\n                    </tr>\n                    <tr>\n                        <td>Rio</td>\n                        <td>{stationData.detalhes.items[0].rio}</td>\n                    </tr>\n                    <tr>\n                        <td>Estado</td>\n                        <td>{stationData.detalhes.items[0].estado}</td>\n                    </tr>\n                    <tr>\n                        <td>Município</td>\n                        <td>{stationData.detalhes.items[0].municipio}</td>\n                    </tr>\n                    <tr>\n                        <td>Responsável</td>\n                        <td>{stationData.detalhes.items[0].responsavel}</td>\n                    </tr>\n                    <tr>\n                        <td>Operadora</td>\n                        <td>{stationData.detalhes.items[0].operadora}</td>\n                    </tr>\n                    <tr>\n                        <td>Latitude</td>\n                        <td>{formatNumber(stationData.detalhes.items[0].latitude)}</td>\n                    </tr>\n                    <tr>\n                        <td>Longitude</td>\n                        <td>{formatNumber(stationData.detalhes.items[0].longitude)}</td>\n                    </tr>\n                    <tr>\n                        <td>Área de Drenagem</td>\n                        <td>{formatNumber(stationData.detalhes.items[0].areadrenagem)}</td>\n                    </tr>\n                    <tr>\n                        <td>Tipo de Estação</td>\n                        <td>{stationData.detalhes.items[0].tipoestacao}</td>\n                    </tr>\n                    <tr>\n                        <td>Operando</td>\n                        <td>{stationData.detalhes.items[0].operando}</td>\n                    </tr>\n                    <tr>\n                        <td>Telemétrica</td>\n                        <td>{stationData.detalhes.items[0].telemetrica}</td>\n                    </tr>\n                    <tr>\n                        <td>Climatológica</td>\n                        <td>{stationData.detalhes.items[0].climatologica}</td>\n                    </tr>\n                    <tr>\n                        <td>Pluviômetro</td>\n                        <td>{stationData.detalhes.items[0].pluviometro}</td>\n                    </tr>\n                    <tr>\n                        <td>Registrador de Chuva</td>\n                        <td>{stationData.detalhes.items[0].registradorchuva}</td>\n                    </tr>\n                    <tr>\n                        <td>Escala</td>\n                        <td>{stationData.detalhes.items[0].escala}</td>\n                    </tr>\n                    <tr>\n                        <td>Registrador de Nível</td>\n                        <td>{stationData.detalhes.items[0].registradornivel}</td>\n                    </tr>\n                    <tr>\n                        <td>Descarga Líquida</td>\n                        <td>{stationData.detalhes.items[0].descargaliquida}</td>\n                    </tr>\n                    <tr>\n                        <td>Sedimentos</td>\n                        <td>{stationData.detalhes.items[0].sedimentos}</td>\n                    </tr>\n                    <tr>\n                        <td>Qualidade da Água</td>\n                        <td>{stationData.detalhes.items[0].qualidadedaagua}</td>\n                    </tr>\n                    <tr>\n                        <td>Tanque Evapo</td>\n                        <td>{stationData.detalhes.items[0].tanqueevapo}</td>\n                    </tr>\n                </tbody>\n            </table>\n            <button onClick={() => navigate(-1)}>Voltar</button>\n        </div>\n    );\n};\n\nexport default StationDetailsPage;\n    ","// src/components/Loading/Loading.js\nimport React from 'react';\nimport './Loading.css';\n\nconst Loading = () => {\n  return (\n    <div className=\"loading-overlay\">\n      <div className=\"loading-spinner\"></div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Routes, NavLink } from 'react-router-dom';\r\nimport HomePage from './components/HomePage';\r\nimport DataInputPage from './components/DataInputPage';\r\nimport AllHydroDataPage from './components/AllHydroDataPage';\r\nimport StationDetailsPage from './components/StationDetailsPage';\r\nimport { LoadingProvider, useLoading } from './context/LoadingContext';\r\nimport Loading from './components/Loading/Loading';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <LoadingProvider>\r\n      <Router>\r\n        <nav className=\"navbar\">\r\n          <ul className=\"nav-list\">\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/\" end className={({ isActive }) => (isActive ? 'nav-link active' : 'nav-link')}>\r\n                INÍCIO\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/data-input\" className={({ isActive }) => (isActive ? 'nav-link active' : 'nav-link')}>\r\n                PESQUISAR ESTAÇÕES\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <Routes>\r\n          <Route path=\"/\" element={<HomePage />} />\r\n          <Route path=\"/data-input\" element={<DataInputPage />} />\r\n          <Route path=\"/all-hydro-data\" element={<AllHydroDataPage />} />\r\n          <Route path=\"/station-details\" element={<StationDetailsPage />} />\r\n        </Routes>\r\n        <LoadingOverlay />\r\n      </Router>\r\n    </LoadingProvider>\r\n  );\r\n};\r\n\r\nconst LoadingOverlay = () => {\r\n  const { loading } = useLoading();\r\n  return loading ? <Loading /> : null;\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport './index.css';\r\nimport './styles.css'; // Importe o arquivo CSS\r\n\r\n// Renderiza o aplicativo no elemento root do HTML\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}