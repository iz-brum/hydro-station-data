{"version":3,"sources":["context/LoadingContext.js","components/HomePage.js","api/apiService.js","utils/utils.js","components/DataView.js","components/Popup.js","components/PreviewModal.js","components/DataInputPage.js","components/AllHydroDataPage.js","components/StationDetailsPage.js","components/Loading/Loading.js","App.js","index.js"],"names":["LoadingContext","createContext","useLoading","useContext","LoadingProvider","_ref","children","loading","setLoading","useState","value","React","createElement","Provider","HomePage","useEffect","timer","setTimeout","clearTimeout","className","href","target","rel","API_BASE_URL","mapPeriodLabel","period","soma_ult_leituras","ultimos 7d","ultimos 30d","ultimos 12 meses","rainSummaryLabels","hydroDataLabels","data","chuva","nivel","vazao","detailLabels","nome","bacia","subbacia","rio","estado","municipio","latitude","longitude","escala","operadora","operando","responsavel","telemetrica","sedimentos","areadrenagem","climatologica","pluviometro","tipoestacao","descargaliquida","qualidadedaagua","registradornivel","registradorchuva","tanqueevapo","headerDictionary","stationCode","sum_chuva","formatDate","dateString","date","Date","localTimeZone","Intl","DateTimeFormat","resolvedOptions","timeZone","toLocaleString","formatNumber","number","undefined","minimumFractionDigits","safeToString","toString","replaceColumnNames","labelMap","length","Object","keys","map","header","row","reduce","acc","key","values","setColumnWidths","worksheet","objectMaxLength","i","j","Math","max","width","wch","DataView","memo","selectedDetails","selectedRainSummary","selectedHydro24h","navigate","useNavigate","style","marginBottom","renderDetails","stationData","some","v","textAlign","detalhes","items","renderHydroData","hydroData","stationName","dataToShow","slice","item","index","onClick","state","hidro_24h","renderRainSummary","rainSummary","filter","chuva_ult","Popup","message","onClose","PreviewModal","onConfirm","onCancel","console","log","renderTable","title","tableData","columns","isScrollable","arguments","col","colIndex","detalhesData","d","category","hidro24hData","chuvaUltData","selectedDetailColumns","selectedHydrodataColumns","selectedRainSummaryColumns","DataInputPage","codes","setCodes","localStorage","getItem","setData","JSON","parse","selectedData","showPopup","setShowPopup","popupMessage","setPopupMessage","showPreview","setShowPreview","previewData","setPreviewData","initialDetails","initialRainSummary","initialHydro24h","setSelectedDetails","setSelectedRainSummary","setSelectedHydro24h","memoizedData","setItem","stringify","fetchData","async","noDetailsSelected","noRainSummarySelected","noHydro24hSelected","codesArray","split","code","trim","fetchedData","requests","details","axios","get","concat","catch","error","fetchStationDetails","hidro24h","fetchHydro24h","chuvaUlt","fetchRainSummary","Promise","all","flattenData","flattened","forEach","filteredItem","push","periodKey","periodLabel","handleDetailsCheckboxChange","e","[object Object]","name","checked","handleRainSummaryCheckboxChange","handleHydro24hCheckboxChange","confirmDownload","flattenedData","workbook","XLSX","book_new","detailsData","detailsDataWithHeaders","detailsWorksheet","aoa_to_sheet","book_append_sheet","hydro24hData","hydro24hDataWithHeaders","hydro24hWorksheet","rainSummaryData","rainSummaryDataWithHeaders","rainSummaryWorksheet","SheetNames","warn","xlsxData","bookType","type","blob","Blob","saveAs","handleDownloadData","selectAll","isSelected","newSelectedDetails","newSelectedRainSummary","newSelectedHydro24h","showDetails","setShowDetails","showRainSummary","setShowRainSummary","showHydro24h","setShowHydro24h","toggleVisibility","prev","rows","cols","placeholder","onChange","resize","Fragment","filteredData","fromEntries","entries","_ref2","fetchDataAndFilter","allData","closePopup","closePreview","AllHydroDataPage","location","useLocation","margin","StationDetailsPage","_location$state","codigo","Loading","LoadingOverlay","App","Router","basename","Link","to","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.6e2a905d.chunk.js","sourcesContent":["// src/context/LoadingContext.js\nimport React, { createContext, useState, useContext } from 'react';\n\nconst LoadingContext = createContext();\n\nexport const useLoading = () => {\n  return useContext(LoadingContext);\n};\n\nexport const LoadingProvider = ({ children }) => {\n  const [loading, setLoading] = useState(false);\n\n  const value = {\n    loading,\n    setLoading\n  };\n\n  return (\n    <LoadingContext.Provider value={value}>\n      {children}\n    </LoadingContext.Provider>\n  );\n};\n","// src/components/HomePage.js\r\n\r\nimport React, { useEffect } from 'react';\r\nimport './css/HomePage.css';\r\nimport { useLoading } from '../context/LoadingContext';\r\n\r\nconst HomePage = () => {\r\n  const { setLoading } = useLoading();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const timer = setTimeout(() => setLoading(false), 500);\r\n    return () => clearTimeout(timer);\r\n  }, [setLoading]);\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <header className=\"home-header\">\r\n        <h1>Portal HidroInfo</h1>\r\n        <p>Informações hidrológicas e meteorológicas ao seu alcance.</p>\r\n      </header>\r\n\r\n      <div className=\"home-content\">\r\n        <section className=\"home-section\">\r\n          <h3>Sobre o Aplicativo</h3>\r\n          <p>\r\n            O aplicativo HidroWeb mobile é uma ferramenta integrante do Sistema Nacional de Informações sobre Recursos Hídricos (SNIRH), gerenciado pela Agência Nacional de Águas (ANA), e permite o acesso aos dados telemétricos coletados pela Rede Hidrometeorológica Nacional (RHN), reunindo dados de chuvas, níveis e vazões de rios, além de informações sobre vazões afluentes, defluentes, níveis e volumes de vários reservatórios em todo o território nacional.\r\n          </p>\r\n          <p>\r\n            Trata-se de uma importante ferramenta para a sociedade e instituições públicas e privadas, pois os dados de reservatórios e aqueles coletados pelas estações hidrometeorológicas são imprescindíveis para a gestão dos recursos hídricos e em diversas atividades econômicas, como geração de energia, irrigação, navegação e indústria, além do projeto, manutenção e operação de infraestrutura hidráulica de pequeno e grande porte, como barragens, drenagem pluvial urbana e mesmo bueiros e telhados.\r\n          </p>\r\n          <p>\r\n            Por meio dessas informações, pode-se, ainda, acompanhar a ocorrência de eventos hidrológicos considerados críticos, inundações e secas, e se planejar medidas de mitigação dos impactos decorrente desses eventos. Mais que acompanhar esses fenômenos, o conjunto de dados até hoje coletados no âmbito da RHN também permite, em diversos casos, a simulação e previsão de eventos hidrológicos e de seus impactos em áreas urbanas ou rurais em diversas bacias hidrográficas.\r\n          </p>\r\n        </section>\r\n        <section className=\"home-section\">\r\n          <h3>Funcionalidades</h3>\r\n          <ul>\r\n            <li>Acesso a dados de estações meteorológicas em tempo real.</li>\r\n            <li>Visualização de históricos de níveis de água e vazões.</li>\r\n            <li>Alertas para eventos hidrológicos críticos.</li>\r\n            <li>Mapas interativos para localização das estações.</li>\r\n          </ul>\r\n        </section>\r\n        <section className=\"home-section\">\r\n          <h3>Como Utilizar</h3>\r\n          <p>\r\n            Navegue pelo aplicativo para explorar as diferentes funcionalidades oferecidas. Utilize o menu principal para acessar seções específicas como \"Estatísticas\", \"Alertas\", \"Mapas\" e muito mais.\r\n          </p>\r\n          <a href=\"https://www.snirh.gov.br\" target=\"_blank\" rel=\"noopener noreferrer\">Saiba mais</a>\r\n        </section>\r\n      </div>\r\n      <footer className=\"home-footer\">\r\n        <div className=\"footer-socials\">\r\n          <a href=\"#facebook\">Facebook</a>\r\n          <a href=\"#twitter\">Twitter</a>\r\n          <a href=\"#instagram\">Instagram</a>\r\n        </div>\r\n        <p>&copy; 2024 HidroInfo. Todos os direitos reservados.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","// hydro-station-data/src/api/apiService.js\n\nimport axios from 'axios';\n\nconst API_BASE_URL = 'https://ows.snirh.gov.br/ords/servicos/hidro/';\n\n// Função para buscar detalhes da estação\nexport const fetchStationDetails = (code) => {\n  return axios.get(`${API_BASE_URL}estacao/${code}`)\n    .catch(error => {\n      console.error(`Erro ao buscar detalhes da estação ${code}:`, error);\n      throw error; // Re-throw para que o chamador lide com o erro\n    });\n};\n\n// Função para buscar dados hidrométricos das últimas 24 horas\nexport const fetchHydro24h = (code) => {\n  return axios.get(`${API_BASE_URL}estacao/24h/${code}`)\n    .catch(error => {\n      console.error(`Erro ao buscar dados hidrométricos para a estação ${code}:`, error);\n      throw error; // Re-throw para que o chamador lide com o erro\n    });\n};\n\n// Função para buscar o resumo de chuva\nexport const fetchRainSummary = (code) => {\n  return axios.get(`${API_BASE_URL}chuva_ult/${code}`)\n    .catch(error => {\n      console.error(`Erro ao buscar resumo de chuva para a estação ${code}:`, error);\n      throw error; // Re-throw para que o chamador lide com o erro\n    });\n};\n","// hydro-station-data/src/utils/utils.js\n\nexport const mapPeriodLabel = (period) => {\n    const periodMap = {\n        \"soma_ult_leituras\": \"24 HORAS\",\n        \"ultimos 7d\": \"7 DIAS\",\n        \"ultimos 30d\": \"30 DIAS\",\n        \"ultimos 12 meses\": \"12 MESES\"\n    };\n    return periodMap[period] || period;\n};\n\nexport const rainSummaryLabels = {\n    'soma_ult_leituras': '24 Horas',\n    \"ultimos 7d\": '7 Dias',\n    \"ultimos 30d\": '30 Dias',\n    \"ultimos 12 meses\": '12 Meses'\n};\n\nexport const hydroDataLabels = {\n    \"data\": \"Data\",\n    \"chuva\": \"Chuva (mm)\",\n    \"nivel\": \"Nível (cm)\",\n    \"vazao\": \"Vazão (m³/s)\"\n};\n\n// Mapeamento dos rótulos dos detalhes\nexport const detailLabels = {\n    nome: \"Nome\",\n    bacia: \"Bacia\",\n    subbacia: \"Sub-bacia\",\n    rio: \"Rio\",\n    estado: \"Estado\",\n    municipio: \"Município\", \n    latitude: \"Latitude\",\n    longitude: \"Longitude\",\n    escala: \"Escala\",\n    operadora: \"Operadora\",\n    operando: \"Operando\",\n    responsavel: \"Responsável\",\n    telemetrica: \"Telemétrica\",\n    sedimentos: \"Sedimentos\",\n    areadrenagem: \"Área de Drenagem\",\n    climatologica: \"Climatológica\",\n    pluviometro: \"Pluviômetro\",\n    tipoestacao: \"Tipo de Estação\",\n    descargaliquida: \"Descarga Líquida\",\n    qualidadedaagua: \"Qualidade da Água\",\n    registradornivel: \"Registrador de Nível\",\n    registradorchuva: \"Registrador de Chuva\",\n    tanqueevapo: \"Tanque Evaporimétrico\"\n};\n\n// Mapeamento dos rótulos para os cabeçalhos das tabelas\nexport const headerDictionary = {\n    stationCode: \"CÓDIGO DA ESTAÇÃO\",\n    nome: \"NOME\",\n    bacia: \"BACIA\",\n    subbacia: \"SUB-BACIA\",\n    rio: \"RIO\",\n    estado: \"ESTADO\",\n    municipio: \"MUNICÍPIO\",\n    responsavel: \"RESPONSÁVEL\",\n    operadora: \"OPERADORA\",\n    latitude: \"LATITUDE\",\n    longitude: \"LONGITUDE\",\n    areadrenagem: \"ÁREA DE DRENAGEM\",\n    tipoestacao: \"TIPO DE ESTAÇÃO\",\n    operando: \"OPERANDO\",\n    telemetrica: \"TELEMETRIA\",\n    climatologica: \"CLIMATOLÓGICA\",\n    pluviometro: \"PLUVIÔMETRO\",\n    registradorchuva: \"REGISTRADOR DE CHUVA\",\n    escala: \"ESCALA\",\n    registradornivel: \"REGISTRADOR DE NÍVEL\",\n    descargaliquida: \"DESCARGA LÍQUIDA\",\n    sedimentos: \"SEDIMENTOS\",\n    qualidadedaagua: \"QUALIDADE DA ÁGUA\",\n    tanqueevapo: \"TANQUE EVAPORIMÉTRICO\",\n    data: \"DATA\",\n    chuva: \"CHUVA (MM)\",\n    nivel: \"NÍVEL (CM)\",\n    vazao: \"VAZÃO (M³/S)\",\n    'soma_ult_leituras': \"PERÍODO\",\n    sum_chuva: \"SOMA DA CHUVA (MM)\"\n};\n\n// Função para formatar as datas no horário local do usuário\nexport const formatDate = (dateString) => {\n    if (!dateString) return 'Data inválida';  // Verifica se a data é nula ou indefinida\n    const date = new Date(dateString);\n    const localTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    return date.toLocaleString('pt-BR', { timeZone: localTimeZone });\n};\n\n// Função para formatar os números\nexport const formatNumber = (number) => {\n    if (number === null || number === undefined) return 'N/A';  // Trata valores nulos ou indefinidos\n    if (number % 1 === 0) {\n        return number.toLocaleString('pt-BR'); // Formata números inteiros\n    }\n    return number.toLocaleString('pt-BR', { minimumFractionDigits: 1 }); // Formata números decimais\n};\n\n// Função para tratar valores nulos ou indefinidos\nexport const safeToString = (value) => {\n    return value !== null && value !== undefined ? value.toString() : '';\n};\n\n\nexport const flattenData = (data, selectedData, selectedDetails, selectedHydro24h, selectedRainSummary) => {\n    const flattened = [];\n    Object.keys(data).forEach(stationCode => {\n      const stationData = data[stationCode];\n      if (selectedData.detalhes && stationData.detalhes) {\n        stationData.detalhes.items.forEach(item => {\n          const filteredItem = Object.keys(item).reduce((acc, key) => {\n            if (selectedDetails[key]) {\n              acc[key] = item[key];\n            }\n            return acc;\n          }, {});\n          flattened.push({ category: 'Detalhes', stationCode, ...filteredItem });\n        });\n      }\n      if (selectedData.hidro_24h && stationData.hidro_24h) {\n        stationData.hidro_24h.items.forEach(item => {\n          const filteredItem = Object.keys(item).reduce((acc, key) => {\n            if (selectedHydro24h[key]) {\n              acc[key] = item[key];\n            }\n            return acc;\n          }, {});\n          flattened.push({ category: 'Hidro 24h', stationCode, ...filteredItem });\n        });\n      }\n      if (selectedData.chuva_ult && stationData.chuva_ult) {\n        stationData.chuva_ult.items.forEach(item => {\n          const periodKey = item[\"'soma_ult_leituras'\"];\n          if (selectedRainSummary[periodKey]) {\n            const periodLabel = mapPeriodLabel(periodKey);\n            flattened.push({\n              category: 'Resumo chuvas',\n              stationCode,\n              period: periodLabel,\n              sum_chuva: item.sum_chuva\n            });\n          }\n        });\n      }\n    });\n    return flattened;\n  };\n  \n  export const replaceColumnNames = (data, labelMap) => {\n    if (data.length === 0) return data;\n  \n    const newHeaders = Object.keys(data[0]).map(header => labelMap[header] || header);\n    const newData = data.map(row => {\n      return Object.keys(row).reduce((acc, key) => {\n        acc[labelMap[key] || key] = row[key];\n        return acc;\n      }, {});\n    });\n  \n    return [newHeaders, ...newData.map(row => Object.values(row))];\n  };\n  \n  export const setColumnWidths = (worksheet, data) => {\n    const objectMaxLength = [];\n    for (let i = 0; i < data.length; i++) {\n      const value = Object.values(data[i]);\n      for (let j = 0; j < value.length; j++) {\n        objectMaxLength[j] = Math.max(objectMaxLength[j] || 0, safeToString(value[j]).length);\n      }\n    }\n    worksheet['!cols'] = objectMaxLength.map(width => ({ wch: width + 2 }));\n  };\n  ","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/DataView.css';\nimport { detailLabels, formatNumber, formatDate , rainSummaryLabels } from '../utils/utils';\n\nconst DataView = React.memo(({ data, selectedDetails, selectedRainSummary, selectedHydro24h }) => {\n\n    const navigate = useNavigate();\n\n    const renderHydroData = (hydroData, stationCode, stationName) => {\n        if (!selectedHydro24h || !Object.values(selectedHydro24h).some(v => v)) return null;\n\n        const dataToShow = hydroData.slice(0, 5);\n        if (!hydroData || hydroData.length === 0) return null;\n\n        return (\n            <div>\n                <h5>Dados Hidrométricos 24h</h5>\n                <table>\n                    <thead>\n                        <tr>\n                            {selectedHydro24h.data && <th>Data</th>}\n                            {selectedHydro24h.chuva && <th style={{ textAlign: 'center' }}>Chuva (mm)</th>}\n                            {selectedHydro24h.nivel && <th style={{ textAlign: 'center' }}>Nível (cm)</th>}\n                            {selectedHydro24h.vazao && <th style={{ textAlign: 'center' }}>Vazão (m³/s)</th>}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {dataToShow.map((item, index) => (\n                            <tr key={index}>\n                                {selectedHydro24h.data && <td>{formatDate(item.data)}</td>}\n                                {selectedHydro24h.chuva && <td style={{ textAlign: 'center' }}>{formatNumber(item.chuva)}</td>}\n                                {selectedHydro24h.nivel && <td style={{ textAlign: 'center' }}>{formatNumber(item.nivel)}</td>}\n                                {selectedHydro24h.vazao && <td style={{ textAlign: 'center' }}>{formatNumber(item.vazao)}</td>}\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n                <button\n                    className=\"view-more-button\"\n                    onClick={() => navigate('/all-hydro-data', { state: { data: hydroData, stationCode, stationName } })}\n                >\n                    Ver Mais\n                </button>\n            </div>\n        );\n    };\n\n    const renderRainSummary = (rainSummary, stationCode) => {\n        if (!selectedRainSummary || !Object.values(selectedRainSummary).some(v => v)) return null;\n        if (!rainSummary || rainSummary.length === 0) return null;\n\n        return (\n            <div>\n                <h5>Resumo de Chuva</h5>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Período</th>\n                            <th style={{ textAlign: 'center' }}>Soma da Chuva (mm)</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rainSummary\n                            .filter(item => selectedRainSummary[item[\"'soma_ult_leituras'\"]])\n                            .map((item, index) => (\n                                <tr key={index}>\n                                    <td>{rainSummaryLabels[item[\"'soma_ult_leituras'\"]] || item[\"'soma_ult_leituras'\"]}</td>\n                                    <td style={{ textAlign: 'center' }}>{formatNumber(item.sum_chuva)}</td>\n                                </tr>\n                            ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    };\n\n\n    const renderDetails = (stationCode, stationData) => {\n        if (!selectedDetails || !Object.values(selectedDetails).some(v => v)) return null;\n\n        return (\n            <div>\n                <h5>Detalhes</h5>\n                <table>\n                    <colgroup>\n                        <col style={{ width: '155px' }} />\n                        <col style={{ width: 'auto' }} />\n                    </colgroup>\n                    <thead>\n                        <tr>\n                            <th>Chave</th>\n                            <th style={{ textAlign: 'center' }}>Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Object.keys(stationData.detalhes.items[0]).map((key) => (\n                            selectedDetails[key] && (\n                                <tr key={key}>\n                                    <td>{detailLabels[key]}</td>\n                                    <td style={{ textAlign: 'center' }}>{stationData.detalhes.items[0][key]}</td>\n                                </tr>\n                            )\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    };\n\n    if (!data) return null;\n\n    return (\n        <div className=\"stations-container\">\n            {Object.keys(data).map((stationCode) => (\n                <div className=\"station-card\" key={stationCode}>\n                    <h4>Estação {stationCode}</h4>\n                    <p style={{ marginBottom: '-5px ' }}>{data[stationCode].nome || 'Nome não disponível'}</p>\n                    {renderDetails(stationCode, data[stationCode])}\n                    {renderHydroData(data[stationCode].hidro_24h.items, stationCode, data[stationCode].nome)}\n                    {renderRainSummary(data[stationCode].chuva_ult.items, stationCode)}\n                </div>\n            ))}\n        </div>\n    );\n});\n\nexport default DataView;\n","import React from 'react';\nimport './css/Popup.css'; // Importa o CSS\n\nconst Popup = ({ message, onClose }) => {\n  return (\n    <div className=\"popup-overlay\">\n      <div className=\"popup-content\">\n        <p>{message}</p>\n        <button onClick={onClose}>Fechar</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Popup;\n","import React from 'react';\r\nimport './css/PreviewModal.css';\r\nimport { mapPeriodLabel, headerDictionary, formatDate, formatNumber, detailLabels } from '../utils/utils';\r\n\r\nconst PreviewModal = ({ data, onConfirm, onCancel, selectedDetails = {}, selectedHydro24h = {}, selectedRainSummary = {} }) => {\r\n  console.log('Dados para pré-visualização:', data);\r\n\r\n  if (!data) {\r\n    return null;\r\n  }\r\n\r\n  const renderTable = (title, tableData, columns, isScrollable = false) => (\r\n    <div className={isScrollable ? \"table-overflow\" : \"\"}>\r\n      <h4>{title}</h4>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {columns.map((col, index) => (\r\n              <th key={index}>{headerDictionary[col] || detailLabels[col] || col}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableData.map((row, index) => (\r\n            <tr key={index}>\r\n              {columns.map((col, colIndex) => (\r\n                <td key={colIndex}>\r\n                {col === 'soma_ult_leituras'\r\n                  ? mapPeriodLabel(row[col])\r\n                  : col === 'data'\r\n                  ? formatDate(row[col])\r\n                  : col === 'PERÍODO'\r\n                  ? row['period'] // Usando 'period' para acessar os dados corretos\r\n                  : row[col] !== null && row[col] !== undefined\r\n                  ? formatNumber(row[col])\r\n                  : 'N/A'}\r\n              </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n\r\n  const detalhesData = data.filter(d => d.category === 'Detalhes');\r\n  const hidro24hData = data.filter(d => d.category === 'Hidro 24h');\r\n  const chuvaUltData = data.filter(d => d.category === 'Resumo chuvas');\r\n\r\n  const selectedDetailColumns = Object.keys(selectedDetails).filter(key => selectedDetails[key]);\r\n  const selectedHydrodataColumns = Object.keys(selectedHydro24h).filter(key => selectedHydro24h[key]);\r\n  const selectedRainSummaryColumns = ['stationCode', 'PERÍODO', 'sum_chuva'];\r\n\r\n  return (\r\n    <div className=\"preview-modal-overlay\">\r\n      <div className=\"preview-modal\">\r\n        <h3>Pré-visualização dos Dados</h3>\r\n        <div className=\"preview-table\">\r\n          {selectedDetailColumns.length > 0 && detalhesData.length > 0 && renderTable('Ficha das estações', detalhesData, ['stationCode', ...selectedDetailColumns], true)}\r\n          {selectedRainSummaryColumns.length > 0 && chuvaUltData.length > 0 && renderTable('Resumo de chuvas', chuvaUltData, selectedRainSummaryColumns)}\r\n          {selectedHydrodataColumns.length > 0 && hidro24hData.length > 0 && renderTable('Histórico 24h', hidro24hData, ['stationCode', ...selectedHydrodataColumns])}\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <button className=\"confirm-button\" onClick={onConfirm}>Confirmar Download</button>\r\n          <button className=\"cancel-button\" onClick={onCancel}>Cancelar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewModal;\r\n","// hydro-station-data/src/components/DataInputPage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { fetchStationDetails, fetchHydro24h, fetchRainSummary } from '../api/apiService';\r\nimport DataView from './DataView';\r\nimport './css/DataInputPage.css';\r\nimport Popup from './Popup';\r\nimport { saveAs } from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport { detailLabels, hydroDataLabels, rainSummaryLabels, mapPeriodLabel, replaceColumnNames, setColumnWidths } from '../utils/utils';\r\nimport { useLoading } from '../context/LoadingContext';\r\nimport PreviewModal from './PreviewModal';\r\n\r\nconst DataInputPage = () => {\r\n  const { setLoading } = useLoading();\r\n\r\n  const [codes, setCodes] = useState(localStorage.getItem('codes') || '');\r\n  const [data, setData] = useState(JSON.parse(localStorage.getItem('data')) || null);\r\n\r\n  const [selectedData] = useState(JSON.parse(localStorage.getItem('selectedData')) || {\r\n    detalhes: true,\r\n    hidro_24h: true,\r\n    chuva_ult: true,\r\n  });\r\n\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [popupMessage, setPopupMessage] = useState('');\r\n\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [previewData, setPreviewData] = useState([]);\r\n\r\n  const initialDetails = Object.keys(detailLabels).reduce((acc, key) => {\r\n    acc[key] = true; // Define todos os filtros como true\r\n    return acc;\r\n  }, {});\r\n\r\n  const initialRainSummary = Object.keys(rainSummaryLabels).reduce((acc, key) => {\r\n    acc[key] = true; // Define todos os filtros como true\r\n    return acc;\r\n  }, {});\r\n\r\n  const initialHydro24h = Object.keys(hydroDataLabels).reduce((acc, key) => {\r\n    acc[key] = true; // Define todos os filtros como true\r\n    return acc;\r\n  }, {});\r\n\r\n  const [selectedDetails, setSelectedDetails] = useState(\r\n    JSON.parse(localStorage.getItem('selectedDetails')) || initialDetails\r\n  );\r\n\r\n  const [selectedRainSummary, setSelectedRainSummary] = useState(\r\n    JSON.parse(localStorage.getItem('selectedRainSummary')) || initialRainSummary\r\n  );\r\n\r\n  const [selectedHydro24h, setSelectedHydro24h] = useState(\r\n    JSON.parse(localStorage.getItem('selectedHydro24h')) || initialHydro24h\r\n  );\r\n\r\n\r\n  // Memoized data for caching\r\n  const memoizedData = {};\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const timer = setTimeout(() => setLoading(false), 650);\r\n    return () => clearTimeout(timer);\r\n  }, [setLoading]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('codes', codes);\r\n  }, [codes]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('data', JSON.stringify(data));\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedData', JSON.stringify(selectedData));\r\n  }, [selectedData]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedDetails', JSON.stringify(selectedDetails));\r\n  }, [selectedDetails]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedRainSummary', JSON.stringify(selectedRainSummary));\r\n  }, [selectedRainSummary]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedHydro24h', JSON.stringify(selectedHydro24h));\r\n  }, [selectedHydro24h]);\r\n\r\n\r\n  const fetchData = async () => {\r\n    if (!codes) {\r\n      setPopupMessage('Por favor, digite os códigos das estações.');\r\n      setShowPopup(true);\r\n      return null;\r\n    }\r\n\r\n    const noDetailsSelected = selectedData.detalhes && !Object.values(selectedDetails).some(v => v);\r\n    const noRainSummarySelected = selectedData.chuva_ult && !Object.values(selectedRainSummary).some(v => v);\r\n    const noHydro24hSelected = selectedData.hidro_24h && !Object.values(selectedHydro24h).some(v => v);\r\n\r\n    if (noDetailsSelected && noRainSummarySelected && noHydro24hSelected) {\r\n      setPopupMessage('Por favor, selecione pelo menos um filtro em uma das categorias.');\r\n      setShowPopup(true);\r\n      return null;\r\n    }\r\n\r\n    setLoading(true);\r\n    const codesArray = codes.split(',').map(code => code.trim());\r\n    const fetchedData = {};\r\n\r\n    const requests = codesArray.map(async (code) => {\r\n      if (memoizedData[code]) {\r\n        fetchedData[code] = memoizedData[code];\r\n        return;\r\n      }\r\n\r\n      fetchedData[code] = {};\r\n\r\n      try {\r\n        const details = await fetchStationDetails(code);\r\n        // console.log(`Detalhes da estação ${code}:`, details.data);\r\n        if (details.data && details.data.items && details.data.items[0]) {\r\n          fetchedData[code].nome = details.data.items[0].nome;\r\n          if (selectedData.detalhes) {\r\n            fetchedData[code].detalhes = details.data;\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(`Erro ao buscar detalhes da estação ${code}:`, error);\r\n      }\r\n\r\n      if (selectedData.hidro_24h) {\r\n        try {\r\n          const hidro24h = await fetchHydro24h(code);\r\n          // console.log(`Dados hidrométricos 24h da estação ${code}:`, hidro24h.data);\r\n          fetchedData[code].hidro_24h = hidro24h.data;\r\n        } catch (error) {\r\n          console.error(`Erro ao buscar dados hidrométricos para a estação ${code}:`, error);\r\n        }\r\n      }\r\n\r\n      if (selectedData.chuva_ult) {\r\n        try {\r\n          const chuvaUlt = await fetchRainSummary(code);\r\n          // console.log(`Resumo de chuva da estação ${code}:`, chuvaUlt.data);\r\n          fetchedData[code].chuva_ult = chuvaUlt.data;\r\n        } catch (error) {\r\n          console.error(`Erro ao buscar resumo de chuva para a estação ${code}:`, error);\r\n        }\r\n      }\r\n\r\n      memoizedData[code] = fetchedData[code];\r\n    });\r\n\r\n    await Promise.all(requests);\r\n\r\n    // console.log('Dados completos:', fetchedData);\r\n    setData(fetchedData);\r\n    setLoading(false);\r\n    return fetchedData;\r\n  };\r\n\r\n  const handleFetchData = async () => {\r\n    const fetchedData = await fetchData();\r\n    if (fetchedData) {\r\n      setData(fetchedData);\r\n    }\r\n  };\r\n\r\n  const fetchDataAndFilter = async () => {\r\n    const fetchedData = await fetchData();\r\n    if (!fetchedData) return;\r\n\r\n    const filteredData = {};\r\n    for (let code in fetchedData) {\r\n      filteredData[code] = { ...fetchedData[code] };\r\n\r\n      if (selectedData.detalhes) {\r\n        filteredData[code].detalhes = {\r\n          items: fetchedData[code].detalhes.items.map((item) =>\r\n            Object.fromEntries(\r\n              Object.entries(item).filter(([key]) => selectedDetails[key])\r\n            )\r\n          )\r\n        };\r\n      } else {\r\n        delete filteredData[code].detalhes;\r\n      }\r\n\r\n      if (selectedData.hidro_24h) {\r\n        filteredData[code].hidro_24h = {\r\n          items: fetchedData[code].hidro_24h.items.map((item) =>\r\n            Object.fromEntries(\r\n              Object.entries(item).filter(([key]) => selectedHydro24h[key])\r\n            )\r\n          )\r\n        };\r\n      } else {\r\n        delete filteredData[code].hidro_24h;\r\n      }\r\n\r\n      if (selectedData.chuva_ult) {\r\n        filteredData[code].chuva_ult = {\r\n          items: fetchedData[code].chuva_ult.items.filter((item) => {\r\n            const periodKey = item[\"'soma_ult_leituras'\"];\r\n            return selectedRainSummary[periodKey];\r\n          })\r\n        };\r\n      } else {\r\n        delete filteredData[code].chuva_ult;\r\n      }\r\n\r\n    }\r\n\r\n    console.log('Dados filtrados:', filteredData);\r\n    return filteredData;\r\n  };\r\n\r\n\r\n  const handlePreview = async () => {\r\n    const filteredData = await fetchDataAndFilter();\r\n    if (filteredData) {\r\n      const allData = flattenData(filteredData);\r\n      console.log('Dados para pré-visualização:', allData);\r\n      setPreviewData(allData);\r\n      setShowPreview(true);\r\n    }\r\n  };\r\n\r\n\r\n  const flattenData = (data) => {\r\n    const flattened = [];\r\n    Object.keys(data).forEach(stationCode => {\r\n      const stationData = data[stationCode];\r\n      if (selectedData.detalhes && stationData.detalhes) {\r\n        stationData.detalhes.items.forEach(item => {\r\n          const filteredItem = Object.keys(item).reduce((acc, key) => {\r\n            if (selectedDetails[key]) {\r\n              acc[key] = item[key];\r\n            }\r\n            return acc;\r\n          }, {});\r\n          flattened.push({ category: 'Detalhes', stationCode, ...filteredItem });\r\n        });\r\n      }\r\n      if (selectedData.hidro_24h && stationData.hidro_24h) {\r\n        stationData.hidro_24h.items.forEach(item => {\r\n          const filteredItem = Object.keys(item).reduce((acc, key) => {\r\n            if (selectedHydro24h[key]) {\r\n              acc[key] = item[key];\r\n            }\r\n            return acc;\r\n          }, {});\r\n          flattened.push({ category: 'Hidro 24h', stationCode, ...filteredItem });\r\n        });\r\n      }\r\n      if (selectedData.chuva_ult && stationData.chuva_ult) {\r\n        stationData.chuva_ult.items.forEach(item => {\r\n          const periodKey = item[\"'soma_ult_leituras'\"];\r\n          if (selectedRainSummary[periodKey]) {\r\n            const periodLabel = mapPeriodLabel(periodKey);\r\n            flattened.push({\r\n              category: 'Resumo chuvas',\r\n              stationCode,\r\n              period: periodLabel,\r\n              sum_chuva: item.sum_chuva\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return flattened;\r\n  };\r\n\r\n\r\n  const handleDownloadData = async () => {\r\n    const fetchedData = await fetchData();\r\n    if (!fetchedData) return;\r\n\r\n    const flattenedData = flattenData(fetchedData, selectedData, selectedDetails, selectedHydro24h, selectedRainSummary);\r\n\r\n    const labelMap = {\r\n      stationCode: 'Código',\r\n      period: 'Período',\r\n      data: 'Data',\r\n      chuva: 'Chuva',\r\n      nivel: 'Nível (cm)',\r\n      vazao: 'Vazão (m³/s)',\r\n      sum_chuva: 'Soma da Chuva (mm)',\r\n      nome: 'Nome',\r\n      // Adicione outros mapeamentos conforme necessário\r\n    };\r\n\r\n    const workbook = XLSX.utils.book_new();\r\n\r\n    // Filtrando apenas os dados que foram selecionados e aparecem em DataView e PreviewModal\r\n    const detailsData = flattenedData.filter(d => d.category === 'Detalhes');\r\n    if (detailsData.length > 0 && Object.values(selectedDetails).some(v => v)) {\r\n      const detailsDataWithHeaders = replaceColumnNames(detailsData, labelMap);\r\n      const detailsWorksheet = XLSX.utils.aoa_to_sheet(detailsDataWithHeaders);\r\n      setColumnWidths(detailsWorksheet, detailsData);\r\n      XLSX.utils.book_append_sheet(workbook, detailsWorksheet, 'Detalhes');\r\n    }\r\n\r\n    const hydro24hData = flattenedData.filter(d => d.category === 'Hidro 24h');\r\n    if (hydro24hData.length > 0 && Object.values(selectedHydro24h).some(v => v)) {\r\n      const hydro24hDataWithHeaders = replaceColumnNames(hydro24hData, labelMap);\r\n      const hydro24hWorksheet = XLSX.utils.aoa_to_sheet(hydro24hDataWithHeaders);\r\n      setColumnWidths(hydro24hWorksheet, hydro24hData);\r\n      XLSX.utils.book_append_sheet(workbook, hydro24hWorksheet, 'Hidro 24h');\r\n    }\r\n\r\n    const rainSummaryData = flattenedData.filter(d => d.category === 'Resumo chuvas');\r\n    if (rainSummaryData.length > 0 && Object.values(selectedRainSummary).some(v => v)) {\r\n      const rainSummaryDataWithHeaders = replaceColumnNames(rainSummaryData, labelMap);\r\n      const rainSummaryWorksheet = XLSX.utils.aoa_to_sheet(rainSummaryDataWithHeaders);\r\n      setColumnWidths(rainSummaryWorksheet, rainSummaryData);\r\n      XLSX.utils.book_append_sheet(workbook, rainSummaryWorksheet, 'Resumo chuvas');\r\n    }\r\n\r\n    if (workbook.SheetNames.length === 0) {\r\n      console.warn(\"Nenhuma categoria de dados selecionada para download.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const xlsxData = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n    const blob = new Blob([xlsxData], { type: 'application/octet-stream' });\r\n    saveAs(blob, 'hydro_station_data.xlsx');\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n\r\n  const handleDetailsCheckboxChange = (e) => {\r\n    setSelectedDetails({\r\n      ...selectedDetails,\r\n      [e.target.name]: e.target.checked,\r\n    });\r\n  };\r\n\r\n  const handleRainSummaryCheckboxChange = (e) => {\r\n    setSelectedRainSummary({\r\n      ...selectedRainSummary,\r\n      [e.target.name]: e.target.checked,\r\n    });\r\n  };\r\n\r\n  const handleHydro24hCheckboxChange = (e) => {\r\n    setSelectedHydro24h({\r\n      ...selectedHydro24h,\r\n      [e.target.name]: e.target.checked,\r\n    });\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setShowPopup(false);\r\n  };\r\n\r\n  const closePreview = () => {\r\n    setShowPreview(false);\r\n  };\r\n\r\n  const confirmDownload = () => {\r\n    setShowPreview(false);\r\n    handleDownloadData();\r\n  };\r\n\r\n  const selectAll = (category, isSelected) => {\r\n    if (category === 'detalhes') {\r\n      const newSelectedDetails = Object.keys(selectedDetails).reduce((acc, key) => {\r\n        acc[key] = isSelected;\r\n        return acc;\r\n      }, {});\r\n      setSelectedDetails(newSelectedDetails);\r\n    } else if (category === 'chuva_ult') {\r\n      const newSelectedRainSummary = Object.keys(selectedRainSummary).reduce((acc, key) => {\r\n        acc[key] = isSelected;\r\n        return acc;\r\n      }, {});\r\n      setSelectedRainSummary(newSelectedRainSummary);\r\n    } else if (category === 'hidro_24h') {\r\n      const newSelectedHydro24h = Object.keys(selectedHydro24h).reduce((acc, key) => {\r\n        acc[key] = isSelected;\r\n        return acc;\r\n      }, {});\r\n      setSelectedHydro24h(newSelectedHydro24h);\r\n    }\r\n  };\r\n\r\n  // Estados de visibilidade\r\n  const [showDetails, setShowDetails] = useState(true);\r\n  const [showRainSummary, setShowRainSummary] = useState(true);\r\n  const [showHydro24h, setShowHydro24h] = useState(true);\r\n\r\n  const toggleVisibility = (category) => {\r\n    if (category === 'detalhes') {\r\n      setShowDetails(prev => !prev);\r\n    } else if (category === 'chuva_ult') {\r\n      setShowRainSummary(prev => !prev);\r\n    } else if (category === 'hidro_24h') {\r\n      setShowHydro24h(prev => !prev);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Painel de Controle de Dados</h2>\r\n      <label className='list-stations'>\r\n        Lista de códigos de estações:\r\n      </label>\r\n      <textarea\r\n        rows=\"5\"\r\n        cols=\"50\"\r\n        placeholder=\"Digite os códigos das estações separados por vírgulas\"\r\n        value={codes}\r\n        onChange={(e) => setCodes(e.target.value)}\r\n        style={{ resize: 'vertical' }}\r\n      ></textarea>\r\n      <div className=\"filters-container\">\r\n        <div className=\"category\">\r\n          <h3 onClick={() => toggleVisibility('detalhes')}>Ficha da estação</h3>\r\n          {showDetails && (\r\n            <>\r\n              <div className=\"select-buttons\">\r\n                <button onClick={() => selectAll('detalhes', true)}>Selecionar todos</button>\r\n                <button onClick={() => selectAll('detalhes', false)}>Desmarcar todos</button>\r\n              </div>\r\n              <div className=\"filters\">\r\n                {Object.keys(selectedDetails).filter(key => key !== 'codigo').map((key) => (\r\n                  <label key={key} className='label-checkbox'>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={key}\r\n                      className=\"details-checkbox\"\r\n                      checked={selectedDetails[key]}\r\n                      onChange={handleDetailsCheckboxChange}\r\n                    />\r\n                    {detailLabels[key]}\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"category\">\r\n          <h3 onClick={() => toggleVisibility('chuva_ult')}>Resumo de Chuva</h3>\r\n          {showRainSummary && (\r\n            <>\r\n              <div className=\"select-buttons\">\r\n                <button onClick={() => selectAll('chuva_ult', true)}>Selecionar todos</button>\r\n                <button onClick={() => selectAll('chuva_ult', false)}>Desmarcar todos</button>\r\n              </div>\r\n              <div className=\"filters\">\r\n                {Object.keys(selectedRainSummary).map((key) => (\r\n                  <label key={key} className='label-checkbox'>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={key}\r\n                      className=\"rain-checkbox\"\r\n                      checked={selectedRainSummary[key]}\r\n                      onChange={handleRainSummaryCheckboxChange}\r\n                    />\r\n                    {rainSummaryLabels[key] || key}\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"category\">\r\n          <h3 onClick={() => toggleVisibility('hidro_24h')}>Dados Hidrométricos 24h</h3>\r\n          {showHydro24h && (\r\n            <>\r\n              <div className=\"select-buttons\">\r\n                <button onClick={() => selectAll('hidro_24h', true)}>Selecionar todos</button>\r\n                <button onClick={() => selectAll('hidro_24h', false)}>Desmarcar todos</button>\r\n              </div>\r\n              <div className=\"filters\">\r\n                {Object.keys(selectedHydro24h).map((key) => (\r\n                  <label key={key} className='label-checkbox'>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={key}\r\n                      className=\"hydro-checkbox\"\r\n                      checked={selectedHydro24h[key]}\r\n                      onChange={handleHydro24hCheckboxChange}\r\n                    />\r\n                    {hydroDataLabels[key]}\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button onClick={handleFetchData}>Buscar e Exibir Dados</button>\r\n      <button onClick={handlePreview}>Revisar Dados Antes do Download</button>\r\n      <button onClick={confirmDownload}>Confirmar e Baixar Dados XLSX</button>\r\n      {data && <DataView\r\n        className=\"data-view\"\r\n        data={data}\r\n        selectedDetails={selectedDetails}\r\n        selectedRainSummary={selectedRainSummary}\r\n        selectedHydro24h={selectedHydro24h}\r\n      />}\r\n\r\n      {showPopup && (\r\n        <Popup message={popupMessage} onClose={closePopup} />\r\n      )}\r\n\r\n      {showPreview && (\r\n        <PreviewModal\r\n          data={previewData}\r\n          onConfirm={confirmDownload}\r\n          onCancel={closePreview}\r\n          selectedDetails={selectedDetails}\r\n          selectedRainSummary={selectedRainSummary}\r\n          selectedHydro24h={selectedHydro24h}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataInputPage;\r\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { formatNumber, formatDate } from '../utils/utils'; // Importa os utilitários\nimport './css/DataView.css';  // Importa o novo CSS para os cartões de estação\n\n// Componente para exibir todos os dados hidrométricos\nconst AllHydroDataPage = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const { data, stationCode, stationName } = location.state || {};\n\n    if (!data) {\n        return <div>Nenhum dado disponível.</div>;\n    }\n\n    return (\n        <div className=\"all-hydro-data-container\">\n            <div className=\"station-header\">\n                <div className=\"station-header-inner\">\n                    <h3 className=\"station-code\">Estação {stationCode}</h3>\n                    <h4 className=\"station-name\">{stationName || 'Nome não disponível'}</h4>\n                </div>\n                <h3 style={{ margin: '0' }}>Dados Hidrométricos 24h</h3>\n            </div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Data</th>\n                        <th>Chuva (mm)</th>\n                        <th>Nível (cm)</th>\n                        <th>Vazão (m³/s)</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.map((item, index) => (\n                        <tr key={index}>\n                            <td>{formatDate(item.data)}</td>\n                            <td>{formatNumber(item.chuva)}</td>\n                            <td>{formatNumber(item.nivel)}</td>\n                            <td>{formatNumber(item.vazao)}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <button onClick={() => navigate(-1)}>Voltar</button>\n        </div>\n    );\n};\n\nexport default AllHydroDataPage;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { formatNumber } from '../utils/utils'; // Importa os utilitários\n\n\n// Componente para exibir os detalhes da estação\nconst StationDetailsPage = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const stationData = location.state?.data;\n\n    if (!stationData) {\n        return <div>Nenhum dado disponível.</div>;\n    }\n\n    return (\n        <div>\n            <h3>Detalhes da Estação {stationData.detalhes.items[0].codigo}</h3>\n            <table>\n                <tbody>\n                    <tr>\n                        <td>Código</td>\n                        <td>{stationData.detalhes.items[0].codigo}</td>\n                    </tr>\n                    <tr>\n                        <td>Nome</td>\n                        <td>{stationData.detalhes.items[0].nome}</td>\n                    </tr>\n                    <tr>\n                        <td>Bacia</td>\n                        <td>{stationData.detalhes.items[0].bacia}</td>\n                    </tr>\n                    <tr>\n                        <td>Rio</td>\n                        <td>{stationData.detalhes.items[0].rio}</td>\n                    </tr>\n                    <tr>\n                        <td>Estado</td>\n                        <td>{stationData.detalhes.items[0].estado}</td>\n                    </tr>\n                    <tr>\n                        <td>Município</td>\n                        <td>{stationData.detalhes.items[0].municipio}</td>\n                    </tr>\n                    <tr>\n                        <td>Responsável</td>\n                        <td>{stationData.detalhes.items[0].responsavel}</td>\n                    </tr>\n                    <tr>\n                        <td>Operadora</td>\n                        <td>{stationData.detalhes.items[0].operadora}</td>\n                    </tr>\n                    <tr>\n                        <td>Latitude</td>\n                        <td>{formatNumber(stationData.detalhes.items[0].latitude)}</td>\n                    </tr>\n                    <tr>\n                        <td>Longitude</td>\n                        <td>{formatNumber(stationData.detalhes.items[0].longitude)}</td>\n                    </tr>\n                    <tr>\n                        <td>Área de Drenagem</td>\n                        <td>{formatNumber(stationData.detalhes.items[0].areadrenagem)}</td>\n                    </tr>\n                    <tr>\n                        <td>Tipo de Estação</td>\n                        <td>{stationData.detalhes.items[0].tipoestacao}</td>\n                    </tr>\n                    <tr>\n                        <td>Operando</td>\n                        <td>{stationData.detalhes.items[0].operando}</td>\n                    </tr>\n                    <tr>\n                        <td>Telemétrica</td>\n                        <td>{stationData.detalhes.items[0].telemetrica}</td>\n                    </tr>\n                    <tr>\n                        <td>Climatológica</td>\n                        <td>{stationData.detalhes.items[0].climatologica}</td>\n                    </tr>\n                    <tr>\n                        <td>Pluviômetro</td>\n                        <td>{stationData.detalhes.items[0].pluviometro}</td>\n                    </tr>\n                    <tr>\n                        <td>Registrador de Chuva</td>\n                        <td>{stationData.detalhes.items[0].registradorchuva}</td>\n                    </tr>\n                    <tr>\n                        <td>Escala</td>\n                        <td>{stationData.detalhes.items[0].escala}</td>\n                    </tr>\n                    <tr>\n                        <td>Registrador de Nível</td>\n                        <td>{stationData.detalhes.items[0].registradornivel}</td>\n                    </tr>\n                    <tr>\n                        <td>Descarga Líquida</td>\n                        <td>{stationData.detalhes.items[0].descargaliquida}</td>\n                    </tr>\n                    <tr>\n                        <td>Sedimentos</td>\n                        <td>{stationData.detalhes.items[0].sedimentos}</td>\n                    </tr>\n                    <tr>\n                        <td>Qualidade da Água</td>\n                        <td>{stationData.detalhes.items[0].qualidadedaagua}</td>\n                    </tr>\n                    <tr>\n                        <td>Tanque Evapo</td>\n                        <td>{stationData.detalhes.items[0].tanqueevapo}</td>\n                    </tr>\n                </tbody>\n            </table>\n            <button onClick={() => navigate(-1)}>Voltar</button>\n        </div>\n    );\n};\n\nexport default StationDetailsPage;\n    ","// src/components/Loading/Loading.js\nimport React from 'react';\nimport './Loading.css';\n\nconst Loading = () => {\n  return (\n    <div className=\"loading-overlay\">\n      <div className=\"loading-spinner\"></div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\r\nimport HomePage from './components/HomePage';\r\nimport DataInputPage from './components/DataInputPage';\r\nimport AllHydroDataPage from './components/AllHydroDataPage';\r\nimport StationDetailsPage from './components/StationDetailsPage';\r\nimport { LoadingProvider, useLoading } from './context/LoadingContext';\r\nimport Loading from './components/Loading/Loading';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\r\n  const basename = process.env.NODE_ENV === 'development' ? '' : '/hydro-station-data';\r\n\r\n  return (\r\n    <LoadingProvider>\r\n      <Router basename={basename}>\r\n        <nav>\r\n          <ul>\r\n            <li><Link to=\"/\">INÍCIO</Link></li>\r\n            <li><Link to=\"/data-input\">PESQUISAR ESTAÇÕES</Link></li>\r\n          </ul>\r\n        </nav>\r\n        <Routes>\r\n          <Route path=\"/\" element={<HomePage />} />\r\n          <Route path=\"/data-input\" element={<DataInputPage />} />\r\n          <Route path=\"/all-hydro-data\" element={<AllHydroDataPage />} />\r\n          <Route path=\"/station-details\" element={<StationDetailsPage />} />\r\n        </Routes>\r\n        <LoadingOverlay />\r\n      </Router>\r\n    </LoadingProvider>\r\n  );\r\n};\r\n\r\nconst LoadingOverlay = () => {\r\n  const { loading } = useLoading();\r\n  return loading ? <Loading /> : null;\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport './index.css';\r\nimport './styles.css'; // Importe o arquivo CSS\r\n\r\n// Renderiza o aplicativo no elemento root do HTML\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}