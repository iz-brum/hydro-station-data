{"version":3,"sources":["context/LoadingContext.js","components/HomePage.js","api/apiService.js","utils/utils.js","components/DataView.js","components/Popup.js","components/PreviewModal.js","components/DataInputPage.js","components/AllHydroDataPage.js","components/StationDetailsPage.js","components/Loading/Loading.js","App.js","index.js"],"names":["LoadingContext","createContext","useLoading","useContext","LoadingProvider","_ref","children","loading","setLoading","useState","value","React","createElement","Provider","HomePage","useEffect","timer","setTimeout","clearTimeout","className","href","target","rel","API_BASE_URL","mapPeriodLabel","period","rainSummaryLabels","hydroDataLabels","detailLabels","nome","bacia","subbacia","rio","estado","municipio","latitude","longitude","escala","operadora","operando","responsavel","telemetrica","sedimentos","areadrenagem","climatologica","pluviometro","tipoestacao","descargaliquida","qualidadedaagua","registradornivel","registradorchuva","tanqueevapo","headerDictionary","stationCode","data","chuva","nivel","vazao","sum_chuva","formatDate","dateString","date","Date","localTimeZone","Intl","DateTimeFormat","resolvedOptions","timeZone","toLocaleString","formatNumber","number","undefined","minimumFractionDigits","safeToString","toString","replaceColumnNames","labelMap","length","Object","keys","map","header","row","reduce","acc","key","values","setColumnWidths","worksheet","objectMaxLength","i","j","Math","max","width","wch","getDomain","chartData","filteredData","d","filter","isNaN","Number","MAX_SAFE_INTEGER","min","margin","DataView","memo","selectedDetails","selectedRainSummary","selectedHydro24h","navigate","useNavigate","activeTab","setActiveTab","_data$stationCode$hid","_data$stationCode$chu","rainSummary","stationData","style","marginBottom","some","v","detalhes","items","textAlign","renderHydroData","hydroData","stationName","item","parseFloat","label","tab","concat","onClick","ResponsiveContainer","height","LineChart","slice","reverse","left","right","CartesianGrid","strokeDasharray","XAxis","dataKey","tickFormatter","tick","replace","toLocaleTimeString","hour","minute","YAxis","domain","toFixed","Tooltip","formatter","name","Line","type","stroke","dot","state","hidro_24h","chuva_ult","index","Popup","message","onClose","PreviewModal","onConfirm","onCancel","console","log","renderTable","title","tableData","columns","isScrollable","arguments","col","colIndex","detalhesData","category","hidro24hData","chuvaUltData","selectedDetailColumns","selectedHydrodataColumns","selectedRainSummaryColumns","DataInputPage","codes","setCodes","localStorage","getItem","setData","JSON","parse","selectedData","showPopup","setShowPopup","popupMessage","setPopupMessage","showPreview","setShowPreview","previewData","setPreviewData","initialDetails","initialRainSummary","initialHydro24h","setSelectedDetails","setSelectedRainSummary","setSelectedHydro24h","memoizedData","setItem","stringify","fetchData","async","noDetailsSelected","noRainSummarySelected","noHydro24hSelected","codesArray","split","code","trim","fetchedData","invalidCodes","Set","requests","details","axios","get","catch","error","fetchStationDetails","add","hidro24h","fetchHydro24h","chuvaUlt","fetchRainSummary","Promise","all","validData","forEach","size","join","flattenData","flattened","filteredItem","push","periodKey","periodLabel","handleDetailsCheckboxChange","e","checked","handleRainSummaryCheckboxChange","handleHydro24hCheckboxChange","confirmDownload","flattenedData","workbook","XLSX","book_new","detailsData","detailsDataWithHeaders","detailsWorksheet","aoa_to_sheet","book_append_sheet","hydro24hData","hydro24hDataWithHeaders","hydro24hWorksheet","rainSummaryData","rainSummaryDataWithHeaders","rainSummaryWorksheet","SheetNames","warn","xlsxData","bookType","blob","Blob","saveAs","handleDownloadData","selectAll","isSelected","newSelectedDetails","newSelectedRainSummary","newSelectedHydro24h","showDetails","setShowDetails","showRainSummary","setShowRainSummary","showHydro24h","setShowHydro24h","toggleVisibility","prev","rows","cols","placeholder","onChange","resize","Fragment","fromEntries","entries","_ref2","fetchDataAndFilter","allData","closePopup","closePreview","AllHydroDataPage","location","useLocation","StationDetailsPage","_location$state","codigo","Loading","LoadingOverlay","App","Router","basename","Link","to","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d959b760.chunk.js","sourcesContent":["// src/context/LoadingContext.js\nimport React, { createContext, useState, useContext } from 'react';\n\nconst LoadingContext = createContext();\n\nexport const useLoading = () => {\n  return useContext(LoadingContext);\n};\n\nexport const LoadingProvider = ({ children }) => {\n  const [loading, setLoading] = useState(false);\n\n  const value = {\n    loading,\n    setLoading\n  };\n\n  return (\n    <LoadingContext.Provider value={value}>\n      {children}\n    </LoadingContext.Provider>\n  );\n};\n","// src/components/HomePage.js\r\n\r\nimport React, { useEffect } from 'react';\r\nimport './css/HomePage.css';\r\nimport { useLoading } from '../context/LoadingContext';\r\n\r\nconst HomePage = () => {\r\n  const { setLoading } = useLoading();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const timer = setTimeout(() => setLoading(false), 500);\r\n    return () => clearTimeout(timer);\r\n  }, [setLoading]);\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <header className=\"home-header\">\r\n        <h1>Portal HidroInfo</h1>\r\n        <p>Informações hidrológicas e meteorológicas ao seu alcance.</p>\r\n      </header>\r\n\r\n      <div className=\"home-content\">\r\n        <section className=\"home-section\">\r\n          <h3>Sobre o Aplicativo</h3>\r\n          <p>\r\n            O aplicativo HidroWeb mobile é uma ferramenta integrante do Sistema Nacional de Informações sobre Recursos Hídricos (SNIRH), gerenciado pela Agência Nacional de Águas (ANA), e permite o acesso aos dados telemétricos coletados pela Rede Hidrometeorológica Nacional (RHN), reunindo dados de chuvas, níveis e vazões de rios, além de informações sobre vazões afluentes, defluentes, níveis e volumes de vários reservatórios em todo o território nacional.\r\n          </p>\r\n          <p>\r\n            Trata-se de uma importante ferramenta para a sociedade e instituições públicas e privadas, pois os dados de reservatórios e aqueles coletados pelas estações hidrometeorológicas são imprescindíveis para a gestão dos recursos hídricos e em diversas atividades econômicas, como geração de energia, irrigação, navegação e indústria, além do projeto, manutenção e operação de infraestrutura hidráulica de pequeno e grande porte, como barragens, drenagem pluvial urbana e mesmo bueiros e telhados.\r\n          </p>\r\n          <p>\r\n            Por meio dessas informações, pode-se, ainda, acompanhar a ocorrência de eventos hidrológicos considerados críticos, inundações e secas, e se planejar medidas de mitigação dos impactos decorrente desses eventos. Mais que acompanhar esses fenômenos, o conjunto de dados até hoje coletados no âmbito da RHN também permite, em diversos casos, a simulação e previsão de eventos hidrológicos e de seus impactos em áreas urbanas ou rurais em diversas bacias hidrográficas.\r\n          </p>\r\n        </section>\r\n        <section className=\"home-section\">\r\n          <h3>Funcionalidades</h3>\r\n          <ul>\r\n            <li>Acesso a dados de estações meteorológicas em tempo real.</li>\r\n            <li>Visualização de históricos de níveis de água e vazões.</li>\r\n            <li>Alertas para eventos hidrológicos críticos.</li>\r\n            <li>Mapas interativos para localização das estações.</li>\r\n          </ul>\r\n        </section>\r\n        <section className=\"home-section\">\r\n          <h3>Como Utilizar</h3>\r\n          <p>\r\n            Navegue pelo aplicativo para explorar as diferentes funcionalidades oferecidas. Utilize o menu principal para acessar seções específicas como \"Estatísticas\", \"Alertas\", \"Mapas\" e muito mais.\r\n          </p>\r\n          <a href=\"https://www.snirh.gov.br\" target=\"_blank\" rel=\"noopener noreferrer\">Saiba mais</a>\r\n        </section>\r\n      </div>\r\n      <footer className=\"home-footer\">\r\n        <div className=\"footer-socials\">\r\n          <a href=\"#facebook\">Facebook</a>\r\n          <a href=\"#twitter\">Twitter</a>\r\n          <a href=\"#instagram\">Instagram</a>\r\n        </div>\r\n        <p>&copy; 2024 HidroInfo. Todos os direitos reservados.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","// hydro-station-data/src/api/apiService.js\n\nimport axios from 'axios';\n\nconst API_BASE_URL = 'https://ows.snirh.gov.br/ords/servicos/hidro/';\n\n// Função para buscar detalhes da estação\nexport const fetchStationDetails = (code) => {\n  return axios.get(`${API_BASE_URL}estacao/${code}`)\n    .catch(error => {\n      console.error(`Erro ao buscar detalhes da estação ${code}:`, error);\n      throw error; // Re-throw para que o chamador lide com o erro\n    });\n};\n\n// Função para buscar dados hidrométricos das últimas 24 horas\nexport const fetchHydro24h = (code) => {\n  return axios.get(`${API_BASE_URL}estacao/24h/${code}`)\n    .catch(error => {\n      console.error(`Erro ao buscar dados hidrométricos para a estação ${code}:`, error);\n      throw error; // Re-throw para que o chamador lide com o erro\n    });\n};\n\n// Função para buscar o resumo de chuva\nexport const fetchRainSummary = (code) => {\n  return axios.get(`${API_BASE_URL}chuva_ult/${code}`)\n    .catch(error => {\n      console.error(`Erro ao buscar resumo de chuva para a estação ${code}:`, error);\n      throw error; // Re-throw para que o chamador lide com o erro\n    });\n};\n","// hydro-station-data/src/utils/utils.js\n\nexport const mapPeriodLabel = (period) => {\n  const periodMap = {\n    \"soma_ult_leituras\": \"24 HORAS\",\n    \"ultimos 7d\": \"7 DIAS\",\n    \"ultimos 30d\": \"30 DIAS\",\n    \"ultimos 12 meses\": \"12 MESES\"\n  };\n  return periodMap[period] || period;\n};\n\nexport const rainSummaryLabels = {\n  'soma_ult_leituras': '24 Horas',\n  \"ultimos 7d\": '7 Dias',\n  \"ultimos 30d\": '30 Dias',\n  \"ultimos 12 meses\": '12 Meses'\n};\n\nexport const hydroDataLabels = {\n  \"data\": \"Data\",\n  \"chuva\": \"Chuva (mm)\",\n  \"nivel\": \"Nível (cm)\",\n  \"vazao\": \"Vazão (m³/s)\"\n};\n\n// Mapeamento dos rótulos dos detalhes\nexport const detailLabels = {\n  nome: \"Nome\",\n  bacia: \"Bacia\",\n  subbacia: \"Sub-bacia\",\n  rio: \"Rio\",\n  estado: \"Estado\",\n  municipio: \"Município\",\n  latitude: \"Latitude\",\n  longitude: \"Longitude\",\n  escala: \"Escala\",\n  operadora: \"Operadora\",\n  operando: \"Operando\",\n  responsavel: \"Responsável\",\n  telemetrica: \"Telemétrica\",\n  sedimentos: \"Sedimentos\",\n  areadrenagem: \"Área de Drenagem\",\n  climatologica: \"Climatológica\",\n  pluviometro: \"Pluviômetro\",\n  tipoestacao: \"Tipo de Estação\",\n  descargaliquida: \"Descarga Líquida\",\n  qualidadedaagua: \"Qualidade da Água\",\n  registradornivel: \"Registrador de Nível\",\n  registradorchuva: \"Registrador de Chuva\",\n  tanqueevapo: \"Tanque Evaporimétrico\"\n};\n\n// Mapeamento dos rótulos para os cabeçalhos das tabelas\nexport const headerDictionary = {\n  stationCode: \"CÓDIGO DA ESTAÇÃO\",\n  nome: \"NOME\",\n  bacia: \"BACIA\",\n  subbacia: \"SUB-BACIA\",\n  rio: \"RIO\",\n  estado: \"ESTADO\",\n  municipio: \"MUNICÍPIO\",\n  responsavel: \"RESPONSÁVEL\",\n  operadora: \"OPERADORA\",\n  latitude: \"LATITUDE\",\n  longitude: \"LONGITUDE\",\n  areadrenagem: \"ÁREA DE DRENAGEM\",\n  tipoestacao: \"TIPO DE ESTAÇÃO\",\n  operando: \"OPERANDO\",\n  telemetrica: \"TELEMETRIA\",\n  climatologica: \"CLIMATOLÓGICA\",\n  pluviometro: \"PLUVIÔMETRO\",\n  registradorchuva: \"REGISTRADOR DE CHUVA\",\n  escala: \"ESCALA\",\n  registradornivel: \"REGISTRADOR DE NÍVEL\",\n  descargaliquida: \"DESCARGA LÍQUIDA\",\n  sedimentos: \"SEDIMENTOS\",\n  qualidadedaagua: \"QUALIDADE DA ÁGUA\",\n  tanqueevapo: \"TANQUE EVAPORIMÉTRICO\",\n  data: \"DATA\",\n  chuva: \"CHUVA (MM)\",\n  nivel: \"NÍVEL (CM)\",\n  vazao: \"VAZÃO (M³/S)\",\n  'soma_ult_leituras': \"PERÍODO\",\n  sum_chuva: \"SOMA DA CHUVA (MM)\"\n};\n\n// Função para formatar as datas no horário local do usuário\nexport const formatDate = (dateString) => {\n  if (!dateString) return 'Data inválida';  // Verifica se a data é nula ou indefinida\n  const date = new Date(dateString);\n  const localTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  return date.toLocaleString('pt-BR', { timeZone: localTimeZone });\n};\n\n// Função para formatar os números\nexport const formatNumber = (number) => {\n  if (number === null || number === undefined) return 'N/A';  // Trata valores nulos ou indefinidos\n  if (number % 1 === 0) {\n    return number.toLocaleString('pt-BR'); // Formata números inteiros\n  }\n  return number.toLocaleString('pt-BR', { minimumFractionDigits: 1 }); // Formata números decimais\n};\n\n// Função para tratar valores nulos ou indefinidos\nexport const safeToString = (value) => {\n  return value !== null && value !== undefined ? value.toString() : '';\n};\n\n\nexport const flattenData = (data, selectedData, selectedDetails, selectedHydro24h, selectedRainSummary) => {\n  const flattened = [];\n  Object.keys(data).forEach(stationCode => {\n    const stationData = data[stationCode];\n    if (selectedData.detalhes && stationData.detalhes) {\n      stationData.detalhes.items.forEach(item => {\n        const filteredItem = Object.keys(item).reduce((acc, key) => {\n          if (selectedDetails[key]) {\n            acc[key] = item[key];\n          }\n          return acc;\n        }, {});\n        flattened.push({ category: 'Detalhes', stationCode, ...filteredItem });\n      });\n    }\n    if (selectedData.hidro_24h && stationData.hidro_24h) {\n      stationData.hidro_24h.items.forEach(item => {\n        const filteredItem = Object.keys(item).reduce((acc, key) => {\n          if (selectedHydro24h[key]) {\n            acc[key] = item[key];\n          }\n          return acc;\n        }, {});\n        flattened.push({ category: 'Hidro 24h', stationCode, ...filteredItem });\n      });\n    }\n    if (selectedData.chuva_ult && stationData.chuva_ult) {\n      stationData.chuva_ult.items.forEach(item => {\n        const periodKey = item[\"'soma_ult_leituras'\"];\n        if (selectedRainSummary[periodKey]) {\n          const periodLabel = mapPeriodLabel(periodKey);\n          flattened.push({\n            category: 'Resumo chuvas',\n            stationCode,\n            period: periodLabel,\n            sum_chuva: item.sum_chuva\n          });\n        }\n      });\n    }\n  });\n  return flattened;\n};\n\nexport const replaceColumnNames = (data, labelMap) => {\n  if (data.length === 0) return data;\n\n  const newHeaders = Object.keys(data[0]).map(header => labelMap[header] || header);\n  const newData = data.map(row => {\n    return Object.keys(row).reduce((acc, key) => {\n      acc[labelMap[key] || key] = row[key];\n      return acc;\n    }, {});\n  });\n\n  return [newHeaders, ...newData.map(row => Object.values(row))];\n};\n\nexport const setColumnWidths = (worksheet, data) => {\n  const objectMaxLength = [];\n  for (let i = 0; i < data.length; i++) {\n    const value = Object.values(data[i]);\n    for (let j = 0; j < value.length; j++) {\n      objectMaxLength[j] = Math.max(objectMaxLength[j] || 0, safeToString(value[j]).length);\n    }\n  }\n  worksheet['!cols'] = objectMaxLength.map(width => ({ wch: width + 2 }));\n};\n\nexport const getDomain = (chartData, key) => {\n  // Filtra apenas valores numéricos válidos e maiores ou iguais a zero\n  const filteredData = chartData.map(d => d[key]).filter(value => typeof value === 'number' && !isNaN(value) && value >= 0 && value < Number.MAX_SAFE_INTEGER);\n\n  if (filteredData.length === 0) return [0, 1]; // Retorna um domínio padrão se não houver dados válidos\n\n  const min = Math.min(...filteredData);\n  const max = Math.max(...filteredData);\n  const margin = (max - min) * 0.1;\n\n  // Corrige o domínio caso min e max sejam iguais ou se max é muito alto\n  if (min === max || max > Number.MAX_SAFE_INTEGER) return [min - 1, max + 1];\n\n  // Garante que o valor mínimo não seja menor que zero e aplica margem\n  return [Math.max(min - margin, 0), max + margin];\n};","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n    LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer\n} from 'recharts';\nimport './css/DataView.css';\nimport { detailLabels, formatNumber, formatDate, rainSummaryLabels, getDomain } from '../utils/utils';\n\n\nconst DataView = React.memo(({ data, selectedDetails, selectedRainSummary, selectedHydro24h }) => {\n    const navigate = useNavigate();\n    const [activeTab, setActiveTab] = useState('chuva');\n\n    const renderHydroData = (hydroData, stationCode, stationName) => {\n        if (!selectedHydro24h || !Object.values(selectedHydro24h).some(v => v)) return null;\n        if (!hydroData || hydroData.length === 0) return null;\n\n        const chartData = hydroData.map(item => ({\n            data: formatDate(item.data),\n            chuva: selectedHydro24h.chuva ? parseFloat(item.chuva) : null,\n            nivel: selectedHydro24h.nivel ? parseFloat(item.nivel) : null,\n            vazao: selectedHydro24h.vazao ? parseFloat(item.vazao) : null,\n        }));\n\n        const tabs = [\n            { key: 'chuva', label: 'Chuva (mm)' },\n            { key: 'nivel', label: 'Nível (cm)' },\n            { key: 'vazao', label: 'Vazão (m³/s)' },\n        ];\n\n        return (\n            <div>\n                <h5>Dados Hidrométricos 24h</h5>\n                <div className=\"tabs\">\n                    {tabs.map(tab => selectedHydro24h[tab.key] && (\n                        <button\n                            key={tab.key}\n                            className={`tab-button ${activeTab === tab.key ? 'active' : ''}`}\n                            onClick={() => setActiveTab(tab.key)}\n                        >\n                            {tab.label}\n                        </button>\n                    ))}\n                </div>\n                <ResponsiveContainer width=\"101%\" height={400}>\n                    <LineChart data={chartData.slice().reverse()} margin={{ left: 30, right: 20 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis\n                            dataKey=\"data\"\n                            tickFormatter={(tick) => new Date(tick.replace(/(\\d{2})\\/(\\d{2})\\/(\\d{4}),/, '$2/$1/$3')).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                        />\n                        <YAxis\n                            domain={getDomain(chartData, activeTab)}\n                            tickFormatter={(value) => value.toFixed(2)} />\n                        <Tooltip\n                            formatter={(value, name) => {\n                                switch (name) {\n                                    case 'chuva':\n                                        return [`${value} mm`, 'Chuva'];\n                                    case 'nivel':\n                                        return [`${value} cm`, 'Nível'];\n                                    case 'vazao':\n                                        return [`${value} m³/s`, 'Vazão'];\n                                    default:\n                                        return [value, name];\n                                }\n                            }}\n                        />\n                        {activeTab === 'chuva' && (\n                            <Line type=\"monotone\" dataKey=\"chuva\" stroke=\"#8884d8\" dot={true} />\n                        )}\n                        {activeTab === 'nivel' && (\n                            <Line type=\"monotone\" dataKey=\"nivel\" stroke=\"#82ca9d\" dot={true} />\n                        )}\n                        {activeTab === 'vazao' && (\n                            <Line type=\"monotone\" dataKey=\"vazao\" stroke=\"#ffc658\" dot={true} />\n                        )}\n                    </LineChart>\n                </ResponsiveContainer>\n                <button\n                    className=\"view-more-button\"\n                    onClick={() => navigate('/all-hydro-data', { state: { data: hydroData, stationCode, stationName } })}\n                >\n                    Ver Mais\n                </button>\n            </div>\n        );\n    };\n\n    const renderRainSummary = (rainSummary, stationCode) => {\n        if (!selectedRainSummary || !Object.values(selectedRainSummary).some(v => v)) return null;\n        if (!rainSummary || rainSummary.length === 0) return null;\n\n        return (\n            <div>\n                <h5>Resumo de Chuva</h5>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Período</th>\n                            <th style={{ textAlign: 'center' }}>Soma da Chuva (mm)</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rainSummary\n                            .filter(item => selectedRainSummary[item[\"'soma_ult_leituras'\"]])\n                            .map((item, index) => (\n                                <tr key={index}>\n                                    <td>{rainSummaryLabels[item[\"'soma_ult_leituras'\"]] || item[\"'soma_ult_leituras'\"]}</td>\n                                    <td style={{ textAlign: 'center' }}>{formatNumber(item.sum_chuva)}</td>\n                                </tr>\n                            ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    };\n\n    const renderDetails = (stationCode, stationData) => {\n        if (!selectedDetails || !Object.values(selectedDetails).some(v => v)) return null;\n\n        if (!stationData.detalhes || !stationData.detalhes.items || stationData.detalhes.items.length === 0) {\n            return <p>Detalhes não disponíveis para esta estação.</p>;\n        }\n\n        return (\n            <div>\n                <h5>Detalhes</h5>\n                <table>\n                    <colgroup>\n                        <col style={{ width: '155px' }} />\n                        <col style={{ width: 'auto' }} />\n                    </colgroup>\n                    <thead>\n                        <tr>\n                            <th>Chave</th>\n                            <th style={{ textAlign: 'center' }}>Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Object.keys(stationData.detalhes.items[0]).map((key) => (\n                            selectedDetails[key] && (\n                                <tr key={key}>\n                                    <td>{detailLabels[key]}</td>\n                                    <td style={{ textAlign: 'center' }}>{stationData.detalhes.items[0][key]}</td>\n                                </tr>\n                            )\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    };\n\n    if (!data) return null;\n\n    return (\n        <div className=\"stations-container\">\n            {Object.keys(data).map((stationCode) => (\n                <div className=\"station-card\" key={stationCode}>\n                    <h4>Estação {stationCode}</h4>\n                    <p style={{ marginBottom: '-5px ' }}>{data[stationCode].nome || 'Nome não disponível'}</p>\n                    {renderDetails(stationCode, data[stationCode])}\n                    {renderHydroData(data[stationCode].hidro_24h?.items, stationCode, data[stationCode].nome)}\n                    {renderRainSummary(data[stationCode].chuva_ult?.items, stationCode)}\n                </div>\n            ))}\n        </div>\n    );\n});\n\nexport default DataView;\n","import React from 'react';\nimport './css/Popup.css'; // Importa o CSS\n\nconst Popup = ({ message, onClose }) => {\n  return (\n    <div className=\"popup-overlay\">\n      <div className=\"popup-content\">\n        <p>{message}</p>\n        <button onClick={onClose}>Fechar</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Popup;\n","import React from 'react';\r\nimport './css/PreviewModal.css';\r\nimport { mapPeriodLabel, headerDictionary, formatDate, formatNumber, detailLabels } from '../utils/utils';\r\n\r\nconst PreviewModal = ({ data, onConfirm, onCancel, selectedDetails = {}, selectedHydro24h = {}, selectedRainSummary = {} }) => {\r\n  console.log('Dados para pré-visualização:', data);\r\n\r\n  if (!data) {\r\n    return null;\r\n  }\r\n\r\n  const renderTable = (title, tableData, columns, isScrollable = false) => (\r\n    <div className={isScrollable ? \"table-overflow\" : \"\"}>\r\n      <h4>{title}</h4>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {columns.map((col, index) => (\r\n              <th key={index}>{headerDictionary[col] || detailLabels[col] || col}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableData.map((row, index) => (\r\n            <tr key={index}>\r\n              {columns.map((col, colIndex) => (\r\n                <td key={colIndex}>\r\n                {col === 'soma_ult_leituras'\r\n                  ? mapPeriodLabel(row[col])\r\n                  : col === 'data'\r\n                  ? formatDate(row[col])\r\n                  : col === 'PERÍODO'\r\n                  ? row['period'] // Usando 'period' para acessar os dados corretos\r\n                  : row[col] !== null && row[col] !== undefined\r\n                  ? formatNumber(row[col])\r\n                  : 'N/A'}\r\n              </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n\r\n  const detalhesData = data.filter(d => d.category === 'Detalhes');\r\n  const hidro24hData = data.filter(d => d.category === 'Hidro 24h');\r\n  const chuvaUltData = data.filter(d => d.category === 'Resumo chuvas');\r\n\r\n  const selectedDetailColumns = Object.keys(selectedDetails).filter(key => selectedDetails[key]);\r\n  const selectedHydrodataColumns = Object.keys(selectedHydro24h).filter(key => selectedHydro24h[key]);\r\n  const selectedRainSummaryColumns = ['stationCode', 'PERÍODO', 'sum_chuva'];\r\n\r\n  return (\r\n    <div className=\"preview-modal-overlay\">\r\n      <div className=\"preview-modal\">\r\n        <h3>Pré-visualização dos Dados</h3>\r\n        <div className=\"preview-table\">\r\n          {selectedDetailColumns.length > 0 && detalhesData.length > 0 && renderTable('Ficha das estações', detalhesData, ['stationCode', ...selectedDetailColumns], true)}\r\n          {selectedRainSummaryColumns.length > 0 && chuvaUltData.length > 0 && renderTable('Resumo de chuvas', chuvaUltData, selectedRainSummaryColumns)}\r\n          {selectedHydrodataColumns.length > 0 && hidro24hData.length > 0 && renderTable('Histórico 24h', hidro24hData, ['stationCode', ...selectedHydrodataColumns])}\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <button className=\"confirm-button\" onClick={onConfirm}>Confirmar Download</button>\r\n          <button className=\"cancel-button\" onClick={onCancel}>Cancelar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewModal;\r\n","// hydro-station-data/src/components/DataInputPage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { fetchStationDetails, fetchHydro24h, fetchRainSummary } from '../api/apiService';\r\nimport DataView from './DataView';\r\nimport './css/DataInputPage.css';\r\nimport Popup from './Popup';\r\nimport { saveAs } from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport { detailLabels, hydroDataLabels, rainSummaryLabels, mapPeriodLabel, replaceColumnNames, setColumnWidths } from '../utils/utils';\r\nimport { useLoading } from '../context/LoadingContext';\r\nimport PreviewModal from './PreviewModal';\r\n\r\nconst DataInputPage = () => {\r\n  const { setLoading } = useLoading();\r\n\r\n  const [codes, setCodes] = useState(localStorage.getItem('codes') || '');\r\n  const [data, setData] = useState(JSON.parse(localStorage.getItem('data')) || null);\r\n\r\n  const [selectedData] = useState(JSON.parse(localStorage.getItem('selectedData')) || {\r\n    detalhes: true,\r\n    hidro_24h: true,\r\n    chuva_ult: true,\r\n  });\r\n\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [popupMessage, setPopupMessage] = useState('');\r\n\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [previewData, setPreviewData] = useState([]);\r\n\r\n  const initialDetails = Object.keys(detailLabels).reduce((acc, key) => {\r\n    acc[key] = true; // Define todos os filtros como true\r\n    return acc;\r\n  }, {});\r\n\r\n  const initialRainSummary = Object.keys(rainSummaryLabels).reduce((acc, key) => {\r\n    acc[key] = true; // Define todos os filtros como true\r\n    return acc;\r\n  }, {});\r\n\r\n  const initialHydro24h = Object.keys(hydroDataLabels).reduce((acc, key) => {\r\n    acc[key] = true; // Define todos os filtros como true\r\n    return acc;\r\n  }, {});\r\n\r\n  const [selectedDetails, setSelectedDetails] = useState(\r\n    JSON.parse(localStorage.getItem('selectedDetails')) || initialDetails\r\n  );\r\n\r\n  const [selectedRainSummary, setSelectedRainSummary] = useState(\r\n    JSON.parse(localStorage.getItem('selectedRainSummary')) || initialRainSummary\r\n  );\r\n\r\n  const [selectedHydro24h, setSelectedHydro24h] = useState(\r\n    JSON.parse(localStorage.getItem('selectedHydro24h')) || initialHydro24h\r\n  );\r\n\r\n\r\n  // Memoized data for caching\r\n  const memoizedData = {};\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const timer = setTimeout(() => setLoading(false), 650);\r\n    return () => clearTimeout(timer);\r\n  }, [setLoading]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('codes', codes);\r\n  }, [codes]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('data', JSON.stringify(data));\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedData', JSON.stringify(selectedData));\r\n  }, [selectedData]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedDetails', JSON.stringify(selectedDetails));\r\n  }, [selectedDetails]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedRainSummary', JSON.stringify(selectedRainSummary));\r\n  }, [selectedRainSummary]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedHydro24h', JSON.stringify(selectedHydro24h));\r\n  }, [selectedHydro24h]);\r\n\r\n\r\n  const fetchData = async () => {\r\n    if (!codes) {\r\n      setPopupMessage('Por favor, digite os códigos das estações.');\r\n      setShowPopup(true);\r\n      return null;\r\n    }\r\n  \r\n    const noDetailsSelected = selectedData.detalhes && !Object.values(selectedDetails).some(v => v);\r\n    const noRainSummarySelected = selectedData.chuva_ult && !Object.values(selectedRainSummary).some(v => v);\r\n    const noHydro24hSelected = selectedData.hidro_24h && !Object.values(selectedHydro24h).some(v => v);\r\n  \r\n    if (noDetailsSelected && noRainSummarySelected && noHydro24hSelected) {\r\n      setPopupMessage('Por favor, selecione pelo menos um filtro em uma das categorias.');\r\n      setShowPopup(true);\r\n      return null;\r\n    }\r\n  \r\n    setLoading(true);\r\n    const codesArray = codes.split(',').map(code => code.trim()).filter(code => code);\r\n    const fetchedData = {};\r\n    const invalidCodes = new Set();\r\n  \r\n    const requests = codesArray.map(async (code) => {\r\n      if (memoizedData[code]) {\r\n        fetchedData[code] = memoizedData[code];\r\n        return;\r\n      }\r\n  \r\n      fetchedData[code] = {};\r\n  \r\n      try {\r\n        const details = await fetchStationDetails(code);\r\n        if (details.data && details.data.items && details.data.items[0]) {\r\n          fetchedData[code].nome = details.data.items[0].nome;\r\n          if (selectedData.detalhes) {\r\n            fetchedData[code].detalhes = details.data;\r\n          }\r\n        } else {\r\n          invalidCodes.add(code);\r\n        }\r\n      } catch (error) {\r\n        console.error(`Erro ao buscar detalhes da estação ${code}:`, error);\r\n        invalidCodes.add(code);\r\n      }\r\n  \r\n      if (selectedData.hidro_24h) {\r\n        try {\r\n          const hidro24h = await fetchHydro24h(code);\r\n          if (hidro24h.data) {\r\n            fetchedData[code].hidro_24h = hidro24h.data;\r\n          } else {\r\n            invalidCodes.add(code);\r\n          }\r\n        } catch (error) {\r\n          console.error(`Erro ao buscar dados hidrométricos para a estação ${code}:`, error);\r\n          invalidCodes.add(code);\r\n        }\r\n      }\r\n  \r\n      if (selectedData.chuva_ult) {\r\n        try {\r\n          const chuvaUlt = await fetchRainSummary(code);\r\n          if (chuvaUlt.data) {\r\n            fetchedData[code].chuva_ult = chuvaUlt.data;\r\n          } else {\r\n            invalidCodes.add(code);\r\n          }\r\n        } catch (error) {\r\n          console.error(`Erro ao buscar resumo de chuva para a estação ${code}:`, error);\r\n          invalidCodes.add(code);\r\n        }\r\n      }\r\n  \r\n      memoizedData[code] = fetchedData[code];\r\n    });\r\n  \r\n    await Promise.all(requests);\r\n  \r\n    // Remover estações sem dados válidos\r\n    const validData = {};\r\n    Object.keys(fetchedData).forEach(code => {\r\n      if (\r\n        fetchedData[code].detalhes ||\r\n        (fetchedData[code].hidro_24h && fetchedData[code].hidro_24h.items && fetchedData[code].hidro_24h.items.length > 0) ||\r\n        (fetchedData[code].chuva_ult && fetchedData[code].chuva_ult.items && fetchedData[code].chuva_ult.items.length > 0)\r\n      ) {\r\n        validData[code] = fetchedData[code];\r\n      } else {\r\n        invalidCodes.add(code);\r\n      }\r\n    });\r\n  \r\n    if (invalidCodes.size > 0) {\r\n      setPopupMessage(`Os seguintes códigos de estação são inválidos ou não possuem dados: ${[...invalidCodes].join(', ')}`);\r\n      setShowPopup(true);\r\n    }\r\n  \r\n    setData(validData);\r\n    setLoading(false);\r\n    return validData;\r\n  };\r\n  \r\n\r\n\r\n\r\n  const handleFetchData = async () => {\r\n    const fetchedData = await fetchData();\r\n    if (fetchedData) {\r\n      setData(fetchedData);\r\n    }\r\n  };\r\n\r\n  const fetchDataAndFilter = async () => {\r\n    const fetchedData = await fetchData();\r\n    if (!fetchedData) return;\r\n\r\n    const filteredData = {};\r\n    for (let code in fetchedData) {\r\n      filteredData[code] = { ...fetchedData[code] };\r\n\r\n      if (selectedData.detalhes) {\r\n        filteredData[code].detalhes = {\r\n          items: fetchedData[code].detalhes.items.map((item) =>\r\n            Object.fromEntries(\r\n              Object.entries(item).filter(([key]) => selectedDetails[key])\r\n            )\r\n          )\r\n        };\r\n      } else {\r\n        delete filteredData[code].detalhes;\r\n      }\r\n\r\n      if (selectedData.hidro_24h) {\r\n        filteredData[code].hidro_24h = {\r\n          items: fetchedData[code].hidro_24h.items.map((item) =>\r\n            Object.fromEntries(\r\n              Object.entries(item).filter(([key]) => selectedHydro24h[key])\r\n            )\r\n          )\r\n        };\r\n      } else {\r\n        delete filteredData[code].hidro_24h;\r\n      }\r\n\r\n      if (selectedData.chuva_ult) {\r\n        filteredData[code].chuva_ult = {\r\n          items: fetchedData[code].chuva_ult.items.filter((item) => {\r\n            const periodKey = item[\"'soma_ult_leituras'\"];\r\n            return selectedRainSummary[periodKey];\r\n          })\r\n        };\r\n      } else {\r\n        delete filteredData[code].chuva_ult;\r\n      }\r\n\r\n    }\r\n\r\n    console.log('Dados filtrados:', filteredData);\r\n    return filteredData;\r\n  };\r\n\r\n\r\n  const handlePreview = async () => {\r\n    const filteredData = await fetchDataAndFilter();\r\n    if (filteredData) {\r\n      const allData = flattenData(filteredData);\r\n      console.log('Dados para pré-visualização:', allData);\r\n      setPreviewData(allData);\r\n      setShowPreview(true);\r\n    }\r\n  };\r\n\r\n\r\n  const flattenData = (data) => {\r\n    const flattened = [];\r\n    Object.keys(data).forEach(stationCode => {\r\n      const stationData = data[stationCode];\r\n      if (selectedData.detalhes && stationData.detalhes) {\r\n        stationData.detalhes.items.forEach(item => {\r\n          const filteredItem = Object.keys(item).reduce((acc, key) => {\r\n            if (selectedDetails[key]) {\r\n              acc[key] = item[key];\r\n            }\r\n            return acc;\r\n          }, {});\r\n          flattened.push({ category: 'Detalhes', stationCode, ...filteredItem });\r\n        });\r\n      }\r\n      if (selectedData.hidro_24h && stationData.hidro_24h) {\r\n        stationData.hidro_24h.items.forEach(item => {\r\n          const filteredItem = Object.keys(item).reduce((acc, key) => {\r\n            if (selectedHydro24h[key]) {\r\n              acc[key] = item[key];\r\n            }\r\n            return acc;\r\n          }, {});\r\n          flattened.push({ category: 'Hidro 24h', stationCode, ...filteredItem });\r\n        });\r\n      }\r\n      if (selectedData.chuva_ult && stationData.chuva_ult) {\r\n        stationData.chuva_ult.items.forEach(item => {\r\n          const periodKey = item[\"'soma_ult_leituras'\"];\r\n          if (selectedRainSummary[periodKey]) {\r\n            const periodLabel = mapPeriodLabel(periodKey);\r\n            flattened.push({\r\n              category: 'Resumo chuvas',\r\n              stationCode,\r\n              period: periodLabel,\r\n              sum_chuva: item.sum_chuva\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return flattened;\r\n  };\r\n\r\n\r\n  const handleDownloadData = async () => {\r\n    const fetchedData = await fetchData();\r\n    if (!fetchedData) return;\r\n\r\n    const flattenedData = flattenData(fetchedData, selectedData, selectedDetails, selectedHydro24h, selectedRainSummary);\r\n\r\n    const labelMap = {\r\n      stationCode: 'Código',\r\n      period: 'Período',\r\n      data: 'Data',\r\n      chuva: 'Chuva',\r\n      nivel: 'Nível (cm)',\r\n      vazao: 'Vazão (m³/s)',\r\n      sum_chuva: 'Soma da Chuva (mm)',\r\n      nome: 'Nome',\r\n      // Adicione outros mapeamentos conforme necessário\r\n    };\r\n\r\n    const workbook = XLSX.utils.book_new();\r\n\r\n    // Filtrando apenas os dados que foram selecionados e aparecem em DataView e PreviewModal\r\n    const detailsData = flattenedData.filter(d => d.category === 'Detalhes');\r\n    if (detailsData.length > 0 && Object.values(selectedDetails).some(v => v)) {\r\n      const detailsDataWithHeaders = replaceColumnNames(detailsData, labelMap);\r\n      const detailsWorksheet = XLSX.utils.aoa_to_sheet(detailsDataWithHeaders);\r\n      setColumnWidths(detailsWorksheet, detailsData);\r\n      XLSX.utils.book_append_sheet(workbook, detailsWorksheet, 'Detalhes');\r\n    }\r\n\r\n    const hydro24hData = flattenedData.filter(d => d.category === 'Hidro 24h');\r\n    if (hydro24hData.length > 0 && Object.values(selectedHydro24h).some(v => v)) {\r\n      const hydro24hDataWithHeaders = replaceColumnNames(hydro24hData, labelMap);\r\n      const hydro24hWorksheet = XLSX.utils.aoa_to_sheet(hydro24hDataWithHeaders);\r\n      setColumnWidths(hydro24hWorksheet, hydro24hData);\r\n      XLSX.utils.book_append_sheet(workbook, hydro24hWorksheet, 'Hidro 24h');\r\n    }\r\n\r\n    const rainSummaryData = flattenedData.filter(d => d.category === 'Resumo chuvas');\r\n    if (rainSummaryData.length > 0 && Object.values(selectedRainSummary).some(v => v)) {\r\n      const rainSummaryDataWithHeaders = replaceColumnNames(rainSummaryData, labelMap);\r\n      const rainSummaryWorksheet = XLSX.utils.aoa_to_sheet(rainSummaryDataWithHeaders);\r\n      setColumnWidths(rainSummaryWorksheet, rainSummaryData);\r\n      XLSX.utils.book_append_sheet(workbook, rainSummaryWorksheet, 'Resumo chuvas');\r\n    }\r\n\r\n    if (workbook.SheetNames.length === 0) {\r\n      console.warn(\"Nenhuma categoria de dados selecionada para download.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const xlsxData = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n    const blob = new Blob([xlsxData], { type: 'application/octet-stream' });\r\n    saveAs(blob, 'hydro_station_data.xlsx');\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n\r\n  const handleDetailsCheckboxChange = (e) => {\r\n    setSelectedDetails({\r\n      ...selectedDetails,\r\n      [e.target.name]: e.target.checked,\r\n    });\r\n  };\r\n\r\n  const handleRainSummaryCheckboxChange = (e) => {\r\n    setSelectedRainSummary({\r\n      ...selectedRainSummary,\r\n      [e.target.name]: e.target.checked,\r\n    });\r\n  };\r\n\r\n  const handleHydro24hCheckboxChange = (e) => {\r\n    setSelectedHydro24h({\r\n      ...selectedHydro24h,\r\n      [e.target.name]: e.target.checked,\r\n    });\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setShowPopup(false);\r\n  };\r\n\r\n  const closePreview = () => {\r\n    setShowPreview(false);\r\n  };\r\n\r\n  const confirmDownload = () => {\r\n    setShowPreview(false);\r\n    handleDownloadData();\r\n  };\r\n\r\n  const selectAll = (category, isSelected) => {\r\n    if (category === 'detalhes') {\r\n      const newSelectedDetails = Object.keys(selectedDetails).reduce((acc, key) => {\r\n        acc[key] = isSelected;\r\n        return acc;\r\n      }, {});\r\n      setSelectedDetails(newSelectedDetails);\r\n    } else if (category === 'chuva_ult') {\r\n      const newSelectedRainSummary = Object.keys(selectedRainSummary).reduce((acc, key) => {\r\n        acc[key] = isSelected;\r\n        return acc;\r\n      }, {});\r\n      setSelectedRainSummary(newSelectedRainSummary);\r\n    } else if (category === 'hidro_24h') {\r\n      const newSelectedHydro24h = Object.keys(selectedHydro24h).reduce((acc, key) => {\r\n        acc[key] = isSelected;\r\n        return acc;\r\n      }, {});\r\n      setSelectedHydro24h(newSelectedHydro24h);\r\n    }\r\n  };\r\n\r\n  // Estados de visibilidade\r\n  const [showDetails, setShowDetails] = useState(true);\r\n  const [showRainSummary, setShowRainSummary] = useState(true);\r\n  const [showHydro24h, setShowHydro24h] = useState(true);\r\n\r\n  const toggleVisibility = (category) => {\r\n    if (category === 'detalhes') {\r\n      setShowDetails(prev => !prev);\r\n    } else if (category === 'chuva_ult') {\r\n      setShowRainSummary(prev => !prev);\r\n    } else if (category === 'hidro_24h') {\r\n      setShowHydro24h(prev => !prev);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Painel de Controle de Dados</h2>\r\n      <label className='list-stations'>\r\n        Lista de códigos de estações:\r\n      </label>\r\n      <textarea\r\n        rows=\"5\"\r\n        cols=\"50\"\r\n        placeholder=\"Digite os códigos das estações separados por vírgulas\"\r\n        value={codes}\r\n        onChange={(e) => setCodes(e.target.value)}\r\n        style={{ resize: 'vertical' }}\r\n      ></textarea>\r\n      <div className=\"filters-container\">\r\n        <div className=\"category\">\r\n          <h3 onClick={() => toggleVisibility('detalhes')}>Ficha da estação</h3>\r\n          {showDetails && (\r\n            <>\r\n              <div className=\"select-buttons\">\r\n                <button onClick={() => selectAll('detalhes', true)}>Selecionar todos</button>\r\n                <button onClick={() => selectAll('detalhes', false)}>Desmarcar todos</button>\r\n              </div>\r\n              <div className=\"filters\">\r\n                {Object.keys(selectedDetails).filter(key => key !== 'codigo').map((key) => (\r\n                  <label key={key} className='label-checkbox'>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={key}\r\n                      className=\"details-checkbox\"\r\n                      checked={selectedDetails[key]}\r\n                      onChange={handleDetailsCheckboxChange}\r\n                    />\r\n                    {detailLabels[key]}\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"category\">\r\n          <h3 onClick={() => toggleVisibility('chuva_ult')}>Resumo de Chuva</h3>\r\n          {showRainSummary && (\r\n            <>\r\n              <div className=\"select-buttons\">\r\n                <button onClick={() => selectAll('chuva_ult', true)}>Selecionar todos</button>\r\n                <button onClick={() => selectAll('chuva_ult', false)}>Desmarcar todos</button>\r\n              </div>\r\n              <div className=\"filters\">\r\n                {Object.keys(selectedRainSummary).map((key) => (\r\n                  <label key={key} className='label-checkbox'>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={key}\r\n                      className=\"rain-checkbox\"\r\n                      checked={selectedRainSummary[key]}\r\n                      onChange={handleRainSummaryCheckboxChange}\r\n                    />\r\n                    {rainSummaryLabels[key] || key}\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"category\">\r\n          <h3 onClick={() => toggleVisibility('hidro_24h')}>Dados Hidrométricos 24h</h3>\r\n          {showHydro24h && (\r\n            <>\r\n              <div className=\"select-buttons\">\r\n                <button onClick={() => selectAll('hidro_24h', true)}>Selecionar todos</button>\r\n                <button onClick={() => selectAll('hidro_24h', false)}>Desmarcar todos</button>\r\n              </div>\r\n              <div className=\"filters\">\r\n                {Object.keys(selectedHydro24h).map((key) => (\r\n                  <label key={key} className='label-checkbox'>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={key}\r\n                      className=\"hydro-checkbox\"\r\n                      checked={selectedHydro24h[key]}\r\n                      onChange={handleHydro24hCheckboxChange}\r\n                    />\r\n                    {hydroDataLabels[key]}\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button onClick={handleFetchData}>Buscar e Exibir Dados</button>\r\n      <button onClick={handlePreview}>Revisar Dados Antes do Download</button>\r\n      <button onClick={confirmDownload}>Confirmar e Baixar Dados XLSX</button>\r\n      {data && <DataView\r\n        className=\"data-view\"\r\n        data={data}\r\n        selectedDetails={selectedDetails}\r\n        selectedRainSummary={selectedRainSummary}\r\n        selectedHydro24h={selectedHydro24h}\r\n      />}\r\n\r\n      {showPopup && (\r\n        <Popup message={popupMessage} onClose={closePopup} />\r\n      )}\r\n\r\n      {showPreview && (\r\n        <PreviewModal\r\n          data={previewData}\r\n          onConfirm={confirmDownload}\r\n          onCancel={closePreview}\r\n          selectedDetails={selectedDetails}\r\n          selectedRainSummary={selectedRainSummary}\r\n          selectedHydro24h={selectedHydro24h}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataInputPage;\r\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport { formatDate, getDomain } from '../utils/utils';\nimport './css/DataView.css';\n\nconst AllHydroDataPage = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const { data, stationCode, stationName } = location.state || {};\n\n    if (!data) {\n        return <div>Nenhum dado disponível.</div>;\n    }\n\n    const chartData = data.map(item => ({\n        data: formatDate(item.data),\n        chuva: parseFloat(item.chuva),\n        nivel: parseFloat(item.nivel),\n        vazao: parseFloat(item.vazao),\n    }));\n  \n    return (\n        <div className=\"all-hydro-data-container\">\n            <div className=\"station-header\">\n                <div className=\"station-header-inner\">\n                    <h3 className=\"station-code\">Estação {stationCode}</h3>\n                    <h4 className=\"station-name\">{stationName || 'Nome não disponível'}</h4>\n                </div>\n                <h3 style={{ margin: '0' }}>Dados Hidrométricos 24h</h3>\n            </div>\n\n            {/* Gráfico de Chuva */}\n            <div className=\"chart-container\">\n                <h4>Chuva (mm)</h4>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                    <LineChart data={chartData.slice().reverse()} margin={{ left: 10, right: 20 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"data\" tickFormatter={(tick) => new Date(tick.replace(/(\\d{2})\\/(\\d{2})\\/(\\d{4}),/, '$2/$1/$3')).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })} />\n                        <YAxis domain={getDomain(chartData,'chuva')} />\n                        <Tooltip formatter={(value) => `${value} mm`} />\n                        <Line type=\"monotone\" dataKey=\"chuva\" stroke=\"#8884d8\" dot={true} />\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n\n            {/* Gráfico de Nível */}\n            <div className=\"chart-container\">\n                <h4>Nível (cm)</h4>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                    <LineChart data={chartData.slice().reverse()} margin={{ left: 25, right: 20 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"data\" tickFormatter={(tick) => new Date(tick.replace(/(\\d{2})\\/(\\d{2})\\/(\\d{4}),/, '$2/$1/$3')).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })} />\n                        <YAxis domain={getDomain('nivel')} />\n                        <Tooltip formatter={(value) => `${value} cm`} />\n                        <Line type=\"monotone\" dataKey=\"nivel\" stroke=\"#82ca9d\" dot={true} />\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n\n            {/* Gráfico de Vazão */}\n            <div className=\"chart-container\">\n                <h4>Vazão (m³/s)</h4>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                    <LineChart data={chartData.slice().reverse()} margin={{ left: 30, right: 20 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"data\" tickFormatter={(tick) => new Date(tick.replace(/(\\d{2})\\/(\\d{2})\\/(\\d{4}),/, '$2/$1/$3')).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })} />\n                        <YAxis domain={getDomain('vazao')} />\n                        <Tooltip formatter={(value) => `${value} m³/s`} />\n                        <Line type=\"monotone\" dataKey=\"vazao\" stroke=\"#ffc658\" dot={true} />\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n            \n            <button className='btn-voltar' onClick={() => navigate(-1)}>Voltar</button>\n        </div>\n    );\n};\n\nexport default AllHydroDataPage;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { formatNumber } from '../utils/utils'; // Importa os utilitários\n\n\n// Componente para exibir os detalhes da estação\nconst StationDetailsPage = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const stationData = location.state?.data;\n\n    if (!stationData) {\n        return <div>Nenhum dado disponível.</div>;\n    }\n\n    return (\n        <div>\n            <h3>Detalhes da Estação {stationData.detalhes.items[0].codigo}</h3>\n            <table>\n                <tbody>\n                    <tr>\n                        <td>Código</td>\n                        <td>{stationData.detalhes.items[0].codigo}</td>\n                    </tr>\n                    <tr>\n                        <td>Nome</td>\n                        <td>{stationData.detalhes.items[0].nome}</td>\n                    </tr>\n                    <tr>\n                        <td>Bacia</td>\n                        <td>{stationData.detalhes.items[0].bacia}</td>\n                    </tr>\n                    <tr>\n                        <td>Rio</td>\n                        <td>{stationData.detalhes.items[0].rio}</td>\n                    </tr>\n                    <tr>\n                        <td>Estado</td>\n                        <td>{stationData.detalhes.items[0].estado}</td>\n                    </tr>\n                    <tr>\n                        <td>Município</td>\n                        <td>{stationData.detalhes.items[0].municipio}</td>\n                    </tr>\n                    <tr>\n                        <td>Responsável</td>\n                        <td>{stationData.detalhes.items[0].responsavel}</td>\n                    </tr>\n                    <tr>\n                        <td>Operadora</td>\n                        <td>{stationData.detalhes.items[0].operadora}</td>\n                    </tr>\n                    <tr>\n                        <td>Latitude</td>\n                        <td>{formatNumber(stationData.detalhes.items[0].latitude)}</td>\n                    </tr>\n                    <tr>\n                        <td>Longitude</td>\n                        <td>{formatNumber(stationData.detalhes.items[0].longitude)}</td>\n                    </tr>\n                    <tr>\n                        <td>Área de Drenagem</td>\n                        <td>{formatNumber(stationData.detalhes.items[0].areadrenagem)}</td>\n                    </tr>\n                    <tr>\n                        <td>Tipo de Estação</td>\n                        <td>{stationData.detalhes.items[0].tipoestacao}</td>\n                    </tr>\n                    <tr>\n                        <td>Operando</td>\n                        <td>{stationData.detalhes.items[0].operando}</td>\n                    </tr>\n                    <tr>\n                        <td>Telemétrica</td>\n                        <td>{stationData.detalhes.items[0].telemetrica}</td>\n                    </tr>\n                    <tr>\n                        <td>Climatológica</td>\n                        <td>{stationData.detalhes.items[0].climatologica}</td>\n                    </tr>\n                    <tr>\n                        <td>Pluviômetro</td>\n                        <td>{stationData.detalhes.items[0].pluviometro}</td>\n                    </tr>\n                    <tr>\n                        <td>Registrador de Chuva</td>\n                        <td>{stationData.detalhes.items[0].registradorchuva}</td>\n                    </tr>\n                    <tr>\n                        <td>Escala</td>\n                        <td>{stationData.detalhes.items[0].escala}</td>\n                    </tr>\n                    <tr>\n                        <td>Registrador de Nível</td>\n                        <td>{stationData.detalhes.items[0].registradornivel}</td>\n                    </tr>\n                    <tr>\n                        <td>Descarga Líquida</td>\n                        <td>{stationData.detalhes.items[0].descargaliquida}</td>\n                    </tr>\n                    <tr>\n                        <td>Sedimentos</td>\n                        <td>{stationData.detalhes.items[0].sedimentos}</td>\n                    </tr>\n                    <tr>\n                        <td>Qualidade da Água</td>\n                        <td>{stationData.detalhes.items[0].qualidadedaagua}</td>\n                    </tr>\n                    <tr>\n                        <td>Tanque Evapo</td>\n                        <td>{stationData.detalhes.items[0].tanqueevapo}</td>\n                    </tr>\n                </tbody>\n            </table>\n            <button onClick={() => navigate(-1)}>Voltar</button>\n        </div>\n    );\n};\n\nexport default StationDetailsPage;\n    ","// src/components/Loading/Loading.js\nimport React from 'react';\nimport './Loading.css';\n\nconst Loading = () => {\n  return (\n    <div className=\"loading-overlay\">\n      <div className=\"loading-spinner\"></div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\r\nimport HomePage from './components/HomePage';\r\nimport DataInputPage from './components/DataInputPage';\r\nimport AllHydroDataPage from './components/AllHydroDataPage';\r\nimport StationDetailsPage from './components/StationDetailsPage';\r\nimport { LoadingProvider, useLoading } from './context/LoadingContext';\r\nimport Loading from './components/Loading/Loading';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\r\n  const basename = process.env.NODE_ENV === 'development' ? '' : '/hydro-station-data';\r\n\r\n  return (\r\n    <LoadingProvider>\r\n      <Router basename={basename}>\r\n        <nav>\r\n          <ul>\r\n            <li><Link to=\"/\">INÍCIO</Link></li>\r\n            <li><Link to=\"/data-input\">PESQUISAR ESTAÇÕES</Link></li>\r\n          </ul>\r\n        </nav>\r\n        <Routes>\r\n          <Route path=\"/\" element={<HomePage />} />\r\n          <Route path=\"/data-input\" element={<DataInputPage />} />\r\n          <Route path=\"/all-hydro-data\" element={<AllHydroDataPage />} />\r\n          <Route path=\"/station-details\" element={<StationDetailsPage />} />\r\n        </Routes>\r\n        <LoadingOverlay />\r\n      </Router>\r\n    </LoadingProvider>\r\n  );\r\n};\r\n\r\nconst LoadingOverlay = () => {\r\n  const { loading } = useLoading();\r\n  return loading ? <Loading /> : null;\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport './index.css';\r\nimport './styles.css'; // Importe o arquivo CSS\r\n\r\n// Renderiza o aplicativo no elemento root do HTML\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}